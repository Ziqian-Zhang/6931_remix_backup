{
	"id": "8f0ac66a6ede82629e90655f6f48a246",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TreasuryDAO.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\";\nimport \"@aave/core-v3/contracts/interfaces/IPool.sol\";\n\ncontract TreasuryDAO is Ownable, KeeperCompatibleInterface {\n    struct Proposal {\n        address payable recipient;\n        uint256 amount;\n        uint256 votes;\n        uint256 endTime;\n        uint256 unlockTime;  // Time-lock for fund withdrawal\n        bool executed;\n        mapping(address => bool) voted;\n    }\n\n    mapping(address => bool) public members;\n    Proposal[] public proposals;\n    IERC20 public governanceToken;\n    AggregatorV3Interface internal priceFeed;\n    IPool public lendingPool;\n    uint256 public minVoteDuration = 1 days;\n\n    event ProposalCreated(uint proposalId, address recipient, uint256 amount);\n    event Voted(uint proposalId, address voter, uint256 weight);\n    event ProposalExecuted(uint proposalId);\n\n    constructor(address tokenAddress, address oracle, address aavePool, address initialOwner) Ownable(initialOwner) {\n        governanceToken = IERC20(tokenAddress);\n        priceFeed = AggregatorV3Interface(oracle); // Chainlink ETH/USD Price Feed\n        lendingPool = IPool(aavePool);\n        members[initialOwner] = true;\n    }\n\n    modifier onlyMember() {\n        require(members[msg.sender], \"Not a DAO member\");\n        _;\n    }\n\n    function addMember(address member) public onlyOwner {\n        members[member] = true;\n    }\n\n    function proposeFunding(address payable recipient, uint256 amount) public onlyMember {\n        require(address(this).balance >= amount, \"Insufficient treasury balance\");\n        require(getETHPrice() > 1500, \"ETH price too low\");\n\n        proposals.push();\n        Proposal storage newProposal = proposals[proposals.length - 1];\n        newProposal.recipient = recipient;\n        newProposal.amount = amount;\n        newProposal.votes = 0;\n        newProposal.endTime = block.timestamp + minVoteDuration;\n        newProposal.unlockTime = block.timestamp + 48 hours; // Funds locked for 48 hours\n        newProposal.executed = false;\n\n        emit ProposalCreated(proposals.length - 1, recipient, amount);\n    }\n\n    function vote(uint proposalId) public onlyMember {\n        Proposal storage proposal = proposals[proposalId];\n        require(!proposal.voted[msg.sender], \"Already voted\");\n        require(block.timestamp < proposal.endTime, \"Voting period ended\");\n\n        uint256 voterBalance = governanceToken.balanceOf(msg.sender);\n        require(voterBalance > 0, \"Must hold governance tokens to vote\");\n\n        proposal.votes += voterBalance;\n        proposal.voted[msg.sender] = true;\n\n        emit Voted(proposalId, msg.sender, voterBalance);\n    }\n\n    function executeProposal(uint proposalId) public {\n        Proposal storage proposal = proposals[proposalId];\n        require(proposal.votes >= 500 * 10**18, \"Not enough votes (500 tokens required)\");\n        require(!proposal.executed, \"Already executed\");\n        require(block.timestamp >= proposal.unlockTime, \"Funds still locked\");\n\n        proposal.executed = true;\n        proposal.recipient.transfer(proposal.amount);\n\n        emit ProposalExecuted(proposalId);\n    }\n\n    function getETHPrice() public view returns (uint256) {\n        (, int price, , , ) = priceFeed.latestRoundData();\n        return uint(price) / 1e8;\n    }\n\n    function checkUpkeep(bytes calldata /* checkData */) external view override returns (bool upkeepNeeded, bytes memory /* performData */) {\n        for (uint i = 0; i < proposals.length; i++) {\n            if (!proposals[i].executed && proposals[i].votes >= 500 * 10**18 && block.timestamp >= proposals[i].unlockTime) {\n                return (true, abi.encode(i));\n            }\n        }\n        return (false, \"\");\n    }\n\n    function performUpkeep(bytes calldata performData) external override {\n        uint proposalId = abi.decode(performData, (uint));\n        executeProposal(proposalId);\n    }\n\n    function depositToAave(uint256 amount) external onlyOwner {\n        lendingPool.deposit(address(this), amount, address(this), 0);\n    }\n\n    function withdrawFromAave(uint256 amount) external onlyOwner {\n        lendingPool.withdraw(address(this), amount, address(this));\n    }\n\n    function deposit() public payable {}\n\n    function getBalance() public view returns (uint256) {\n        return address(this).balance;\n    }\n}\n\n\n"
			},
			"@aave/core-v3/contracts/interfaces/IPool.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.0;\n\nimport {IPoolAddressesProvider} from './IPoolAddressesProvider.sol';\nimport {DataTypes} from '../protocol/libraries/types/DataTypes.sol';\n\n/**\n * @title IPool\n * @author Aave\n * @notice Defines the basic interface for an Aave Pool.\n */\ninterface IPool {\n  /**\n   * @dev Emitted on mintUnbacked()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address initiating the supply\n   * @param onBehalfOf The beneficiary of the supplied assets, receiving the aTokens\n   * @param amount The amount of supplied assets\n   * @param referralCode The referral code used\n   */\n  event MintUnbacked(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint16 indexed referralCode\n  );\n\n  /**\n   * @dev Emitted on backUnbacked()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param backer The address paying for the backing\n   * @param amount The amount added as backing\n   * @param fee The amount paid in fees\n   */\n  event BackUnbacked(address indexed reserve, address indexed backer, uint256 amount, uint256 fee);\n\n  /**\n   * @dev Emitted on supply()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address initiating the supply\n   * @param onBehalfOf The beneficiary of the supply, receiving the aTokens\n   * @param amount The amount supplied\n   * @param referralCode The referral code used\n   */\n  event Supply(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint16 indexed referralCode\n  );\n\n  /**\n   * @dev Emitted on withdraw()\n   * @param reserve The address of the underlying asset being withdrawn\n   * @param user The address initiating the withdrawal, owner of aTokens\n   * @param to The address that will receive the underlying\n   * @param amount The amount to be withdrawn\n   */\n  event Withdraw(address indexed reserve, address indexed user, address indexed to, uint256 amount);\n\n  /**\n   * @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n   * @param reserve The address of the underlying asset being borrowed\n   * @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n   * initiator of the transaction on flashLoan()\n   * @param onBehalfOf The address that will be getting the debt\n   * @param amount The amount borrowed out\n   * @param interestRateMode The rate mode: 1 for Stable, 2 for Variable\n   * @param borrowRate The numeric rate at which the user has borrowed, expressed in ray\n   * @param referralCode The referral code used\n   */\n  event Borrow(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    DataTypes.InterestRateMode interestRateMode,\n    uint256 borrowRate,\n    uint16 indexed referralCode\n  );\n\n  /**\n   * @dev Emitted on repay()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The beneficiary of the repayment, getting his debt reduced\n   * @param repayer The address of the user initiating the repay(), providing the funds\n   * @param amount The amount repaid\n   * @param useATokens True if the repayment is done using aTokens, `false` if done with underlying asset directly\n   */\n  event Repay(\n    address indexed reserve,\n    address indexed user,\n    address indexed repayer,\n    uint256 amount,\n    bool useATokens\n  );\n\n  /**\n   * @dev Emitted on swapBorrowRateMode()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user swapping his rate mode\n   * @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\n   */\n  event SwapBorrowRateMode(\n    address indexed reserve,\n    address indexed user,\n    DataTypes.InterestRateMode interestRateMode\n  );\n\n  /**\n   * @dev Emitted on borrow(), repay() and liquidationCall() when using isolated assets\n   * @param asset The address of the underlying asset of the reserve\n   * @param totalDebt The total isolation mode debt for the reserve\n   */\n  event IsolationModeTotalDebtUpdated(address indexed asset, uint256 totalDebt);\n\n  /**\n   * @dev Emitted when the user selects a certain asset category for eMode\n   * @param user The address of the user\n   * @param categoryId The category id\n   */\n  event UserEModeSet(address indexed user, uint8 categoryId);\n\n  /**\n   * @dev Emitted on setUserUseReserveAsCollateral()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user enabling the usage as collateral\n   */\n  event ReserveUsedAsCollateralEnabled(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on setUserUseReserveAsCollateral()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user enabling the usage as collateral\n   */\n  event ReserveUsedAsCollateralDisabled(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on rebalanceStableBorrowRate()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user for which the rebalance has been executed\n   */\n  event RebalanceStableBorrowRate(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on flashLoan()\n   * @param target The address of the flash loan receiver contract\n   * @param initiator The address initiating the flash loan\n   * @param asset The address of the asset being flash borrowed\n   * @param amount The amount flash borrowed\n   * @param interestRateMode The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\n   * @param premium The fee flash borrowed\n   * @param referralCode The referral code used\n   */\n  event FlashLoan(\n    address indexed target,\n    address initiator,\n    address indexed asset,\n    uint256 amount,\n    DataTypes.InterestRateMode interestRateMode,\n    uint256 premium,\n    uint16 indexed referralCode\n  );\n\n  /**\n   * @dev Emitted when a borrower is liquidated.\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n   * @param user The address of the borrower getting liquidated\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n   * @param liquidatedCollateralAmount The amount of collateral received by the liquidator\n   * @param liquidator The address of the liquidator\n   * @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n   * to receive the underlying collateral asset directly\n   */\n  event LiquidationCall(\n    address indexed collateralAsset,\n    address indexed debtAsset,\n    address indexed user,\n    uint256 debtToCover,\n    uint256 liquidatedCollateralAmount,\n    address liquidator,\n    bool receiveAToken\n  );\n\n  /**\n   * @dev Emitted when the state of a reserve is updated.\n   * @param reserve The address of the underlying asset of the reserve\n   * @param liquidityRate The next liquidity rate\n   * @param stableBorrowRate The next stable borrow rate\n   * @param variableBorrowRate The next variable borrow rate\n   * @param liquidityIndex The next liquidity index\n   * @param variableBorrowIndex The next variable borrow index\n   */\n  event ReserveDataUpdated(\n    address indexed reserve,\n    uint256 liquidityRate,\n    uint256 stableBorrowRate,\n    uint256 variableBorrowRate,\n    uint256 liquidityIndex,\n    uint256 variableBorrowIndex\n  );\n\n  /**\n   * @dev Emitted when the protocol treasury receives minted aTokens from the accrued interest.\n   * @param reserve The address of the reserve\n   * @param amountMinted The amount minted to the treasury\n   */\n  event MintedToTreasury(address indexed reserve, uint256 amountMinted);\n\n  /**\n   * @notice Mints an `amount` of aTokens to the `onBehalfOf`\n   * @param asset The address of the underlying asset to mint\n   * @param amount The amount to mint\n   * @param onBehalfOf The address that will receive the aTokens\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   */\n  function mintUnbacked(\n    address asset,\n    uint256 amount,\n    address onBehalfOf,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @notice Back the current unbacked underlying with `amount` and pay `fee`.\n   * @param asset The address of the underlying asset to back\n   * @param amount The amount to back\n   * @param fee The amount paid in fees\n   * @return The backed amount\n   */\n  function backUnbacked(address asset, uint256 amount, uint256 fee) external returns (uint256);\n\n  /**\n   * @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n   * - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n   * @param asset The address of the underlying asset to supply\n   * @param amount The amount to be supplied\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   *   is a different wallet\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   */\n  function supply(address asset, uint256 amount, address onBehalfOf, uint16 referralCode) external;\n\n  /**\n   * @notice Supply with transfer approval of asset to be supplied done via permit function\n   * see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n   * @param asset The address of the underlying asset to supply\n   * @param amount The amount to be supplied\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   *   is a different wallet\n   * @param deadline The deadline timestamp that the permit is valid\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   * @param permitV The V parameter of ERC712 permit sig\n   * @param permitR The R parameter of ERC712 permit sig\n   * @param permitS The S parameter of ERC712 permit sig\n   */\n  function supplyWithPermit(\n    address asset,\n    uint256 amount,\n    address onBehalfOf,\n    uint16 referralCode,\n    uint256 deadline,\n    uint8 permitV,\n    bytes32 permitR,\n    bytes32 permitS\n  ) external;\n\n  /**\n   * @notice Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n   * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n   * @param asset The address of the underlying asset to withdraw\n   * @param amount The underlying amount to be withdrawn\n   *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n   * @param to The address that will receive the underlying, same as msg.sender if the user\n   *   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   *   different wallet\n   * @return The final amount withdrawn\n   */\n  function withdraw(address asset, uint256 amount, address to) external returns (uint256);\n\n  /**\n   * @notice Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n   * already supplied enough collateral, or he was given enough allowance by a credit delegator on the\n   * corresponding debt token (StableDebtToken or VariableDebtToken)\n   * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n   * @param asset The address of the underlying asset to borrow\n   * @param amount The amount to be borrowed\n   * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n   * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   * @param onBehalfOf The address of the user who will receive the debt. Should be the address of the borrower itself\n   * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n   * if he has been given credit delegation allowance\n   */\n  function borrow(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode,\n    uint16 referralCode,\n    address onBehalfOf\n  ) external;\n\n  /**\n   * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n   * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n   * @param asset The address of the borrowed underlying asset previously borrowed\n   * @param amount The amount to repay\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n   * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n   * @param onBehalfOf The address of the user who will get his debt reduced/removed. Should be the address of the\n   * user calling the function if he wants to reduce/remove his own debt, or the address of any other\n   * other borrower whose debt should be removed\n   * @return The final amount repaid\n   */\n  function repay(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode,\n    address onBehalfOf\n  ) external returns (uint256);\n\n  /**\n   * @notice Repay with transfer approval of asset to be repaid done via permit function\n   * see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n   * @param asset The address of the borrowed underlying asset previously borrowed\n   * @param amount The amount to repay\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n   * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n   * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n   * user calling the function if he wants to reduce/remove his own debt, or the address of any other\n   * other borrower whose debt should be removed\n   * @param deadline The deadline timestamp that the permit is valid\n   * @param permitV The V parameter of ERC712 permit sig\n   * @param permitR The R parameter of ERC712 permit sig\n   * @param permitS The S parameter of ERC712 permit sig\n   * @return The final amount repaid\n   */\n  function repayWithPermit(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode,\n    address onBehalfOf,\n    uint256 deadline,\n    uint8 permitV,\n    bytes32 permitR,\n    bytes32 permitS\n  ) external returns (uint256);\n\n  /**\n   * @notice Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the\n   * equivalent debt tokens\n   * - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\n   * @dev  Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken\n   * balance is not enough to cover the whole debt\n   * @param asset The address of the borrowed underlying asset previously borrowed\n   * @param amount The amount to repay\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n   * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n   * @return The final amount repaid\n   */\n  function repayWithATokens(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode\n  ) external returns (uint256);\n\n  /**\n   * @notice Allows a borrower to swap his debt between stable and variable mode, or vice versa\n   * @param asset The address of the underlying asset borrowed\n   * @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\n   */\n  function swapBorrowRateMode(address asset, uint256 interestRateMode) external;\n\n  /**\n   * @notice Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n   * - Users can be rebalanced if the following conditions are satisfied:\n   *     1. Usage ratio is above 95%\n   *     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too\n   *        much has been borrowed at a stable rate and suppliers are not earning enough\n   * @param asset The address of the underlying asset borrowed\n   * @param user The address of the user to be rebalanced\n   */\n  function rebalanceStableBorrowRate(address asset, address user) external;\n\n  /**\n   * @notice Allows suppliers to enable/disable a specific supplied asset as collateral\n   * @param asset The address of the underlying asset supplied\n   * @param useAsCollateral True if the user wants to use the supply as collateral, false otherwise\n   */\n  function setUserUseReserveAsCollateral(address asset, bool useAsCollateral) external;\n\n  /**\n   * @notice Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n   * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n   * @param user The address of the borrower getting liquidated\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n   * @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n   * to receive the underlying collateral asset directly\n   */\n  function liquidationCall(\n    address collateralAsset,\n    address debtAsset,\n    address user,\n    uint256 debtToCover,\n    bool receiveAToken\n  ) external;\n\n  /**\n   * @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n   * as long as the amount taken plus a fee is returned.\n   * @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n   * into consideration. For further details please visit https://docs.aave.com/developers/\n   * @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\n   * @param assets The addresses of the assets being flash-borrowed\n   * @param amounts The amounts of the assets being flash-borrowed\n   * @param interestRateModes Types of the debt to open if the flash loan is not returned:\n   *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n   * @param params Variadic packed params to pass to the receiver as extra information\n   * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   */\n  function flashLoan(\n    address receiverAddress,\n    address[] calldata assets,\n    uint256[] calldata amounts,\n    uint256[] calldata interestRateModes,\n    address onBehalfOf,\n    bytes calldata params,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n   * as long as the amount taken plus a fee is returned.\n   * @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n   * into consideration. For further details please visit https://docs.aave.com/developers/\n   * @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\n   * @param asset The address of the asset being flash-borrowed\n   * @param amount The amount of the asset being flash-borrowed\n   * @param params Variadic packed params to pass to the receiver as extra information\n   * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   */\n  function flashLoanSimple(\n    address receiverAddress,\n    address asset,\n    uint256 amount,\n    bytes calldata params,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @notice Returns the user account data across all the reserves\n   * @param user The address of the user\n   * @return totalCollateralBase The total collateral of the user in the base currency used by the price feed\n   * @return totalDebtBase The total debt of the user in the base currency used by the price feed\n   * @return availableBorrowsBase The borrowing power left of the user in the base currency used by the price feed\n   * @return currentLiquidationThreshold The liquidation threshold of the user\n   * @return ltv The loan to value of The user\n   * @return healthFactor The current health factor of the user\n   */\n  function getUserAccountData(\n    address user\n  )\n    external\n    view\n    returns (\n      uint256 totalCollateralBase,\n      uint256 totalDebtBase,\n      uint256 availableBorrowsBase,\n      uint256 currentLiquidationThreshold,\n      uint256 ltv,\n      uint256 healthFactor\n    );\n\n  /**\n   * @notice Initializes a reserve, activating it, assigning an aToken and debt tokens and an\n   * interest rate strategy\n   * @dev Only callable by the PoolConfigurator contract\n   * @param asset The address of the underlying asset of the reserve\n   * @param aTokenAddress The address of the aToken that will be assigned to the reserve\n   * @param stableDebtAddress The address of the StableDebtToken that will be assigned to the reserve\n   * @param variableDebtAddress The address of the VariableDebtToken that will be assigned to the reserve\n   * @param interestRateStrategyAddress The address of the interest rate strategy contract\n   */\n  function initReserve(\n    address asset,\n    address aTokenAddress,\n    address stableDebtAddress,\n    address variableDebtAddress,\n    address interestRateStrategyAddress\n  ) external;\n\n  /**\n   * @notice Drop a reserve\n   * @dev Only callable by the PoolConfigurator contract\n   * @param asset The address of the underlying asset of the reserve\n   */\n  function dropReserve(address asset) external;\n\n  /**\n   * @notice Updates the address of the interest rate strategy contract\n   * @dev Only callable by the PoolConfigurator contract\n   * @param asset The address of the underlying asset of the reserve\n   * @param rateStrategyAddress The address of the interest rate strategy contract\n   */\n  function setReserveInterestRateStrategyAddress(\n    address asset,\n    address rateStrategyAddress\n  ) external;\n\n  /**\n   * @notice Sets the configuration bitmap of the reserve as a whole\n   * @dev Only callable by the PoolConfigurator contract\n   * @param asset The address of the underlying asset of the reserve\n   * @param configuration The new configuration bitmap\n   */\n  function setConfiguration(\n    address asset,\n    DataTypes.ReserveConfigurationMap calldata configuration\n  ) external;\n\n  /**\n   * @notice Returns the configuration of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The configuration of the reserve\n   */\n  function getConfiguration(\n    address asset\n  ) external view returns (DataTypes.ReserveConfigurationMap memory);\n\n  /**\n   * @notice Returns the configuration of the user across all the reserves\n   * @param user The user address\n   * @return The configuration of the user\n   */\n  function getUserConfiguration(\n    address user\n  ) external view returns (DataTypes.UserConfigurationMap memory);\n\n  /**\n   * @notice Returns the normalized income of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The reserve's normalized income\n   */\n  function getReserveNormalizedIncome(address asset) external view returns (uint256);\n\n  /**\n   * @notice Returns the normalized variable debt per unit of asset\n   * @dev WARNING: This function is intended to be used primarily by the protocol itself to get a\n   * \"dynamic\" variable index based on time, current stored index and virtual rate at the current\n   * moment (approx. a borrower would get if opening a position). This means that is always used in\n   * combination with variable debt supply/balances.\n   * If using this function externally, consider that is possible to have an increasing normalized\n   * variable debt that is not equivalent to how the variable debt index would be updated in storage\n   * (e.g. only updates with non-zero variable debt supply)\n   * @param asset The address of the underlying asset of the reserve\n   * @return The reserve normalized variable debt\n   */\n  function getReserveNormalizedVariableDebt(address asset) external view returns (uint256);\n\n  /**\n   * @notice Returns the state and configuration of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The state and configuration data of the reserve\n   */\n  function getReserveData(address asset) external view returns (DataTypes.ReserveData memory);\n\n  /**\n   * @notice Validates and finalizes an aToken transfer\n   * @dev Only callable by the overlying aToken of the `asset`\n   * @param asset The address of the underlying asset of the aToken\n   * @param from The user from which the aTokens are transferred\n   * @param to The user receiving the aTokens\n   * @param amount The amount being transferred/withdrawn\n   * @param balanceFromBefore The aToken balance of the `from` user before the transfer\n   * @param balanceToBefore The aToken balance of the `to` user before the transfer\n   */\n  function finalizeTransfer(\n    address asset,\n    address from,\n    address to,\n    uint256 amount,\n    uint256 balanceFromBefore,\n    uint256 balanceToBefore\n  ) external;\n\n  /**\n   * @notice Returns the list of the underlying assets of all the initialized reserves\n   * @dev It does not include dropped reserves\n   * @return The addresses of the underlying assets of the initialized reserves\n   */\n  function getReservesList() external view returns (address[] memory);\n\n  /**\n   * @notice Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct\n   * @param id The id of the reserve as stored in the DataTypes.ReserveData struct\n   * @return The address of the reserve associated with id\n   */\n  function getReserveAddressById(uint16 id) external view returns (address);\n\n  /**\n   * @notice Returns the PoolAddressesProvider connected to this contract\n   * @return The address of the PoolAddressesProvider\n   */\n  function ADDRESSES_PROVIDER() external view returns (IPoolAddressesProvider);\n\n  /**\n   * @notice Updates the protocol fee on the bridging\n   * @param bridgeProtocolFee The part of the premium sent to the protocol treasury\n   */\n  function updateBridgeProtocolFee(uint256 bridgeProtocolFee) external;\n\n  /**\n   * @notice Updates flash loan premiums. Flash loan premium consists of two parts:\n   * - A part is sent to aToken holders as extra, one time accumulated interest\n   * - A part is collected by the protocol treasury\n   * @dev The total premium is calculated on the total borrowed amount\n   * @dev The premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`\n   * @dev Only callable by the PoolConfigurator contract\n   * @param flashLoanPremiumTotal The total premium, expressed in bps\n   * @param flashLoanPremiumToProtocol The part of the premium sent to the protocol treasury, expressed in bps\n   */\n  function updateFlashloanPremiums(\n    uint128 flashLoanPremiumTotal,\n    uint128 flashLoanPremiumToProtocol\n  ) external;\n\n  /**\n   * @notice Configures a new category for the eMode.\n   * @dev In eMode, the protocol allows very high borrowing power to borrow assets of the same category.\n   * The category 0 is reserved as it's the default for volatile assets\n   * @param id The id of the category\n   * @param config The configuration of the category\n   */\n  function configureEModeCategory(uint8 id, DataTypes.EModeCategory memory config) external;\n\n  /**\n   * @notice Returns the data of an eMode category\n   * @param id The id of the category\n   * @return The configuration data of the category\n   */\n  function getEModeCategoryData(uint8 id) external view returns (DataTypes.EModeCategory memory);\n\n  /**\n   * @notice Allows a user to use the protocol in eMode\n   * @param categoryId The id of the category\n   */\n  function setUserEMode(uint8 categoryId) external;\n\n  /**\n   * @notice Returns the eMode the user is using\n   * @param user The address of the user\n   * @return The eMode id\n   */\n  function getUserEMode(address user) external view returns (uint256);\n\n  /**\n   * @notice Resets the isolation mode total debt of the given asset to zero\n   * @dev It requires the given asset has zero debt ceiling\n   * @param asset The address of the underlying asset to reset the isolationModeTotalDebt\n   */\n  function resetIsolationModeTotalDebt(address asset) external;\n\n  /**\n   * @notice Returns the percentage of available liquidity that can be borrowed at once at stable rate\n   * @return The percentage of available liquidity to borrow, expressed in bps\n   */\n  function MAX_STABLE_RATE_BORROW_SIZE_PERCENT() external view returns (uint256);\n\n  /**\n   * @notice Returns the total fee on flash loans\n   * @return The total fee on flashloans\n   */\n  function FLASHLOAN_PREMIUM_TOTAL() external view returns (uint128);\n\n  /**\n   * @notice Returns the part of the bridge fees sent to protocol\n   * @return The bridge fee sent to the protocol treasury\n   */\n  function BRIDGE_PROTOCOL_FEE() external view returns (uint256);\n\n  /**\n   * @notice Returns the part of the flashloan fees sent to protocol\n   * @return The flashloan fee sent to the protocol treasury\n   */\n  function FLASHLOAN_PREMIUM_TO_PROTOCOL() external view returns (uint128);\n\n  /**\n   * @notice Returns the maximum number of reserves supported to be listed in this Pool\n   * @return The maximum number of reserves supported\n   */\n  function MAX_NUMBER_RESERVES() external view returns (uint16);\n\n  /**\n   * @notice Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\n   * @param assets The list of reserves for which the minting needs to be executed\n   */\n  function mintToTreasury(address[] calldata assets) external;\n\n  /**\n   * @notice Rescue and transfer tokens locked in this contract\n   * @param token The address of the token\n   * @param to The address of the recipient\n   * @param amount The amount of token to transfer\n   */\n  function rescueTokens(address token, address to, uint256 amount) external;\n\n  /**\n   * @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n   * - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n   * @dev Deprecated: Use the `supply` function instead\n   * @param asset The address of the underlying asset to supply\n   * @param amount The amount to be supplied\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   *   is a different wallet\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   */\n  function deposit(address asset, uint256 amount, address onBehalfOf, uint16 referralCode) external;\n}\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\n/**\n * @notice This is a deprecated interface. Please use AutomationCompatibleInterface directly.\n */\npragma solidity ^0.8.0;\nimport {AutomationCompatibleInterface as KeeperCompatibleInterface} from \"./AutomationCompatibleInterface.sol\";\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AutomationCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(bytes calldata performData) external;\n}\n"
			},
			"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\nlibrary DataTypes {\n  struct ReserveData {\n    //stores the reserve configuration\n    ReserveConfigurationMap configuration;\n    //the liquidity index. Expressed in ray\n    uint128 liquidityIndex;\n    //the current supply rate. Expressed in ray\n    uint128 currentLiquidityRate;\n    //variable borrow index. Expressed in ray\n    uint128 variableBorrowIndex;\n    //the current variable borrow rate. Expressed in ray\n    uint128 currentVariableBorrowRate;\n    //the current stable borrow rate. Expressed in ray\n    uint128 currentStableBorrowRate;\n    //timestamp of last update\n    uint40 lastUpdateTimestamp;\n    //the id of the reserve. Represents the position in the list of the active reserves\n    uint16 id;\n    //aToken address\n    address aTokenAddress;\n    //stableDebtToken address\n    address stableDebtTokenAddress;\n    //variableDebtToken address\n    address variableDebtTokenAddress;\n    //address of the interest rate strategy\n    address interestRateStrategyAddress;\n    //the current treasury balance, scaled\n    uint128 accruedToTreasury;\n    //the outstanding unbacked aTokens minted through the bridging feature\n    uint128 unbacked;\n    //the outstanding debt borrowed against this asset in isolation mode\n    uint128 isolationModeTotalDebt;\n  }\n\n  struct ReserveConfigurationMap {\n    //bit 0-15: LTV\n    //bit 16-31: Liq. threshold\n    //bit 32-47: Liq. bonus\n    //bit 48-55: Decimals\n    //bit 56: reserve is active\n    //bit 57: reserve is frozen\n    //bit 58: borrowing is enabled\n    //bit 59: stable rate borrowing enabled\n    //bit 60: asset is paused\n    //bit 61: borrowing in isolation mode is enabled\n    //bit 62: siloed borrowing enabled\n    //bit 63: flashloaning enabled\n    //bit 64-79: reserve factor\n    //bit 80-115 borrow cap in whole tokens, borrowCap == 0 => no cap\n    //bit 116-151 supply cap in whole tokens, supplyCap == 0 => no cap\n    //bit 152-167 liquidation protocol fee\n    //bit 168-175 eMode category\n    //bit 176-211 unbacked mint cap in whole tokens, unbackedMintCap == 0 => minting disabled\n    //bit 212-251 debt ceiling for isolation mode with (ReserveConfiguration::DEBT_CEILING_DECIMALS) decimals\n    //bit 252-255 unused\n\n    uint256 data;\n  }\n\n  struct UserConfigurationMap {\n    /**\n     * @dev Bitmap of the users collaterals and borrows. It is divided in pairs of bits, one pair per asset.\n     * The first bit indicates if an asset is used as collateral by the user, the second whether an\n     * asset is borrowed by the user.\n     */\n    uint256 data;\n  }\n\n  struct EModeCategory {\n    // each eMode category has a custom ltv and liquidation threshold\n    uint16 ltv;\n    uint16 liquidationThreshold;\n    uint16 liquidationBonus;\n    // each eMode category may or may not have a custom oracle to override the individual assets price oracles\n    address priceSource;\n    string label;\n  }\n\n  enum InterestRateMode {NONE, STABLE, VARIABLE}\n\n  struct ReserveCache {\n    uint256 currScaledVariableDebt;\n    uint256 nextScaledVariableDebt;\n    uint256 currPrincipalStableDebt;\n    uint256 currAvgStableBorrowRate;\n    uint256 currTotalStableDebt;\n    uint256 nextAvgStableBorrowRate;\n    uint256 nextTotalStableDebt;\n    uint256 currLiquidityIndex;\n    uint256 nextLiquidityIndex;\n    uint256 currVariableBorrowIndex;\n    uint256 nextVariableBorrowIndex;\n    uint256 currLiquidityRate;\n    uint256 currVariableBorrowRate;\n    uint256 reserveFactor;\n    ReserveConfigurationMap reserveConfiguration;\n    address aTokenAddress;\n    address stableDebtTokenAddress;\n    address variableDebtTokenAddress;\n    uint40 reserveLastUpdateTimestamp;\n    uint40 stableDebtLastUpdateTimestamp;\n  }\n\n  struct ExecuteLiquidationCallParams {\n    uint256 reservesCount;\n    uint256 debtToCover;\n    address collateralAsset;\n    address debtAsset;\n    address user;\n    bool receiveAToken;\n    address priceOracle;\n    uint8 userEModeCategory;\n    address priceOracleSentinel;\n  }\n\n  struct ExecuteSupplyParams {\n    address asset;\n    uint256 amount;\n    address onBehalfOf;\n    uint16 referralCode;\n  }\n\n  struct ExecuteBorrowParams {\n    address asset;\n    address user;\n    address onBehalfOf;\n    uint256 amount;\n    InterestRateMode interestRateMode;\n    uint16 referralCode;\n    bool releaseUnderlying;\n    uint256 maxStableRateBorrowSizePercent;\n    uint256 reservesCount;\n    address oracle;\n    uint8 userEModeCategory;\n    address priceOracleSentinel;\n  }\n\n  struct ExecuteRepayParams {\n    address asset;\n    uint256 amount;\n    InterestRateMode interestRateMode;\n    address onBehalfOf;\n    bool useATokens;\n  }\n\n  struct ExecuteWithdrawParams {\n    address asset;\n    uint256 amount;\n    address to;\n    uint256 reservesCount;\n    address oracle;\n    uint8 userEModeCategory;\n  }\n\n  struct ExecuteSetUserEModeParams {\n    uint256 reservesCount;\n    address oracle;\n    uint8 categoryId;\n  }\n\n  struct FinalizeTransferParams {\n    address asset;\n    address from;\n    address to;\n    uint256 amount;\n    uint256 balanceFromBefore;\n    uint256 balanceToBefore;\n    uint256 reservesCount;\n    address oracle;\n    uint8 fromEModeCategory;\n  }\n\n  struct FlashloanParams {\n    address receiverAddress;\n    address[] assets;\n    uint256[] amounts;\n    uint256[] interestRateModes;\n    address onBehalfOf;\n    bytes params;\n    uint16 referralCode;\n    uint256 flashLoanPremiumToProtocol;\n    uint256 flashLoanPremiumTotal;\n    uint256 maxStableRateBorrowSizePercent;\n    uint256 reservesCount;\n    address addressesProvider;\n    uint8 userEModeCategory;\n    bool isAuthorizedFlashBorrower;\n  }\n\n  struct FlashloanSimpleParams {\n    address receiverAddress;\n    address asset;\n    uint256 amount;\n    bytes params;\n    uint16 referralCode;\n    uint256 flashLoanPremiumToProtocol;\n    uint256 flashLoanPremiumTotal;\n  }\n\n  struct FlashLoanRepaymentParams {\n    uint256 amount;\n    uint256 totalPremium;\n    uint256 flashLoanPremiumToProtocol;\n    address asset;\n    address receiverAddress;\n    uint16 referralCode;\n  }\n\n  struct CalculateUserAccountDataParams {\n    UserConfigurationMap userConfig;\n    uint256 reservesCount;\n    address user;\n    address oracle;\n    uint8 userEModeCategory;\n  }\n\n  struct ValidateBorrowParams {\n    ReserveCache reserveCache;\n    UserConfigurationMap userConfig;\n    address asset;\n    address userAddress;\n    uint256 amount;\n    InterestRateMode interestRateMode;\n    uint256 maxStableLoanPercent;\n    uint256 reservesCount;\n    address oracle;\n    uint8 userEModeCategory;\n    address priceOracleSentinel;\n    bool isolationModeActive;\n    address isolationModeCollateralAddress;\n    uint256 isolationModeDebtCeiling;\n  }\n\n  struct ValidateLiquidationCallParams {\n    ReserveCache debtReserveCache;\n    uint256 totalDebt;\n    uint256 healthFactor;\n    address priceOracleSentinel;\n  }\n\n  struct CalculateInterestRatesParams {\n    uint256 unbacked;\n    uint256 liquidityAdded;\n    uint256 liquidityTaken;\n    uint256 totalStableDebt;\n    uint256 totalVariableDebt;\n    uint256 averageStableBorrowRate;\n    uint256 reserveFactor;\n    address reserve;\n    address aToken;\n  }\n\n  struct InitReserveParams {\n    address asset;\n    address aTokenAddress;\n    address stableDebtAddress;\n    address variableDebtAddress;\n    address interestRateStrategyAddress;\n    uint16 reservesCount;\n    uint16 maxNumberReserves;\n  }\n}\n"
			},
			"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.0;\n\n/**\n * @title IPoolAddressesProvider\n * @author Aave\n * @notice Defines the basic interface for a Pool Addresses Provider.\n */\ninterface IPoolAddressesProvider {\n  /**\n   * @dev Emitted when the market identifier is updated.\n   * @param oldMarketId The old id of the market\n   * @param newMarketId The new id of the market\n   */\n  event MarketIdSet(string indexed oldMarketId, string indexed newMarketId);\n\n  /**\n   * @dev Emitted when the pool is updated.\n   * @param oldAddress The old address of the Pool\n   * @param newAddress The new address of the Pool\n   */\n  event PoolUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the pool configurator is updated.\n   * @param oldAddress The old address of the PoolConfigurator\n   * @param newAddress The new address of the PoolConfigurator\n   */\n  event PoolConfiguratorUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the price oracle is updated.\n   * @param oldAddress The old address of the PriceOracle\n   * @param newAddress The new address of the PriceOracle\n   */\n  event PriceOracleUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the ACL manager is updated.\n   * @param oldAddress The old address of the ACLManager\n   * @param newAddress The new address of the ACLManager\n   */\n  event ACLManagerUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the ACL admin is updated.\n   * @param oldAddress The old address of the ACLAdmin\n   * @param newAddress The new address of the ACLAdmin\n   */\n  event ACLAdminUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the price oracle sentinel is updated.\n   * @param oldAddress The old address of the PriceOracleSentinel\n   * @param newAddress The new address of the PriceOracleSentinel\n   */\n  event PriceOracleSentinelUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the pool data provider is updated.\n   * @param oldAddress The old address of the PoolDataProvider\n   * @param newAddress The new address of the PoolDataProvider\n   */\n  event PoolDataProviderUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when a new proxy is created.\n   * @param id The identifier of the proxy\n   * @param proxyAddress The address of the created proxy contract\n   * @param implementationAddress The address of the implementation contract\n   */\n  event ProxyCreated(\n    bytes32 indexed id,\n    address indexed proxyAddress,\n    address indexed implementationAddress\n  );\n\n  /**\n   * @dev Emitted when a new non-proxied contract address is registered.\n   * @param id The identifier of the contract\n   * @param oldAddress The address of the old contract\n   * @param newAddress The address of the new contract\n   */\n  event AddressSet(bytes32 indexed id, address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the implementation of the proxy registered with id is updated\n   * @param id The identifier of the contract\n   * @param proxyAddress The address of the proxy contract\n   * @param oldImplementationAddress The address of the old implementation contract\n   * @param newImplementationAddress The address of the new implementation contract\n   */\n  event AddressSetAsProxy(\n    bytes32 indexed id,\n    address indexed proxyAddress,\n    address oldImplementationAddress,\n    address indexed newImplementationAddress\n  );\n\n  /**\n   * @notice Returns the id of the Aave market to which this contract points to.\n   * @return The market id\n   */\n  function getMarketId() external view returns (string memory);\n\n  /**\n   * @notice Associates an id with a specific PoolAddressesProvider.\n   * @dev This can be used to create an onchain registry of PoolAddressesProviders to\n   * identify and validate multiple Aave markets.\n   * @param newMarketId The market id\n   */\n  function setMarketId(string calldata newMarketId) external;\n\n  /**\n   * @notice Returns an address by its identifier.\n   * @dev The returned address might be an EOA or a contract, potentially proxied\n   * @dev It returns ZERO if there is no registered address with the given id\n   * @param id The id\n   * @return The address of the registered for the specified id\n   */\n  function getAddress(bytes32 id) external view returns (address);\n\n  /**\n   * @notice General function to update the implementation of a proxy registered with\n   * certain `id`. If there is no proxy registered, it will instantiate one and\n   * set as implementation the `newImplementationAddress`.\n   * @dev IMPORTANT Use this function carefully, only for ids that don't have an explicit\n   * setter function, in order to avoid unexpected consequences\n   * @param id The id\n   * @param newImplementationAddress The address of the new implementation\n   */\n  function setAddressAsProxy(bytes32 id, address newImplementationAddress) external;\n\n  /**\n   * @notice Sets an address for an id replacing the address saved in the addresses map.\n   * @dev IMPORTANT Use this function carefully, as it will do a hard replacement\n   * @param id The id\n   * @param newAddress The address to set\n   */\n  function setAddress(bytes32 id, address newAddress) external;\n\n  /**\n   * @notice Returns the address of the Pool proxy.\n   * @return The Pool proxy address\n   */\n  function getPool() external view returns (address);\n\n  /**\n   * @notice Updates the implementation of the Pool, or creates a proxy\n   * setting the new `pool` implementation when the function is called for the first time.\n   * @param newPoolImpl The new Pool implementation\n   */\n  function setPoolImpl(address newPoolImpl) external;\n\n  /**\n   * @notice Returns the address of the PoolConfigurator proxy.\n   * @return The PoolConfigurator proxy address\n   */\n  function getPoolConfigurator() external view returns (address);\n\n  /**\n   * @notice Updates the implementation of the PoolConfigurator, or creates a proxy\n   * setting the new `PoolConfigurator` implementation when the function is called for the first time.\n   * @param newPoolConfiguratorImpl The new PoolConfigurator implementation\n   */\n  function setPoolConfiguratorImpl(address newPoolConfiguratorImpl) external;\n\n  /**\n   * @notice Returns the address of the price oracle.\n   * @return The address of the PriceOracle\n   */\n  function getPriceOracle() external view returns (address);\n\n  /**\n   * @notice Updates the address of the price oracle.\n   * @param newPriceOracle The address of the new PriceOracle\n   */\n  function setPriceOracle(address newPriceOracle) external;\n\n  /**\n   * @notice Returns the address of the ACL manager.\n   * @return The address of the ACLManager\n   */\n  function getACLManager() external view returns (address);\n\n  /**\n   * @notice Updates the address of the ACL manager.\n   * @param newAclManager The address of the new ACLManager\n   */\n  function setACLManager(address newAclManager) external;\n\n  /**\n   * @notice Returns the address of the ACL admin.\n   * @return The address of the ACL admin\n   */\n  function getACLAdmin() external view returns (address);\n\n  /**\n   * @notice Updates the address of the ACL admin.\n   * @param newAclAdmin The address of the new ACL admin\n   */\n  function setACLAdmin(address newAclAdmin) external;\n\n  /**\n   * @notice Returns the address of the price oracle sentinel.\n   * @return The address of the PriceOracleSentinel\n   */\n  function getPriceOracleSentinel() external view returns (address);\n\n  /**\n   * @notice Updates the address of the price oracle sentinel.\n   * @param newPriceOracleSentinel The address of the new PriceOracleSentinel\n   */\n  function setPriceOracleSentinel(address newPriceOracleSentinel) external;\n\n  /**\n   * @notice Returns the address of the data provider.\n   * @return The address of the DataProvider\n   */\n  function getPoolDataProvider() external view returns (address);\n\n  /**\n   * @notice Updates the address of the data provider.\n   * @param newDataProvider The address of the new DataProvider\n   */\n  function setPoolDataProvider(address newDataProvider) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@aave/core-v3/contracts/interfaces/IPool.sol": {
				"IPool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "backer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "BackUnbacked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum DataTypes.InterestRateMode",
									"name": "interestRateMode",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "borrowRate",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "Borrow",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "initiator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum DataTypes.InterestRateMode",
									"name": "interestRateMode",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "premium",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "FlashLoan",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDebt",
									"type": "uint256"
								}
							],
							"name": "IsolationModeTotalDebtUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "collateralAsset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "debtAsset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "debtToCover",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidatedCollateralAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "liquidator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "receiveAToken",
									"type": "bool"
								}
							],
							"name": "LiquidationCall",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "MintUnbacked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountMinted",
									"type": "uint256"
								}
							],
							"name": "MintedToTreasury",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "RebalanceStableBorrowRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "repayer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "useATokens",
									"type": "bool"
								}
							],
							"name": "Repay",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidityRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stableBorrowRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableBorrowRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidityIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableBorrowIndex",
									"type": "uint256"
								}
							],
							"name": "ReserveDataUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "ReserveUsedAsCollateralDisabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "ReserveUsedAsCollateralEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "Supply",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "enum DataTypes.InterestRateMode",
									"name": "interestRateMode",
									"type": "uint8"
								}
							],
							"name": "SwapBorrowRateMode",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "categoryId",
									"type": "uint8"
								}
							],
							"name": "UserEModeSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADDRESSES_PROVIDER",
							"outputs": [
								{
									"internalType": "contract IPoolAddressesProvider",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BRIDGE_PROTOCOL_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FLASHLOAN_PREMIUM_TOTAL",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FLASHLOAN_PREMIUM_TO_PROTOCOL",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_NUMBER_RESERVES",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_STABLE_RATE_BORROW_SIZE_PERCENT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "backUnbacked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRateMode",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								}
							],
							"name": "borrow",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "id",
									"type": "uint8"
								},
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "ltv",
											"type": "uint16"
										},
										{
											"internalType": "uint16",
											"name": "liquidationThreshold",
											"type": "uint16"
										},
										{
											"internalType": "uint16",
											"name": "liquidationBonus",
											"type": "uint16"
										},
										{
											"internalType": "address",
											"name": "priceSource",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "label",
											"type": "string"
										}
									],
									"internalType": "struct DataTypes.EModeCategory",
									"name": "config",
									"type": "tuple"
								}
							],
							"name": "configureEModeCategory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "dropReserve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balanceFromBefore",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balanceToBefore",
									"type": "uint256"
								}
							],
							"name": "finalizeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiverAddress",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "interestRateModes",
									"type": "uint256[]"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "params",
									"type": "bytes"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "flashLoan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiverAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "params",
									"type": "bytes"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "flashLoanSimple",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getConfiguration",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "data",
											"type": "uint256"
										}
									],
									"internalType": "struct DataTypes.ReserveConfigurationMap",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "id",
									"type": "uint8"
								}
							],
							"name": "getEModeCategoryData",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "ltv",
											"type": "uint16"
										},
										{
											"internalType": "uint16",
											"name": "liquidationThreshold",
											"type": "uint16"
										},
										{
											"internalType": "uint16",
											"name": "liquidationBonus",
											"type": "uint16"
										},
										{
											"internalType": "address",
											"name": "priceSource",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "label",
											"type": "string"
										}
									],
									"internalType": "struct DataTypes.EModeCategory",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "id",
									"type": "uint16"
								}
							],
							"name": "getReserveAddressById",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveData",
							"outputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "data",
													"type": "uint256"
												}
											],
											"internalType": "struct DataTypes.ReserveConfigurationMap",
											"name": "configuration",
											"type": "tuple"
										},
										{
											"internalType": "uint128",
											"name": "liquidityIndex",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentLiquidityRate",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "variableBorrowIndex",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentVariableBorrowRate",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentStableBorrowRate",
											"type": "uint128"
										},
										{
											"internalType": "uint40",
											"name": "lastUpdateTimestamp",
											"type": "uint40"
										},
										{
											"internalType": "uint16",
											"name": "id",
											"type": "uint16"
										},
										{
											"internalType": "address",
											"name": "aTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "stableDebtTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "variableDebtTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "interestRateStrategyAddress",
											"type": "address"
										},
										{
											"internalType": "uint128",
											"name": "accruedToTreasury",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "unbacked",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "isolationModeTotalDebt",
											"type": "uint128"
										}
									],
									"internalType": "struct DataTypes.ReserveData",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveNormalizedIncome",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveNormalizedVariableDebt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReservesList",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserAccountData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalCollateralBase",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalDebtBase",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "availableBorrowsBase",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "currentLiquidationThreshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ltv",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "healthFactor",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserConfiguration",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "data",
											"type": "uint256"
										}
									],
									"internalType": "struct DataTypes.UserConfigurationMap",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserEMode",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "aTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "stableDebtAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "variableDebtAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "interestRateStrategyAddress",
									"type": "address"
								}
							],
							"name": "initReserve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collateralAsset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "debtAsset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "debtToCover",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "receiveAToken",
									"type": "bool"
								}
							],
							"name": "liquidationCall",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								}
							],
							"name": "mintToTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "mintUnbacked",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "rebalanceStableBorrowRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRateMode",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								}
							],
							"name": "repay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRateMode",
									"type": "uint256"
								}
							],
							"name": "repayWithATokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRateMode",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "permitV",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "permitR",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "permitS",
									"type": "bytes32"
								}
							],
							"name": "repayWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "rescueTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "resetIsolationModeTotalDebt",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "data",
											"type": "uint256"
										}
									],
									"internalType": "struct DataTypes.ReserveConfigurationMap",
									"name": "configuration",
									"type": "tuple"
								}
							],
							"name": "setConfiguration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rateStrategyAddress",
									"type": "address"
								}
							],
							"name": "setReserveInterestRateStrategyAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "categoryId",
									"type": "uint8"
								}
							],
							"name": "setUserEMode",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "useAsCollateral",
									"type": "bool"
								}
							],
							"name": "setUserUseReserveAsCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "supply",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "permitV",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "permitR",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "permitS",
									"type": "bytes32"
								}
							],
							"name": "supplyWithPermit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "interestRateMode",
									"type": "uint256"
								}
							],
							"name": "swapBorrowRateMode",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "bridgeProtocolFee",
									"type": "uint256"
								}
							],
							"name": "updateBridgeProtocolFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "flashLoanPremiumTotal",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "flashLoanPremiumToProtocol",
									"type": "uint128"
								}
							],
							"name": "updateFlashloanPremiums",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aave",
						"events": {
							"BackUnbacked(address,address,uint256,uint256)": {
								"details": "Emitted on backUnbacked()",
								"params": {
									"amount": "The amount added as backing",
									"backer": "The address paying for the backing",
									"fee": "The amount paid in fees",
									"reserve": "The address of the underlying asset of the reserve"
								}
							},
							"Borrow(address,address,address,uint256,uint8,uint256,uint16)": {
								"details": "Emitted on borrow() and flashLoan() when debt needs to be opened",
								"params": {
									"amount": "The amount borrowed out",
									"borrowRate": "The numeric rate at which the user has borrowed, expressed in ray",
									"interestRateMode": "The rate mode: 1 for Stable, 2 for Variable",
									"onBehalfOf": "The address that will be getting the debt",
									"referralCode": "The referral code used",
									"reserve": "The address of the underlying asset being borrowed",
									"user": "The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()"
								}
							},
							"FlashLoan(address,address,address,uint256,uint8,uint256,uint16)": {
								"details": "Emitted on flashLoan()",
								"params": {
									"amount": "The amount flash borrowed",
									"asset": "The address of the asset being flash borrowed",
									"initiator": "The address initiating the flash loan",
									"interestRateMode": "The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt",
									"premium": "The fee flash borrowed",
									"referralCode": "The referral code used",
									"target": "The address of the flash loan receiver contract"
								}
							},
							"IsolationModeTotalDebtUpdated(address,uint256)": {
								"details": "Emitted on borrow(), repay() and liquidationCall() when using isolated assets",
								"params": {
									"asset": "The address of the underlying asset of the reserve",
									"totalDebt": "The total isolation mode debt for the reserve"
								}
							},
							"LiquidationCall(address,address,address,uint256,uint256,address,bool)": {
								"details": "Emitted when a borrower is liquidated.",
								"params": {
									"collateralAsset": "The address of the underlying asset used as collateral, to receive as result of the liquidation",
									"debtAsset": "The address of the underlying borrowed asset to be repaid with the liquidation",
									"debtToCover": "The debt amount of borrowed `asset` the liquidator wants to cover",
									"liquidatedCollateralAmount": "The amount of collateral received by the liquidator",
									"liquidator": "The address of the liquidator",
									"receiveAToken": "True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly",
									"user": "The address of the borrower getting liquidated"
								}
							},
							"MintUnbacked(address,address,address,uint256,uint16)": {
								"details": "Emitted on mintUnbacked()",
								"params": {
									"amount": "The amount of supplied assets",
									"onBehalfOf": "The beneficiary of the supplied assets, receiving the aTokens",
									"referralCode": "The referral code used",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address initiating the supply"
								}
							},
							"MintedToTreasury(address,uint256)": {
								"details": "Emitted when the protocol treasury receives minted aTokens from the accrued interest.",
								"params": {
									"amountMinted": "The amount minted to the treasury",
									"reserve": "The address of the reserve"
								}
							},
							"RebalanceStableBorrowRate(address,address)": {
								"details": "Emitted on rebalanceStableBorrowRate()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user for which the rebalance has been executed"
								}
							},
							"Repay(address,address,address,uint256,bool)": {
								"details": "Emitted on repay()",
								"params": {
									"amount": "The amount repaid",
									"repayer": "The address of the user initiating the repay(), providing the funds",
									"reserve": "The address of the underlying asset of the reserve",
									"useATokens": "True if the repayment is done using aTokens, `false` if done with underlying asset directly",
									"user": "The beneficiary of the repayment, getting his debt reduced"
								}
							},
							"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)": {
								"details": "Emitted when the state of a reserve is updated.",
								"params": {
									"liquidityIndex": "The next liquidity index",
									"liquidityRate": "The next liquidity rate",
									"reserve": "The address of the underlying asset of the reserve",
									"stableBorrowRate": "The next stable borrow rate",
									"variableBorrowIndex": "The next variable borrow index",
									"variableBorrowRate": "The next variable borrow rate"
								}
							},
							"ReserveUsedAsCollateralDisabled(address,address)": {
								"details": "Emitted on setUserUseReserveAsCollateral()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user enabling the usage as collateral"
								}
							},
							"ReserveUsedAsCollateralEnabled(address,address)": {
								"details": "Emitted on setUserUseReserveAsCollateral()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user enabling the usage as collateral"
								}
							},
							"Supply(address,address,address,uint256,uint16)": {
								"details": "Emitted on supply()",
								"params": {
									"amount": "The amount supplied",
									"onBehalfOf": "The beneficiary of the supply, receiving the aTokens",
									"referralCode": "The referral code used",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address initiating the supply"
								}
							},
							"SwapBorrowRateMode(address,address,uint8)": {
								"details": "Emitted on swapBorrowRateMode()",
								"params": {
									"interestRateMode": "The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user swapping his rate mode"
								}
							},
							"UserEModeSet(address,uint8)": {
								"details": "Emitted when the user selects a certain asset category for eMode",
								"params": {
									"categoryId": "The category id",
									"user": "The address of the user"
								}
							},
							"Withdraw(address,address,address,uint256)": {
								"details": "Emitted on withdraw()",
								"params": {
									"amount": "The amount to be withdrawn",
									"reserve": "The address of the underlying asset being withdrawn",
									"to": "The address that will receive the underlying",
									"user": "The address initiating the withdrawal, owner of aTokens"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"ADDRESSES_PROVIDER()": {
								"returns": {
									"_0": "The address of the PoolAddressesProvider"
								}
							},
							"BRIDGE_PROTOCOL_FEE()": {
								"returns": {
									"_0": "The bridge fee sent to the protocol treasury"
								}
							},
							"FLASHLOAN_PREMIUM_TOTAL()": {
								"returns": {
									"_0": "The total fee on flashloans"
								}
							},
							"FLASHLOAN_PREMIUM_TO_PROTOCOL()": {
								"returns": {
									"_0": "The flashloan fee sent to the protocol treasury"
								}
							},
							"MAX_NUMBER_RESERVES()": {
								"returns": {
									"_0": "The maximum number of reserves supported"
								}
							},
							"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()": {
								"returns": {
									"_0": "The percentage of available liquidity to borrow, expressed in bps"
								}
							},
							"backUnbacked(address,uint256,uint256)": {
								"params": {
									"amount": "The amount to back",
									"asset": "The address of the underlying asset to back",
									"fee": "The amount paid in fees"
								},
								"returns": {
									"_0": "The backed amount"
								}
							},
							"borrow(address,uint256,uint256,uint16,address)": {
								"params": {
									"amount": "The amount to be borrowed",
									"asset": "The address of the underlying asset to borrow",
									"interestRateMode": "The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable",
									"onBehalfOf": "The address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance",
									"referralCode": "The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))": {
								"details": "In eMode, the protocol allows very high borrowing power to borrow assets of the same category. The category 0 is reserved as it's the default for volatile assets",
								"params": {
									"config": "The configuration of the category",
									"id": "The id of the category"
								}
							},
							"deposit(address,uint256,address,uint16)": {
								"details": "Deprecated: Use the `supply` function instead",
								"params": {
									"amount": "The amount to be supplied",
									"asset": "The address of the underlying asset to supply",
									"onBehalfOf": "The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"dropReserve(address)": {
								"details": "Only callable by the PoolConfigurator contract",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								}
							},
							"finalizeTransfer(address,address,address,uint256,uint256,uint256)": {
								"details": "Only callable by the overlying aToken of the `asset`",
								"params": {
									"amount": "The amount being transferred/withdrawn",
									"asset": "The address of the underlying asset of the aToken",
									"balanceFromBefore": "The aToken balance of the `from` user before the transfer",
									"balanceToBefore": "The aToken balance of the `to` user before the transfer",
									"from": "The user from which the aTokens are transferred",
									"to": "The user receiving the aTokens"
								}
							},
							"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": {
								"details": "IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://docs.aave.com/developers/",
								"params": {
									"amounts": "The amounts of the assets being flash-borrowed",
									"assets": "The addresses of the assets being flash-borrowed",
									"interestRateModes": "Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address",
									"onBehalfOf": "The address  that will receive the debt in the case of using on `modes` 1 or 2",
									"params": "Variadic packed params to pass to the receiver as extra information",
									"receiverAddress": "The address of the contract receiving the funds, implementing IFlashLoanReceiver interface",
									"referralCode": "The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"flashLoanSimple(address,address,uint256,bytes,uint16)": {
								"details": "IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://docs.aave.com/developers/",
								"params": {
									"amount": "The amount of the asset being flash-borrowed",
									"asset": "The address of the asset being flash-borrowed",
									"params": "Variadic packed params to pass to the receiver as extra information",
									"receiverAddress": "The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface",
									"referralCode": "The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"getConfiguration(address)": {
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The configuration of the reserve"
								}
							},
							"getEModeCategoryData(uint8)": {
								"params": {
									"id": "The id of the category"
								},
								"returns": {
									"_0": "The configuration data of the category"
								}
							},
							"getReserveAddressById(uint16)": {
								"params": {
									"id": "The id of the reserve as stored in the DataTypes.ReserveData struct"
								},
								"returns": {
									"_0": "The address of the reserve associated with id"
								}
							},
							"getReserveData(address)": {
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The state and configuration data of the reserve"
								}
							},
							"getReserveNormalizedIncome(address)": {
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The reserve's normalized income"
								}
							},
							"getReserveNormalizedVariableDebt(address)": {
								"details": "WARNING: This function is intended to be used primarily by the protocol itself to get a \"dynamic\" variable index based on time, current stored index and virtual rate at the current moment (approx. a borrower would get if opening a position). This means that is always used in combination with variable debt supply/balances. If using this function externally, consider that is possible to have an increasing normalized variable debt that is not equivalent to how the variable debt index would be updated in storage (e.g. only updates with non-zero variable debt supply)",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The reserve normalized variable debt"
								}
							},
							"getReservesList()": {
								"details": "It does not include dropped reserves",
								"returns": {
									"_0": "The addresses of the underlying assets of the initialized reserves"
								}
							},
							"getUserAccountData(address)": {
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"availableBorrowsBase": "The borrowing power left of the user in the base currency used by the price feed",
									"currentLiquidationThreshold": "The liquidation threshold of the user",
									"healthFactor": "The current health factor of the user",
									"ltv": "The loan to value of The user",
									"totalCollateralBase": "The total collateral of the user in the base currency used by the price feed",
									"totalDebtBase": "The total debt of the user in the base currency used by the price feed"
								}
							},
							"getUserConfiguration(address)": {
								"params": {
									"user": "The user address"
								},
								"returns": {
									"_0": "The configuration of the user"
								}
							},
							"getUserEMode(address)": {
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"_0": "The eMode id"
								}
							},
							"initReserve(address,address,address,address,address)": {
								"details": "Only callable by the PoolConfigurator contract",
								"params": {
									"aTokenAddress": "The address of the aToken that will be assigned to the reserve",
									"asset": "The address of the underlying asset of the reserve",
									"interestRateStrategyAddress": "The address of the interest rate strategy contract",
									"stableDebtAddress": "The address of the StableDebtToken that will be assigned to the reserve",
									"variableDebtAddress": "The address of the VariableDebtToken that will be assigned to the reserve"
								}
							},
							"liquidationCall(address,address,address,uint256,bool)": {
								"params": {
									"collateralAsset": "The address of the underlying asset used as collateral, to receive as result of the liquidation",
									"debtAsset": "The address of the underlying borrowed asset to be repaid with the liquidation",
									"debtToCover": "The debt amount of borrowed `asset` the liquidator wants to cover",
									"receiveAToken": "True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly",
									"user": "The address of the borrower getting liquidated"
								}
							},
							"mintToTreasury(address[])": {
								"params": {
									"assets": "The list of reserves for which the minting needs to be executed"
								}
							},
							"mintUnbacked(address,uint256,address,uint16)": {
								"params": {
									"amount": "The amount to mint",
									"asset": "The address of the underlying asset to mint",
									"onBehalfOf": "The address that will receive the aTokens",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"rebalanceStableBorrowRate(address,address)": {
								"params": {
									"asset": "The address of the underlying asset borrowed",
									"user": "The address of the user to be rebalanced"
								}
							},
							"repay(address,uint256,uint256,address)": {
								"params": {
									"amount": "The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`",
									"asset": "The address of the borrowed underlying asset previously borrowed",
									"interestRateMode": "The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable",
									"onBehalfOf": "The address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed"
								},
								"returns": {
									"_0": "The final amount repaid"
								}
							},
							"repayWithATokens(address,uint256,uint256)": {
								"details": "Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken balance is not enough to cover the whole debt",
								"params": {
									"amount": "The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`",
									"asset": "The address of the borrowed underlying asset previously borrowed",
									"interestRateMode": "The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable"
								},
								"returns": {
									"_0": "The final amount repaid"
								}
							},
							"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"amount": "The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`",
									"asset": "The address of the borrowed underlying asset previously borrowed",
									"deadline": "The deadline timestamp that the permit is valid",
									"interestRateMode": "The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable",
									"onBehalfOf": "Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed",
									"permitR": "The R parameter of ERC712 permit sig",
									"permitS": "The S parameter of ERC712 permit sig",
									"permitV": "The V parameter of ERC712 permit sig"
								},
								"returns": {
									"_0": "The final amount repaid"
								}
							},
							"rescueTokens(address,address,uint256)": {
								"params": {
									"amount": "The amount of token to transfer",
									"to": "The address of the recipient",
									"token": "The address of the token"
								}
							},
							"resetIsolationModeTotalDebt(address)": {
								"details": "It requires the given asset has zero debt ceiling",
								"params": {
									"asset": "The address of the underlying asset to reset the isolationModeTotalDebt"
								}
							},
							"setConfiguration(address,(uint256))": {
								"details": "Only callable by the PoolConfigurator contract",
								"params": {
									"asset": "The address of the underlying asset of the reserve",
									"configuration": "The new configuration bitmap"
								}
							},
							"setReserveInterestRateStrategyAddress(address,address)": {
								"details": "Only callable by the PoolConfigurator contract",
								"params": {
									"asset": "The address of the underlying asset of the reserve",
									"rateStrategyAddress": "The address of the interest rate strategy contract"
								}
							},
							"setUserEMode(uint8)": {
								"params": {
									"categoryId": "The id of the category"
								}
							},
							"setUserUseReserveAsCollateral(address,bool)": {
								"params": {
									"asset": "The address of the underlying asset supplied",
									"useAsCollateral": "True if the user wants to use the supply as collateral, false otherwise"
								}
							},
							"supply(address,uint256,address,uint16)": {
								"params": {
									"amount": "The amount to be supplied",
									"asset": "The address of the underlying asset to supply",
									"onBehalfOf": "The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"amount": "The amount to be supplied",
									"asset": "The address of the underlying asset to supply",
									"deadline": "The deadline timestamp that the permit is valid",
									"onBehalfOf": "The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet",
									"permitR": "The R parameter of ERC712 permit sig",
									"permitS": "The S parameter of ERC712 permit sig",
									"permitV": "The V parameter of ERC712 permit sig",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"swapBorrowRateMode(address,uint256)": {
								"params": {
									"asset": "The address of the underlying asset borrowed",
									"interestRateMode": "The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable"
								}
							},
							"updateBridgeProtocolFee(uint256)": {
								"params": {
									"bridgeProtocolFee": "The part of the premium sent to the protocol treasury"
								}
							},
							"updateFlashloanPremiums(uint128,uint128)": {
								"details": "The total premium is calculated on the total borrowed amountThe premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`Only callable by the PoolConfigurator contract",
								"params": {
									"flashLoanPremiumToProtocol": "The part of the premium sent to the protocol treasury, expressed in bps",
									"flashLoanPremiumTotal": "The total premium, expressed in bps"
								}
							},
							"withdraw(address,uint256,address)": {
								"params": {
									"amount": "The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance",
									"asset": "The address of the underlying asset to withdraw",
									"to": "The address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet"
								},
								"returns": {
									"_0": "The final amount withdrawn"
								}
							}
						},
						"title": "IPool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ADDRESSES_PROVIDER()": "0542975c",
							"BRIDGE_PROTOCOL_FEE()": "272d9072",
							"FLASHLOAN_PREMIUM_TOTAL()": "074b2e43",
							"FLASHLOAN_PREMIUM_TO_PROTOCOL()": "6a99c036",
							"MAX_NUMBER_RESERVES()": "f8119d51",
							"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()": "e82fec2f",
							"backUnbacked(address,uint256,uint256)": "d65dc7a1",
							"borrow(address,uint256,uint256,uint16,address)": "a415bcad",
							"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))": "d579ea7d",
							"deposit(address,uint256,address,uint16)": "e8eda9df",
							"dropReserve(address)": "63c9b860",
							"finalizeTransfer(address,address,address,uint256,uint256,uint256)": "d5ed3933",
							"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": "ab9c4b5d",
							"flashLoanSimple(address,address,uint256,bytes,uint16)": "42b0b77c",
							"getConfiguration(address)": "c44b11f7",
							"getEModeCategoryData(uint8)": "6c6f6ae1",
							"getReserveAddressById(uint16)": "52751797",
							"getReserveData(address)": "35ea6a75",
							"getReserveNormalizedIncome(address)": "d15e0053",
							"getReserveNormalizedVariableDebt(address)": "386497fd",
							"getReservesList()": "d1946dbc",
							"getUserAccountData(address)": "bf92857c",
							"getUserConfiguration(address)": "4417a583",
							"getUserEMode(address)": "eddf1b79",
							"initReserve(address,address,address,address,address)": "7a708e92",
							"liquidationCall(address,address,address,uint256,bool)": "00a718a9",
							"mintToTreasury(address[])": "9cd19996",
							"mintUnbacked(address,uint256,address,uint16)": "69a933a5",
							"rebalanceStableBorrowRate(address,address)": "cd112382",
							"repay(address,uint256,uint256,address)": "573ade81",
							"repayWithATokens(address,uint256,uint256)": "2dad97d4",
							"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)": "ee3e210b",
							"rescueTokens(address,address,uint256)": "cea9d26f",
							"resetIsolationModeTotalDebt(address)": "e43e88a1",
							"setConfiguration(address,(uint256))": "f51e435b",
							"setReserveInterestRateStrategyAddress(address,address)": "1d2118f9",
							"setUserEMode(uint8)": "28530a47",
							"setUserUseReserveAsCollateral(address,bool)": "5a3b74b9",
							"supply(address,uint256,address,uint16)": "617ba037",
							"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)": "02c205f0",
							"swapBorrowRateMode(address,uint256)": "94ba89a2",
							"updateBridgeProtocolFee(uint256)": "3036b439",
							"updateFlashloanPremiums(uint128,uint128)": "bcb6e522",
							"withdraw(address,uint256,address)": "69328dec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"BackUnbacked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum DataTypes.InterestRateMode\",\"name\":\"interestRateMode\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum DataTypes.InterestRateMode\",\"name\":\"interestRateMode\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDebt\",\"type\":\"uint256\"}],\"name\":\"IsolationModeTotalDebtUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidatedCollateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"LiquidationCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"MintUnbacked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountMinted\",\"type\":\"uint256\"}],\"name\":\"MintedToTreasury\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"RebalanceStableBorrowRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"repayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"useATokens\",\"type\":\"bool\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowIndex\",\"type\":\"uint256\"}],\"name\":\"ReserveDataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"Supply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum DataTypes.InterestRateMode\",\"name\":\"interestRateMode\",\"type\":\"uint8\"}],\"name\":\"SwapBorrowRateMode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"categoryId\",\"type\":\"uint8\"}],\"name\":\"UserEModeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADDRESSES_PROVIDER\",\"outputs\":[{\"internalType\":\"contract IPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BRIDGE_PROTOCOL_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FLASHLOAN_PREMIUM_TOTAL\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FLASHLOAN_PREMIUM_TO_PROTOCOL\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_NUMBER_RESERVES\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_STABLE_RATE_BORROW_SIZE_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"backUnbacked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"ltv\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationThreshold\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationBonus\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"priceSource\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"internalType\":\"struct DataTypes.EModeCategory\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"configureEModeCategory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"dropReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceFromBefore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceToBefore\",\"type\":\"uint256\"}],\"name\":\"finalizeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"interestRateModes\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"flashLoanSimple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"name\":\"getEModeCategoryData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"ltv\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationThreshold\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationBonus\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"priceSource\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"internalType\":\"struct DataTypes.EModeCategory\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"}],\"name\":\"getReserveAddressById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"configuration\",\"type\":\"tuple\"},{\"internalType\":\"uint128\",\"name\":\"liquidityIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentLiquidityRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"variableBorrowIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentVariableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentStableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"},{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"accruedToTreasury\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"unbacked\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"isolationModeTotalDebt\",\"type\":\"uint128\"}],\"internalType\":\"struct DataTypes.ReserveData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedVariableDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReservesList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserAccountData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalCollateralBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDebtBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableBorrowsBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentLiquidationThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ltv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"healthFactor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.UserConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserEMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"}],\"name\":\"initReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"liquidationCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"mintToTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"mintUnbacked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"rebalanceStableBorrowRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"repay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"}],\"name\":\"repayWithATokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"repayWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"resetIsolationModeTotalDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"configuration\",\"type\":\"tuple\"}],\"name\":\"setConfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rateStrategyAddress\",\"type\":\"address\"}],\"name\":\"setReserveInterestRateStrategyAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"categoryId\",\"type\":\"uint8\"}],\"name\":\"setUserEMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useAsCollateral\",\"type\":\"bool\"}],\"name\":\"setUserUseReserveAsCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"supply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"supplyWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"}],\"name\":\"swapBorrowRateMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bridgeProtocolFee\",\"type\":\"uint256\"}],\"name\":\"updateBridgeProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"flashLoanPremiumTotal\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"flashLoanPremiumToProtocol\",\"type\":\"uint128\"}],\"name\":\"updateFlashloanPremiums\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"events\":{\"BackUnbacked(address,address,uint256,uint256)\":{\"details\":\"Emitted on backUnbacked()\",\"params\":{\"amount\":\"The amount added as backing\",\"backer\":\"The address paying for the backing\",\"fee\":\"The amount paid in fees\",\"reserve\":\"The address of the underlying asset of the reserve\"}},\"Borrow(address,address,address,uint256,uint8,uint256,uint16)\":{\"details\":\"Emitted on borrow() and flashLoan() when debt needs to be opened\",\"params\":{\"amount\":\"The amount borrowed out\",\"borrowRate\":\"The numeric rate at which the user has borrowed, expressed in ray\",\"interestRateMode\":\"The rate mode: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address that will be getting the debt\",\"referralCode\":\"The referral code used\",\"reserve\":\"The address of the underlying asset being borrowed\",\"user\":\"The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()\"}},\"FlashLoan(address,address,address,uint256,uint8,uint256,uint16)\":{\"details\":\"Emitted on flashLoan()\",\"params\":{\"amount\":\"The amount flash borrowed\",\"asset\":\"The address of the asset being flash borrowed\",\"initiator\":\"The address initiating the flash loan\",\"interestRateMode\":\"The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\",\"premium\":\"The fee flash borrowed\",\"referralCode\":\"The referral code used\",\"target\":\"The address of the flash loan receiver contract\"}},\"IsolationModeTotalDebtUpdated(address,uint256)\":{\"details\":\"Emitted on borrow(), repay() and liquidationCall() when using isolated assets\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\",\"totalDebt\":\"The total isolation mode debt for the reserve\"}},\"LiquidationCall(address,address,address,uint256,uint256,address,bool)\":{\"details\":\"Emitted when a borrower is liquidated.\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"liquidatedCollateralAmount\":\"The amount of collateral received by the liquidator\",\"liquidator\":\"The address of the liquidator\",\"receiveAToken\":\"True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly\",\"user\":\"The address of the borrower getting liquidated\"}},\"MintUnbacked(address,address,address,uint256,uint16)\":{\"details\":\"Emitted on mintUnbacked()\",\"params\":{\"amount\":\"The amount of supplied assets\",\"onBehalfOf\":\"The beneficiary of the supplied assets, receiving the aTokens\",\"referralCode\":\"The referral code used\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address initiating the supply\"}},\"MintedToTreasury(address,uint256)\":{\"details\":\"Emitted when the protocol treasury receives minted aTokens from the accrued interest.\",\"params\":{\"amountMinted\":\"The amount minted to the treasury\",\"reserve\":\"The address of the reserve\"}},\"RebalanceStableBorrowRate(address,address)\":{\"details\":\"Emitted on rebalanceStableBorrowRate()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user for which the rebalance has been executed\"}},\"Repay(address,address,address,uint256,bool)\":{\"details\":\"Emitted on repay()\",\"params\":{\"amount\":\"The amount repaid\",\"repayer\":\"The address of the user initiating the repay(), providing the funds\",\"reserve\":\"The address of the underlying asset of the reserve\",\"useATokens\":\"True if the repayment is done using aTokens, `false` if done with underlying asset directly\",\"user\":\"The beneficiary of the repayment, getting his debt reduced\"}},\"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when the state of a reserve is updated.\",\"params\":{\"liquidityIndex\":\"The next liquidity index\",\"liquidityRate\":\"The next liquidity rate\",\"reserve\":\"The address of the underlying asset of the reserve\",\"stableBorrowRate\":\"The next stable borrow rate\",\"variableBorrowIndex\":\"The next variable borrow index\",\"variableBorrowRate\":\"The next variable borrow rate\"}},\"ReserveUsedAsCollateralDisabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral\"}},\"ReserveUsedAsCollateralEnabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral\"}},\"Supply(address,address,address,uint256,uint16)\":{\"details\":\"Emitted on supply()\",\"params\":{\"amount\":\"The amount supplied\",\"onBehalfOf\":\"The beneficiary of the supply, receiving the aTokens\",\"referralCode\":\"The referral code used\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address initiating the supply\"}},\"SwapBorrowRateMode(address,address,uint8)\":{\"details\":\"Emitted on swapBorrowRateMode()\",\"params\":{\"interestRateMode\":\"The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user swapping his rate mode\"}},\"UserEModeSet(address,uint8)\":{\"details\":\"Emitted when the user selects a certain asset category for eMode\",\"params\":{\"categoryId\":\"The category id\",\"user\":\"The address of the user\"}},\"Withdraw(address,address,address,uint256)\":{\"details\":\"Emitted on withdraw()\",\"params\":{\"amount\":\"The amount to be withdrawn\",\"reserve\":\"The address of the underlying asset being withdrawn\",\"to\":\"The address that will receive the underlying\",\"user\":\"The address initiating the withdrawal, owner of aTokens\"}}},\"kind\":\"dev\",\"methods\":{\"ADDRESSES_PROVIDER()\":{\"returns\":{\"_0\":\"The address of the PoolAddressesProvider\"}},\"BRIDGE_PROTOCOL_FEE()\":{\"returns\":{\"_0\":\"The bridge fee sent to the protocol treasury\"}},\"FLASHLOAN_PREMIUM_TOTAL()\":{\"returns\":{\"_0\":\"The total fee on flashloans\"}},\"FLASHLOAN_PREMIUM_TO_PROTOCOL()\":{\"returns\":{\"_0\":\"The flashloan fee sent to the protocol treasury\"}},\"MAX_NUMBER_RESERVES()\":{\"returns\":{\"_0\":\"The maximum number of reserves supported\"}},\"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()\":{\"returns\":{\"_0\":\"The percentage of available liquidity to borrow, expressed in bps\"}},\"backUnbacked(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount to back\",\"asset\":\"The address of the underlying asset to back\",\"fee\":\"The amount paid in fees\"},\"returns\":{\"_0\":\"The backed amount\"}},\"borrow(address,uint256,uint256,uint16,address)\":{\"params\":{\"amount\":\"The amount to be borrowed\",\"asset\":\"The address of the underlying asset to borrow\",\"interestRateMode\":\"The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance\",\"referralCode\":\"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))\":{\"details\":\"In eMode, the protocol allows very high borrowing power to borrow assets of the same category. The category 0 is reserved as it's the default for volatile assets\",\"params\":{\"config\":\"The configuration of the category\",\"id\":\"The id of the category\"}},\"deposit(address,uint256,address,uint16)\":{\"details\":\"Deprecated: Use the `supply` function instead\",\"params\":{\"amount\":\"The amount to be supplied\",\"asset\":\"The address of the underlying asset to supply\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"dropReserve(address)\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"}},\"finalizeTransfer(address,address,address,uint256,uint256,uint256)\":{\"details\":\"Only callable by the overlying aToken of the `asset`\",\"params\":{\"amount\":\"The amount being transferred/withdrawn\",\"asset\":\"The address of the underlying asset of the aToken\",\"balanceFromBefore\":\"The aToken balance of the `from` user before the transfer\",\"balanceToBefore\":\"The aToken balance of the `to` user before the transfer\",\"from\":\"The user from which the aTokens are transferred\",\"to\":\"The user receiving the aTokens\"}},\"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)\":{\"details\":\"IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://docs.aave.com/developers/\",\"params\":{\"amounts\":\"The amounts of the assets being flash-borrowed\",\"assets\":\"The addresses of the assets being flash-borrowed\",\"interestRateModes\":\"Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\",\"onBehalfOf\":\"The address  that will receive the debt in the case of using on `modes` 1 or 2\",\"params\":\"Variadic packed params to pass to the receiver as extra information\",\"receiverAddress\":\"The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\",\"referralCode\":\"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"flashLoanSimple(address,address,uint256,bytes,uint16)\":{\"details\":\"IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://docs.aave.com/developers/\",\"params\":{\"amount\":\"The amount of the asset being flash-borrowed\",\"asset\":\"The address of the asset being flash-borrowed\",\"params\":\"Variadic packed params to pass to the receiver as extra information\",\"receiverAddress\":\"The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\",\"referralCode\":\"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"getConfiguration(address)\":{\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The configuration of the reserve\"}},\"getEModeCategoryData(uint8)\":{\"params\":{\"id\":\"The id of the category\"},\"returns\":{\"_0\":\"The configuration data of the category\"}},\"getReserveAddressById(uint16)\":{\"params\":{\"id\":\"The id of the reserve as stored in the DataTypes.ReserveData struct\"},\"returns\":{\"_0\":\"The address of the reserve associated with id\"}},\"getReserveData(address)\":{\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The state and configuration data of the reserve\"}},\"getReserveNormalizedIncome(address)\":{\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve's normalized income\"}},\"getReserveNormalizedVariableDebt(address)\":{\"details\":\"WARNING: This function is intended to be used primarily by the protocol itself to get a \\\"dynamic\\\" variable index based on time, current stored index and virtual rate at the current moment (approx. a borrower would get if opening a position). This means that is always used in combination with variable debt supply/balances. If using this function externally, consider that is possible to have an increasing normalized variable debt that is not equivalent to how the variable debt index would be updated in storage (e.g. only updates with non-zero variable debt supply)\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve normalized variable debt\"}},\"getReservesList()\":{\"details\":\"It does not include dropped reserves\",\"returns\":{\"_0\":\"The addresses of the underlying assets of the initialized reserves\"}},\"getUserAccountData(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"availableBorrowsBase\":\"The borrowing power left of the user in the base currency used by the price feed\",\"currentLiquidationThreshold\":\"The liquidation threshold of the user\",\"healthFactor\":\"The current health factor of the user\",\"ltv\":\"The loan to value of The user\",\"totalCollateralBase\":\"The total collateral of the user in the base currency used by the price feed\",\"totalDebtBase\":\"The total debt of the user in the base currency used by the price feed\"}},\"getUserConfiguration(address)\":{\"params\":{\"user\":\"The user address\"},\"returns\":{\"_0\":\"The configuration of the user\"}},\"getUserEMode(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The eMode id\"}},\"initReserve(address,address,address,address,address)\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"aTokenAddress\":\"The address of the aToken that will be assigned to the reserve\",\"asset\":\"The address of the underlying asset of the reserve\",\"interestRateStrategyAddress\":\"The address of the interest rate strategy contract\",\"stableDebtAddress\":\"The address of the StableDebtToken that will be assigned to the reserve\",\"variableDebtAddress\":\"The address of the VariableDebtToken that will be assigned to the reserve\"}},\"liquidationCall(address,address,address,uint256,bool)\":{\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"receiveAToken\":\"True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly\",\"user\":\"The address of the borrower getting liquidated\"}},\"mintToTreasury(address[])\":{\"params\":{\"assets\":\"The list of reserves for which the minting needs to be executed\"}},\"mintUnbacked(address,uint256,address,uint16)\":{\"params\":{\"amount\":\"The amount to mint\",\"asset\":\"The address of the underlying asset to mint\",\"onBehalfOf\":\"The address that will receive the aTokens\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"rebalanceStableBorrowRate(address,address)\":{\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"user\":\"The address of the user to be rebalanced\"}},\"repay(address,uint256,uint256,address)\":{\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"interestRateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed\"},\"returns\":{\"_0\":\"The final amount repaid\"}},\"repayWithATokens(address,uint256,uint256)\":{\"details\":\"Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken balance is not enough to cover the whole debt\",\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"interestRateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\"},\"returns\":{\"_0\":\"The final amount repaid\"}},\"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"deadline\":\"The deadline timestamp that the permit is valid\",\"interestRateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed\",\"permitR\":\"The R parameter of ERC712 permit sig\",\"permitS\":\"The S parameter of ERC712 permit sig\",\"permitV\":\"The V parameter of ERC712 permit sig\"},\"returns\":{\"_0\":\"The final amount repaid\"}},\"rescueTokens(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of token to transfer\",\"to\":\"The address of the recipient\",\"token\":\"The address of the token\"}},\"resetIsolationModeTotalDebt(address)\":{\"details\":\"It requires the given asset has zero debt ceiling\",\"params\":{\"asset\":\"The address of the underlying asset to reset the isolationModeTotalDebt\"}},\"setConfiguration(address,(uint256))\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\",\"configuration\":\"The new configuration bitmap\"}},\"setReserveInterestRateStrategyAddress(address,address)\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\",\"rateStrategyAddress\":\"The address of the interest rate strategy contract\"}},\"setUserEMode(uint8)\":{\"params\":{\"categoryId\":\"The id of the category\"}},\"setUserUseReserveAsCollateral(address,bool)\":{\"params\":{\"asset\":\"The address of the underlying asset supplied\",\"useAsCollateral\":\"True if the user wants to use the supply as collateral, false otherwise\"}},\"supply(address,uint256,address,uint16)\":{\"params\":{\"amount\":\"The amount to be supplied\",\"asset\":\"The address of the underlying asset to supply\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"amount\":\"The amount to be supplied\",\"asset\":\"The address of the underlying asset to supply\",\"deadline\":\"The deadline timestamp that the permit is valid\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"permitR\":\"The R parameter of ERC712 permit sig\",\"permitS\":\"The S parameter of ERC712 permit sig\",\"permitV\":\"The V parameter of ERC712 permit sig\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"swapBorrowRateMode(address,uint256)\":{\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"interestRateMode\":\"The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\"}},\"updateBridgeProtocolFee(uint256)\":{\"params\":{\"bridgeProtocolFee\":\"The part of the premium sent to the protocol treasury\"}},\"updateFlashloanPremiums(uint128,uint128)\":{\"details\":\"The total premium is calculated on the total borrowed amountThe premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`Only callable by the PoolConfigurator contract\",\"params\":{\"flashLoanPremiumToProtocol\":\"The part of the premium sent to the protocol treasury, expressed in bps\",\"flashLoanPremiumTotal\":\"The total premium, expressed in bps\"}},\"withdraw(address,uint256,address)\":{\"params\":{\"amount\":\"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance\",\"asset\":\"The address of the underlying asset to withdraw\",\"to\":\"The address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet\"},\"returns\":{\"_0\":\"The final amount withdrawn\"}}},\"title\":\"IPool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ADDRESSES_PROVIDER()\":{\"notice\":\"Returns the PoolAddressesProvider connected to this contract\"},\"BRIDGE_PROTOCOL_FEE()\":{\"notice\":\"Returns the part of the bridge fees sent to protocol\"},\"FLASHLOAN_PREMIUM_TOTAL()\":{\"notice\":\"Returns the total fee on flash loans\"},\"FLASHLOAN_PREMIUM_TO_PROTOCOL()\":{\"notice\":\"Returns the part of the flashloan fees sent to protocol\"},\"MAX_NUMBER_RESERVES()\":{\"notice\":\"Returns the maximum number of reserves supported to be listed in this Pool\"},\"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()\":{\"notice\":\"Returns the percentage of available liquidity that can be borrowed at once at stable rate\"},\"backUnbacked(address,uint256,uint256)\":{\"notice\":\"Back the current unbacked underlying with `amount` and pay `fee`.\"},\"borrow(address,uint256,uint256,uint16,address)\":{\"notice\":\"Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already supplied enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`\"},\"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))\":{\"notice\":\"Configures a new category for the eMode.\"},\"deposit(address,uint256,address,uint16)\":{\"notice\":\"Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC\"},\"dropReserve(address)\":{\"notice\":\"Drop a reserve\"},\"finalizeTransfer(address,address,address,uint256,uint256,uint256)\":{\"notice\":\"Validates and finalizes an aToken transfer\"},\"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)\":{\"notice\":\"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned.\"},\"flashLoanSimple(address,address,uint256,bytes,uint16)\":{\"notice\":\"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned.\"},\"getConfiguration(address)\":{\"notice\":\"Returns the configuration of the reserve\"},\"getEModeCategoryData(uint8)\":{\"notice\":\"Returns the data of an eMode category\"},\"getReserveAddressById(uint16)\":{\"notice\":\"Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct\"},\"getReserveData(address)\":{\"notice\":\"Returns the state and configuration of the reserve\"},\"getReserveNormalizedIncome(address)\":{\"notice\":\"Returns the normalized income of the reserve\"},\"getReserveNormalizedVariableDebt(address)\":{\"notice\":\"Returns the normalized variable debt per unit of asset\"},\"getReservesList()\":{\"notice\":\"Returns the list of the underlying assets of all the initialized reserves\"},\"getUserAccountData(address)\":{\"notice\":\"Returns the user account data across all the reserves\"},\"getUserConfiguration(address)\":{\"notice\":\"Returns the configuration of the user across all the reserves\"},\"getUserEMode(address)\":{\"notice\":\"Returns the eMode the user is using\"},\"initReserve(address,address,address,address,address)\":{\"notice\":\"Initializes a reserve, activating it, assigning an aToken and debt tokens and an interest rate strategy\"},\"liquidationCall(address,address,address,uint256,bool)\":{\"notice\":\"Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\"},\"mintToTreasury(address[])\":{\"notice\":\"Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\"},\"mintUnbacked(address,uint256,address,uint16)\":{\"notice\":\"Mints an `amount` of aTokens to the `onBehalfOf`\"},\"rebalanceStableBorrowRate(address,address)\":{\"notice\":\"Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too        much has been borrowed at a stable rate and suppliers are not earning enough\"},\"repay(address,uint256,uint256,address)\":{\"notice\":\"Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\"},\"repayWithATokens(address,uint256,uint256)\":{\"notice\":\"Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the equivalent debt tokens - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\"},\"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Repay with transfer approval of asset to be repaid done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\"},\"rescueTokens(address,address,uint256)\":{\"notice\":\"Rescue and transfer tokens locked in this contract\"},\"resetIsolationModeTotalDebt(address)\":{\"notice\":\"Resets the isolation mode total debt of the given asset to zero\"},\"setConfiguration(address,(uint256))\":{\"notice\":\"Sets the configuration bitmap of the reserve as a whole\"},\"setReserveInterestRateStrategyAddress(address,address)\":{\"notice\":\"Updates the address of the interest rate strategy contract\"},\"setUserEMode(uint8)\":{\"notice\":\"Allows a user to use the protocol in eMode\"},\"setUserUseReserveAsCollateral(address,bool)\":{\"notice\":\"Allows suppliers to enable/disable a specific supplied asset as collateral\"},\"supply(address,uint256,address,uint16)\":{\"notice\":\"Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC\"},\"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Supply with transfer approval of asset to be supplied done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\"},\"swapBorrowRateMode(address,uint256)\":{\"notice\":\"Allows a borrower to swap his debt between stable and variable mode, or vice versa\"},\"updateBridgeProtocolFee(uint256)\":{\"notice\":\"Updates the protocol fee on the bridging\"},\"updateFlashloanPremiums(uint128,uint128)\":{\"notice\":\"Updates flash loan premiums. Flash loan premium consists of two parts: - A part is sent to aToken holders as extra, one time accumulated interest - A part is collected by the protocol treasury\"},\"withdraw(address,uint256,address)\":{\"notice\":\"Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\"}},\"notice\":\"Defines the basic interface for an Aave Pool.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/interfaces/IPool.sol\":\"IPool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6\",\"dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX\"]},\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a\",\"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa\"]},\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0x771cb99fd8519c974f7e12130387c4d9a997a6e8d0ac10e4303b842fe53efa88\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0f41689d1d58bc13678c749bae8830f5a8b19b89cd135e962bf07d483350f828\",\"dweb:/ipfs/QmQSNGDxjYGqT1GU2CZzsWUTNcAtcfkg1jDGTH516nCAfN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"ADDRESSES_PROVIDER()": {
								"notice": "Returns the PoolAddressesProvider connected to this contract"
							},
							"BRIDGE_PROTOCOL_FEE()": {
								"notice": "Returns the part of the bridge fees sent to protocol"
							},
							"FLASHLOAN_PREMIUM_TOTAL()": {
								"notice": "Returns the total fee on flash loans"
							},
							"FLASHLOAN_PREMIUM_TO_PROTOCOL()": {
								"notice": "Returns the part of the flashloan fees sent to protocol"
							},
							"MAX_NUMBER_RESERVES()": {
								"notice": "Returns the maximum number of reserves supported to be listed in this Pool"
							},
							"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()": {
								"notice": "Returns the percentage of available liquidity that can be borrowed at once at stable rate"
							},
							"backUnbacked(address,uint256,uint256)": {
								"notice": "Back the current unbacked underlying with `amount` and pay `fee`."
							},
							"borrow(address,uint256,uint256,uint16,address)": {
								"notice": "Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already supplied enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`"
							},
							"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))": {
								"notice": "Configures a new category for the eMode."
							},
							"deposit(address,uint256,address,uint16)": {
								"notice": "Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC"
							},
							"dropReserve(address)": {
								"notice": "Drop a reserve"
							},
							"finalizeTransfer(address,address,address,uint256,uint256,uint256)": {
								"notice": "Validates and finalizes an aToken transfer"
							},
							"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": {
								"notice": "Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned."
							},
							"flashLoanSimple(address,address,uint256,bytes,uint16)": {
								"notice": "Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned."
							},
							"getConfiguration(address)": {
								"notice": "Returns the configuration of the reserve"
							},
							"getEModeCategoryData(uint8)": {
								"notice": "Returns the data of an eMode category"
							},
							"getReserveAddressById(uint16)": {
								"notice": "Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct"
							},
							"getReserveData(address)": {
								"notice": "Returns the state and configuration of the reserve"
							},
							"getReserveNormalizedIncome(address)": {
								"notice": "Returns the normalized income of the reserve"
							},
							"getReserveNormalizedVariableDebt(address)": {
								"notice": "Returns the normalized variable debt per unit of asset"
							},
							"getReservesList()": {
								"notice": "Returns the list of the underlying assets of all the initialized reserves"
							},
							"getUserAccountData(address)": {
								"notice": "Returns the user account data across all the reserves"
							},
							"getUserConfiguration(address)": {
								"notice": "Returns the configuration of the user across all the reserves"
							},
							"getUserEMode(address)": {
								"notice": "Returns the eMode the user is using"
							},
							"initReserve(address,address,address,address,address)": {
								"notice": "Initializes a reserve, activating it, assigning an aToken and debt tokens and an interest rate strategy"
							},
							"liquidationCall(address,address,address,uint256,bool)": {
								"notice": "Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk"
							},
							"mintToTreasury(address[])": {
								"notice": "Mints the assets accrued through the reserve factor to the treasury in the form of aTokens"
							},
							"mintUnbacked(address,uint256,address,uint16)": {
								"notice": "Mints an `amount` of aTokens to the `onBehalfOf`"
							},
							"rebalanceStableBorrowRate(address,address)": {
								"notice": "Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too        much has been borrowed at a stable rate and suppliers are not earning enough"
							},
							"repay(address,uint256,uint256,address)": {
								"notice": "Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address"
							},
							"repayWithATokens(address,uint256,uint256)": {
								"notice": "Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the equivalent debt tokens - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens"
							},
							"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)": {
								"notice": "Repay with transfer approval of asset to be repaid done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713"
							},
							"rescueTokens(address,address,uint256)": {
								"notice": "Rescue and transfer tokens locked in this contract"
							},
							"resetIsolationModeTotalDebt(address)": {
								"notice": "Resets the isolation mode total debt of the given asset to zero"
							},
							"setConfiguration(address,(uint256))": {
								"notice": "Sets the configuration bitmap of the reserve as a whole"
							},
							"setReserveInterestRateStrategyAddress(address,address)": {
								"notice": "Updates the address of the interest rate strategy contract"
							},
							"setUserEMode(uint8)": {
								"notice": "Allows a user to use the protocol in eMode"
							},
							"setUserUseReserveAsCollateral(address,bool)": {
								"notice": "Allows suppliers to enable/disable a specific supplied asset as collateral"
							},
							"supply(address,uint256,address,uint16)": {
								"notice": "Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC"
							},
							"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)": {
								"notice": "Supply with transfer approval of asset to be supplied done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713"
							},
							"swapBorrowRateMode(address,uint256)": {
								"notice": "Allows a borrower to swap his debt between stable and variable mode, or vice versa"
							},
							"updateBridgeProtocolFee(uint256)": {
								"notice": "Updates the protocol fee on the bridging"
							},
							"updateFlashloanPremiums(uint128,uint128)": {
								"notice": "Updates flash loan premiums. Flash loan premium consists of two parts: - A part is sent to aToken holders as extra, one time accumulated interest - A part is collected by the protocol treasury"
							},
							"withdraw(address,uint256,address)": {
								"notice": "Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC"
							}
						},
						"notice": "Defines the basic interface for an Aave Pool.",
						"version": 1
					}
				}
			},
			"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol": {
				"IPoolAddressesProvider": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ACLAdminUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ACLManagerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "AddressSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "proxyAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldImplementationAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newImplementationAddress",
									"type": "address"
								}
							],
							"name": "AddressSetAsProxy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "oldMarketId",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "newMarketId",
									"type": "string"
								}
							],
							"name": "MarketIdSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PoolConfiguratorUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PoolDataProviderUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PoolUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PriceOracleSentinelUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PriceOracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "proxyAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementationAddress",
									"type": "address"
								}
							],
							"name": "ProxyCreated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getACLAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getACLManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "getAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMarketId",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolConfigurator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolDataProvider",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPriceOracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPriceOracleSentinel",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAclAdmin",
									"type": "address"
								}
							],
							"name": "setACLAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAclManager",
									"type": "address"
								}
							],
							"name": "setACLManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "setAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "newImplementationAddress",
									"type": "address"
								}
							],
							"name": "setAddressAsProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "newMarketId",
									"type": "string"
								}
							],
							"name": "setMarketId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newPoolConfiguratorImpl",
									"type": "address"
								}
							],
							"name": "setPoolConfiguratorImpl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newDataProvider",
									"type": "address"
								}
							],
							"name": "setPoolDataProvider",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newPoolImpl",
									"type": "address"
								}
							],
							"name": "setPoolImpl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newPriceOracle",
									"type": "address"
								}
							],
							"name": "setPriceOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newPriceOracleSentinel",
									"type": "address"
								}
							],
							"name": "setPriceOracleSentinel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aave",
						"events": {
							"ACLAdminUpdated(address,address)": {
								"details": "Emitted when the ACL admin is updated.",
								"params": {
									"newAddress": "The new address of the ACLAdmin",
									"oldAddress": "The old address of the ACLAdmin"
								}
							},
							"ACLManagerUpdated(address,address)": {
								"details": "Emitted when the ACL manager is updated.",
								"params": {
									"newAddress": "The new address of the ACLManager",
									"oldAddress": "The old address of the ACLManager"
								}
							},
							"AddressSet(bytes32,address,address)": {
								"details": "Emitted when a new non-proxied contract address is registered.",
								"params": {
									"id": "The identifier of the contract",
									"newAddress": "The address of the new contract",
									"oldAddress": "The address of the old contract"
								}
							},
							"AddressSetAsProxy(bytes32,address,address,address)": {
								"details": "Emitted when the implementation of the proxy registered with id is updated",
								"params": {
									"id": "The identifier of the contract",
									"newImplementationAddress": "The address of the new implementation contract",
									"oldImplementationAddress": "The address of the old implementation contract",
									"proxyAddress": "The address of the proxy contract"
								}
							},
							"MarketIdSet(string,string)": {
								"details": "Emitted when the market identifier is updated.",
								"params": {
									"newMarketId": "The new id of the market",
									"oldMarketId": "The old id of the market"
								}
							},
							"PoolConfiguratorUpdated(address,address)": {
								"details": "Emitted when the pool configurator is updated.",
								"params": {
									"newAddress": "The new address of the PoolConfigurator",
									"oldAddress": "The old address of the PoolConfigurator"
								}
							},
							"PoolDataProviderUpdated(address,address)": {
								"details": "Emitted when the pool data provider is updated.",
								"params": {
									"newAddress": "The new address of the PoolDataProvider",
									"oldAddress": "The old address of the PoolDataProvider"
								}
							},
							"PoolUpdated(address,address)": {
								"details": "Emitted when the pool is updated.",
								"params": {
									"newAddress": "The new address of the Pool",
									"oldAddress": "The old address of the Pool"
								}
							},
							"PriceOracleSentinelUpdated(address,address)": {
								"details": "Emitted when the price oracle sentinel is updated.",
								"params": {
									"newAddress": "The new address of the PriceOracleSentinel",
									"oldAddress": "The old address of the PriceOracleSentinel"
								}
							},
							"PriceOracleUpdated(address,address)": {
								"details": "Emitted when the price oracle is updated.",
								"params": {
									"newAddress": "The new address of the PriceOracle",
									"oldAddress": "The old address of the PriceOracle"
								}
							},
							"ProxyCreated(bytes32,address,address)": {
								"details": "Emitted when a new proxy is created.",
								"params": {
									"id": "The identifier of the proxy",
									"implementationAddress": "The address of the implementation contract",
									"proxyAddress": "The address of the created proxy contract"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"getACLAdmin()": {
								"returns": {
									"_0": "The address of the ACL admin"
								}
							},
							"getACLManager()": {
								"returns": {
									"_0": "The address of the ACLManager"
								}
							},
							"getAddress(bytes32)": {
								"details": "The returned address might be an EOA or a contract, potentially proxiedIt returns ZERO if there is no registered address with the given id",
								"params": {
									"id": "The id"
								},
								"returns": {
									"_0": "The address of the registered for the specified id"
								}
							},
							"getMarketId()": {
								"returns": {
									"_0": "The market id"
								}
							},
							"getPool()": {
								"returns": {
									"_0": "The Pool proxy address"
								}
							},
							"getPoolConfigurator()": {
								"returns": {
									"_0": "The PoolConfigurator proxy address"
								}
							},
							"getPoolDataProvider()": {
								"returns": {
									"_0": "The address of the DataProvider"
								}
							},
							"getPriceOracle()": {
								"returns": {
									"_0": "The address of the PriceOracle"
								}
							},
							"getPriceOracleSentinel()": {
								"returns": {
									"_0": "The address of the PriceOracleSentinel"
								}
							},
							"setACLAdmin(address)": {
								"params": {
									"newAclAdmin": "The address of the new ACL admin"
								}
							},
							"setACLManager(address)": {
								"params": {
									"newAclManager": "The address of the new ACLManager"
								}
							},
							"setAddress(bytes32,address)": {
								"details": "IMPORTANT Use this function carefully, as it will do a hard replacement",
								"params": {
									"id": "The id",
									"newAddress": "The address to set"
								}
							},
							"setAddressAsProxy(bytes32,address)": {
								"details": "IMPORTANT Use this function carefully, only for ids that don't have an explicit setter function, in order to avoid unexpected consequences",
								"params": {
									"id": "The id",
									"newImplementationAddress": "The address of the new implementation"
								}
							},
							"setMarketId(string)": {
								"details": "This can be used to create an onchain registry of PoolAddressesProviders to identify and validate multiple Aave markets.",
								"params": {
									"newMarketId": "The market id"
								}
							},
							"setPoolConfiguratorImpl(address)": {
								"params": {
									"newPoolConfiguratorImpl": "The new PoolConfigurator implementation"
								}
							},
							"setPoolDataProvider(address)": {
								"params": {
									"newDataProvider": "The address of the new DataProvider"
								}
							},
							"setPoolImpl(address)": {
								"params": {
									"newPoolImpl": "The new Pool implementation"
								}
							},
							"setPriceOracle(address)": {
								"params": {
									"newPriceOracle": "The address of the new PriceOracle"
								}
							},
							"setPriceOracleSentinel(address)": {
								"params": {
									"newPriceOracleSentinel": "The address of the new PriceOracleSentinel"
								}
							}
						},
						"title": "IPoolAddressesProvider",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getACLAdmin()": "0e67178c",
							"getACLManager()": "707cd716",
							"getAddress(bytes32)": "21f8a721",
							"getMarketId()": "568ef470",
							"getPool()": "026b1d5f",
							"getPoolConfigurator()": "631adfca",
							"getPoolDataProvider()": "e860accb",
							"getPriceOracle()": "fca513a8",
							"getPriceOracleSentinel()": "5eb88d3d",
							"setACLAdmin(address)": "76d84ffc",
							"setACLManager(address)": "ed301ca9",
							"setAddress(bytes32,address)": "ca446dd9",
							"setAddressAsProxy(bytes32,address)": "5dcc528c",
							"setMarketId(string)": "f67b1847",
							"setPoolConfiguratorImpl(address)": "e4ca28b7",
							"setPoolDataProvider(address)": "e44e9ed1",
							"setPoolImpl(address)": "a1564406",
							"setPriceOracle(address)": "530e784f",
							"setPriceOracleSentinel(address)": "74944cec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ACLAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ACLManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"AddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldImplementationAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementationAddress\",\"type\":\"address\"}],\"name\":\"AddressSetAsProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"oldMarketId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"MarketIdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolConfiguratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolDataProviderUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleSentinelUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementationAddress\",\"type\":\"address\"}],\"name\":\"ProxyCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getACLAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getACLManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolConfigurator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolDataProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracleSentinel\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAclAdmin\",\"type\":\"address\"}],\"name\":\"setACLAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAclManager\",\"type\":\"address\"}],\"name\":\"setACLManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newImplementationAddress\",\"type\":\"address\"}],\"name\":\"setAddressAsProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"setMarketId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPoolConfiguratorImpl\",\"type\":\"address\"}],\"name\":\"setPoolConfiguratorImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDataProvider\",\"type\":\"address\"}],\"name\":\"setPoolDataProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPoolImpl\",\"type\":\"address\"}],\"name\":\"setPoolImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPriceOracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPriceOracleSentinel\",\"type\":\"address\"}],\"name\":\"setPriceOracleSentinel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"events\":{\"ACLAdminUpdated(address,address)\":{\"details\":\"Emitted when the ACL admin is updated.\",\"params\":{\"newAddress\":\"The new address of the ACLAdmin\",\"oldAddress\":\"The old address of the ACLAdmin\"}},\"ACLManagerUpdated(address,address)\":{\"details\":\"Emitted when the ACL manager is updated.\",\"params\":{\"newAddress\":\"The new address of the ACLManager\",\"oldAddress\":\"The old address of the ACLManager\"}},\"AddressSet(bytes32,address,address)\":{\"details\":\"Emitted when a new non-proxied contract address is registered.\",\"params\":{\"id\":\"The identifier of the contract\",\"newAddress\":\"The address of the new contract\",\"oldAddress\":\"The address of the old contract\"}},\"AddressSetAsProxy(bytes32,address,address,address)\":{\"details\":\"Emitted when the implementation of the proxy registered with id is updated\",\"params\":{\"id\":\"The identifier of the contract\",\"newImplementationAddress\":\"The address of the new implementation contract\",\"oldImplementationAddress\":\"The address of the old implementation contract\",\"proxyAddress\":\"The address of the proxy contract\"}},\"MarketIdSet(string,string)\":{\"details\":\"Emitted when the market identifier is updated.\",\"params\":{\"newMarketId\":\"The new id of the market\",\"oldMarketId\":\"The old id of the market\"}},\"PoolConfiguratorUpdated(address,address)\":{\"details\":\"Emitted when the pool configurator is updated.\",\"params\":{\"newAddress\":\"The new address of the PoolConfigurator\",\"oldAddress\":\"The old address of the PoolConfigurator\"}},\"PoolDataProviderUpdated(address,address)\":{\"details\":\"Emitted when the pool data provider is updated.\",\"params\":{\"newAddress\":\"The new address of the PoolDataProvider\",\"oldAddress\":\"The old address of the PoolDataProvider\"}},\"PoolUpdated(address,address)\":{\"details\":\"Emitted when the pool is updated.\",\"params\":{\"newAddress\":\"The new address of the Pool\",\"oldAddress\":\"The old address of the Pool\"}},\"PriceOracleSentinelUpdated(address,address)\":{\"details\":\"Emitted when the price oracle sentinel is updated.\",\"params\":{\"newAddress\":\"The new address of the PriceOracleSentinel\",\"oldAddress\":\"The old address of the PriceOracleSentinel\"}},\"PriceOracleUpdated(address,address)\":{\"details\":\"Emitted when the price oracle is updated.\",\"params\":{\"newAddress\":\"The new address of the PriceOracle\",\"oldAddress\":\"The old address of the PriceOracle\"}},\"ProxyCreated(bytes32,address,address)\":{\"details\":\"Emitted when a new proxy is created.\",\"params\":{\"id\":\"The identifier of the proxy\",\"implementationAddress\":\"The address of the implementation contract\",\"proxyAddress\":\"The address of the created proxy contract\"}}},\"kind\":\"dev\",\"methods\":{\"getACLAdmin()\":{\"returns\":{\"_0\":\"The address of the ACL admin\"}},\"getACLManager()\":{\"returns\":{\"_0\":\"The address of the ACLManager\"}},\"getAddress(bytes32)\":{\"details\":\"The returned address might be an EOA or a contract, potentially proxiedIt returns ZERO if there is no registered address with the given id\",\"params\":{\"id\":\"The id\"},\"returns\":{\"_0\":\"The address of the registered for the specified id\"}},\"getMarketId()\":{\"returns\":{\"_0\":\"The market id\"}},\"getPool()\":{\"returns\":{\"_0\":\"The Pool proxy address\"}},\"getPoolConfigurator()\":{\"returns\":{\"_0\":\"The PoolConfigurator proxy address\"}},\"getPoolDataProvider()\":{\"returns\":{\"_0\":\"The address of the DataProvider\"}},\"getPriceOracle()\":{\"returns\":{\"_0\":\"The address of the PriceOracle\"}},\"getPriceOracleSentinel()\":{\"returns\":{\"_0\":\"The address of the PriceOracleSentinel\"}},\"setACLAdmin(address)\":{\"params\":{\"newAclAdmin\":\"The address of the new ACL admin\"}},\"setACLManager(address)\":{\"params\":{\"newAclManager\":\"The address of the new ACLManager\"}},\"setAddress(bytes32,address)\":{\"details\":\"IMPORTANT Use this function carefully, as it will do a hard replacement\",\"params\":{\"id\":\"The id\",\"newAddress\":\"The address to set\"}},\"setAddressAsProxy(bytes32,address)\":{\"details\":\"IMPORTANT Use this function carefully, only for ids that don't have an explicit setter function, in order to avoid unexpected consequences\",\"params\":{\"id\":\"The id\",\"newImplementationAddress\":\"The address of the new implementation\"}},\"setMarketId(string)\":{\"details\":\"This can be used to create an onchain registry of PoolAddressesProviders to identify and validate multiple Aave markets.\",\"params\":{\"newMarketId\":\"The market id\"}},\"setPoolConfiguratorImpl(address)\":{\"params\":{\"newPoolConfiguratorImpl\":\"The new PoolConfigurator implementation\"}},\"setPoolDataProvider(address)\":{\"params\":{\"newDataProvider\":\"The address of the new DataProvider\"}},\"setPoolImpl(address)\":{\"params\":{\"newPoolImpl\":\"The new Pool implementation\"}},\"setPriceOracle(address)\":{\"params\":{\"newPriceOracle\":\"The address of the new PriceOracle\"}},\"setPriceOracleSentinel(address)\":{\"params\":{\"newPriceOracleSentinel\":\"The address of the new PriceOracleSentinel\"}}},\"title\":\"IPoolAddressesProvider\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getACLAdmin()\":{\"notice\":\"Returns the address of the ACL admin.\"},\"getACLManager()\":{\"notice\":\"Returns the address of the ACL manager.\"},\"getAddress(bytes32)\":{\"notice\":\"Returns an address by its identifier.\"},\"getMarketId()\":{\"notice\":\"Returns the id of the Aave market to which this contract points to.\"},\"getPool()\":{\"notice\":\"Returns the address of the Pool proxy.\"},\"getPoolConfigurator()\":{\"notice\":\"Returns the address of the PoolConfigurator proxy.\"},\"getPoolDataProvider()\":{\"notice\":\"Returns the address of the data provider.\"},\"getPriceOracle()\":{\"notice\":\"Returns the address of the price oracle.\"},\"getPriceOracleSentinel()\":{\"notice\":\"Returns the address of the price oracle sentinel.\"},\"setACLAdmin(address)\":{\"notice\":\"Updates the address of the ACL admin.\"},\"setACLManager(address)\":{\"notice\":\"Updates the address of the ACL manager.\"},\"setAddress(bytes32,address)\":{\"notice\":\"Sets an address for an id replacing the address saved in the addresses map.\"},\"setAddressAsProxy(bytes32,address)\":{\"notice\":\"General function to update the implementation of a proxy registered with certain `id`. If there is no proxy registered, it will instantiate one and set as implementation the `newImplementationAddress`.\"},\"setMarketId(string)\":{\"notice\":\"Associates an id with a specific PoolAddressesProvider.\"},\"setPoolConfiguratorImpl(address)\":{\"notice\":\"Updates the implementation of the PoolConfigurator, or creates a proxy setting the new `PoolConfigurator` implementation when the function is called for the first time.\"},\"setPoolDataProvider(address)\":{\"notice\":\"Updates the address of the data provider.\"},\"setPoolImpl(address)\":{\"notice\":\"Updates the implementation of the Pool, or creates a proxy setting the new `pool` implementation when the function is called for the first time.\"},\"setPriceOracle(address)\":{\"notice\":\"Updates the address of the price oracle.\"},\"setPriceOracleSentinel(address)\":{\"notice\":\"Updates the address of the price oracle sentinel.\"}},\"notice\":\"Defines the basic interface for a Pool Addresses Provider.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":\"IPoolAddressesProvider\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a\",\"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getACLAdmin()": {
								"notice": "Returns the address of the ACL admin."
							},
							"getACLManager()": {
								"notice": "Returns the address of the ACL manager."
							},
							"getAddress(bytes32)": {
								"notice": "Returns an address by its identifier."
							},
							"getMarketId()": {
								"notice": "Returns the id of the Aave market to which this contract points to."
							},
							"getPool()": {
								"notice": "Returns the address of the Pool proxy."
							},
							"getPoolConfigurator()": {
								"notice": "Returns the address of the PoolConfigurator proxy."
							},
							"getPoolDataProvider()": {
								"notice": "Returns the address of the data provider."
							},
							"getPriceOracle()": {
								"notice": "Returns the address of the price oracle."
							},
							"getPriceOracleSentinel()": {
								"notice": "Returns the address of the price oracle sentinel."
							},
							"setACLAdmin(address)": {
								"notice": "Updates the address of the ACL admin."
							},
							"setACLManager(address)": {
								"notice": "Updates the address of the ACL manager."
							},
							"setAddress(bytes32,address)": {
								"notice": "Sets an address for an id replacing the address saved in the addresses map."
							},
							"setAddressAsProxy(bytes32,address)": {
								"notice": "General function to update the implementation of a proxy registered with certain `id`. If there is no proxy registered, it will instantiate one and set as implementation the `newImplementationAddress`."
							},
							"setMarketId(string)": {
								"notice": "Associates an id with a specific PoolAddressesProvider."
							},
							"setPoolConfiguratorImpl(address)": {
								"notice": "Updates the implementation of the PoolConfigurator, or creates a proxy setting the new `PoolConfigurator` implementation when the function is called for the first time."
							},
							"setPoolDataProvider(address)": {
								"notice": "Updates the address of the data provider."
							},
							"setPoolImpl(address)": {
								"notice": "Updates the implementation of the Pool, or creates a proxy setting the new `pool` implementation when the function is called for the first time."
							},
							"setPriceOracle(address)": {
								"notice": "Updates the address of the price oracle."
							},
							"setPriceOracleSentinel(address)": {
								"notice": "Updates the address of the price oracle sentinel."
							}
						},
						"notice": "Defines the basic interface for a Pool Addresses Provider.",
						"version": 1
					}
				}
			},
			"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol": {
				"DataTypes": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":62:7368  library DataTypes {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":62:7368  library DataTypes {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122030e94eed798c222921b69965a0ceb7c0f9bc97b6208fa73c08d0081e65d7290064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122030e94eed798c222921b69965a0ceb7c0f9bc97b6208fa73c08d0081e65d7290064736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS 0xE9 0x4E 0xED PUSH26 0x8C222921B69965A0CEB7C0F9BC97B6208FA73C08D0081E65D729 STOP PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "62:7306:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;62:7306:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122030e94eed798c222921b69965a0ceb7c0f9bc97b6208fa73c08d0081e65d7290064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS 0xE9 0x4E 0xED PUSH26 0x8C222921B69965A0CEB7C0F9BC97B6208FA73C08D0081E65D729 STOP PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "62:7306:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 7368,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122030e94eed798c222921b69965a0ceb7c0f9bc97b6208fa73c08d0081e65d7290064736f6c634300081a0033",
									".code": [
										{
											"begin": 62,
											"end": 7368,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 62,
											"end": 7368,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 62,
											"end": 7368,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 62,
											"end": 7368,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 62,
											"end": 7368,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 62,
											"end": 7368,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 62,
											"end": 7368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 7368,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 7368,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@aave/core-v3/contracts/interfaces/IPool.sol",
								"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol",
								"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol",
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/TreasuryDAO.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":\"DataTypes\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0x771cb99fd8519c974f7e12130387c4d9a997a6e8d0ac10e4303b842fe53efa88\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0f41689d1d58bc13678c749bae8830f5a8b19b89cd135e962bf07d483350f828\",\"dweb:/ipfs/QmQSNGDxjYGqT1GU2CZzsWUTNcAtcfkg1jDGTH516nCAfN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol": {
				"AutomationCompatibleInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "checkData",
									"type": "bytes"
								}
							],
							"name": "checkUpkeep",
							"outputs": [
								{
									"internalType": "bool",
									"name": "upkeepNeeded",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"name": "performUpkeep",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"checkUpkeep(bytes)": {
								"details": "To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.",
								"params": {
									"checkData": "specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."
								},
								"returns": {
									"performData": "bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.",
									"upkeepNeeded": "boolean to indicate whether the keeper should call performUpkeep or not."
								}
							},
							"performUpkeep(bytes)": {
								"details": "The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.",
								"params": {
									"performData": "is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"checkUpkeep(bytes)": "6e04ff0d",
							"performUpkeep(bytes)": "4585e33b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":\"AutomationCompatibleInterface\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b738dba680a6fbc4afc85819743f13f5b7f4790ec8634c9894e1160327b11b6e\",\"dweb:/ipfs/Qmbv3euvQppeBm2g61khcJSRMZWi78xUWzbnjKAvDBnka4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"checkUpkeep(bytes)": {
								"notice": "method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."
							},
							"performUpkeep(bytes)": {
								"notice": "method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."
							}
						},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1277,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/TreasuryDAO.sol": {
				"TreasuryDAO": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "oracle",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "aavePool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ProposalCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "ProposalExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "voter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								}
							],
							"name": "Voted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "addMember",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "checkUpkeep",
							"outputs": [
								{
									"internalType": "bool",
									"name": "upkeepNeeded",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositToAave",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "executeProposal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getETHPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governanceToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lendingPool",
							"outputs": [
								{
									"internalType": "contract IPool",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "members",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minVoteDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"name": "performUpkeep",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "proposals",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "votes",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "unlockTime",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "executed",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "proposeFunding",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawFromAave",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"performUpkeep(bytes)": {
								"details": "The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.",
								"params": {
									"performData": "is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/TreasuryDAO.sol\":381:4599  contract TreasuryDAO is Ownable, KeeperCompatibleInterface {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/TreasuryDAO.sol\":929:935  1 days */\n  0x015180\n    /* \"contracts/TreasuryDAO.sol\":896:935  uint256 public minVoteDuration = 1 days */\n  0x06\n  sstore\n    /* \"contracts/TreasuryDAO.sol\":1132:1459  constructor(address tokenAddress, address oracle, address aavePool, address initialOwner) Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/TreasuryDAO.sol\":1230:1242  initialOwner */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":811:862   */\n  mstore\n    /* \"#utility.yul\":784:802   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/TreasuryDAO.sol\":1254:1269  governanceToken */\n  0x03\n    /* \"contracts/TreasuryDAO.sol\":1254:1292  governanceToken = IERC20(tokenAddress) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap7\n  dup8\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/TreasuryDAO.sol\":1302:1311  priceFeed */\n  0x04\n    /* \"contracts/TreasuryDAO.sol\":1302:1343  priceFeed = AggregatorV3Interface(oracle) */\n  dup1\n  sload\n  dup3\n  and\n  swap5\n  dup7\n  and\n  swap5\n  swap1\n  swap5\n  or\n  swap1\n  swap4\n  sstore\n    /* \"contracts/TreasuryDAO.sol\":1385:1396  lendingPool */\n  0x05\n    /* \"contracts/TreasuryDAO.sol\":1385:1414  lendingPool = IPool(aavePool) */\n  dup1\n  sload\n  swap1\n  swap4\n  and\n  swap2\n  dup5\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/TreasuryDAO.sol\":1424:1445  members[initialOwner] */\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n  0x01\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n    /* \"contracts/TreasuryDAO.sol\":1424:1452  members[initialOwner] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/TreasuryDAO.sol\":381:4599  contract TreasuryDAO is Ownable, KeeperCompatibleInterface {... */\n  jump(tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_15:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_18:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:660   */\ntag_3:\n    /* \"#utility.yul\":293:299   */\n  0x00\n    /* \"#utility.yul\":301:307   */\n  dup1\n    /* \"#utility.yul\":309:315   */\n  0x00\n    /* \"#utility.yul\":317:323   */\n  dup1\n    /* \"#utility.yul\":370:373   */\n  0x80\n    /* \"#utility.yul\":358:367   */\n  dup6\n    /* \"#utility.yul\":349:356   */\n  dup8\n    /* \"#utility.yul\":345:368   */\n  sub\n    /* \"#utility.yul\":341:374   */\n  slt\n    /* \"#utility.yul\":338:391   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":387:388   */\n  0x00\n    /* \"#utility.yul\":384:385   */\n  dup1\n    /* \"#utility.yul\":377:389   */\n  revert\n    /* \"#utility.yul\":338:391   */\ntag_20:\n    /* \"#utility.yul\":410:450   */\n  tag_21\n    /* \"#utility.yul\":440:449   */\n  dup6\n    /* \"#utility.yul\":410:450   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":400:450   */\n  swap4\n  pop\n    /* \"#utility.yul\":469:518   */\n  tag_22\n    /* \"#utility.yul\":514:516   */\n  0x20\n    /* \"#utility.yul\":503:512   */\n  dup7\n    /* \"#utility.yul\":499:517   */\n  add\n    /* \"#utility.yul\":469:518   */\n  tag_15\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":459:518   */\n  swap3\n  pop\n    /* \"#utility.yul\":537:586   */\n  tag_23\n    /* \"#utility.yul\":582:584   */\n  0x40\n    /* \"#utility.yul\":571:580   */\n  dup7\n    /* \"#utility.yul\":567:585   */\n  add\n    /* \"#utility.yul\":537:586   */\n  tag_15\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":527:586   */\n  swap2\n  pop\n    /* \"#utility.yul\":605:654   */\n  tag_24\n    /* \"#utility.yul\":650:652   */\n  0x60\n    /* \"#utility.yul\":639:648   */\n  dup7\n    /* \"#utility.yul\":635:653   */\n  add\n    /* \"#utility.yul\":605:654   */\n  tag_15\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":595:654   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:660   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":665:868   */\ntag_16:\n    /* \"contracts/TreasuryDAO.sol\":381:4599  contract TreasuryDAO is Ownable, KeeperCompatibleInterface {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TreasuryDAO.sol\":381:4599  contract TreasuryDAO is Ownable, KeeperCompatibleInterface {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6e04ff0d\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xc00d2a8c\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xc00d2a8c\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xca6d56dc\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf96dae0a\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x6e04ff0d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa59a9973\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa607a8d9\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x12065fe0\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x12065fe0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x237af348\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4585e33b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x688f237b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x68fd2d80\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x0121b93f\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x013cf08b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x08ae4b0c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0d61b519\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/TreasuryDAO.sol\":2382:2924  function vote(uint proposalId) public onlyMember {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      stop\n        /* \"contracts/TreasuryDAO.sol\":752:779  Proposal[] public proposals */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n    tag_30:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":560:592   */\n      swap1\n      swap8\n      and\n        /* \"#utility.yul\":542:593   */\n      dup8\n      mstore\n        /* \"#utility.yul\":624:626   */\n      0x20\n        /* \"#utility.yul\":609:627   */\n      dup8\n      add\n        /* \"#utility.yul\":602:636   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":652:670   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":645:679   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":710:712   */\n      0x60\n        /* \"#utility.yul\":695:713   */\n      dup5\n      add\n        /* \"#utility.yul\":688:722   */\n      mstore\n        /* \"#utility.yul\":753:756   */\n      0x80\n        /* \"#utility.yul\":738:757   */\n      dup4\n      add\n        /* \"#utility.yul\":731:766   */\n      mstore\n        /* \"#utility.yul\":810:824   */\n      iszero\n        /* \"#utility.yul\":803:825   */\n      iszero\n        /* \"#utility.yul\":580:583   */\n      0xa0\n        /* \"#utility.yul\":782:801   */\n      dup3\n      add\n        /* \"#utility.yul\":775:826   */\n      mstore\n        /* \"#utility.yul\":529:532   */\n      0xc0\n        /* \"#utility.yul\":514:533   */\n      add\n        /* \"contracts/TreasuryDAO.sol\":752:779  Proposal[] public proposals */\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TreasuryDAO.sol\":707:746  mapping(address => bool) public members */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_36:\n      mload(0x40)\n        /* \"#utility.yul\":1390:1404   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1383:1405   */\n      iszero\n        /* \"#utility.yul\":1365:1406   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1353:1355   */\n      0x20\n        /* \"#utility.yul\":1338:1356   */\n      add\n        /* \"contracts/TreasuryDAO.sol\":707:746  mapping(address => bool) public members */\n      tag_33\n        /* \"#utility.yul\":1225:1412   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":2930:3405  function executeProposal(uint proposalId) public {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_25\n      tag_44\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n        /* \"contracts/TreasuryDAO.sol\":4500:4597  function getBalance() public view returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n        /* \"contracts/TreasuryDAO.sol\":4569:4590  address(this).balance */\n      selfbalance\n        /* \"contracts/TreasuryDAO.sol\":4500:4597  function getBalance() public view returns (uint256) {... */\n    tag_47:\n      mload(0x40)\n        /* \"#utility.yul\":1563:1588   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1551:1553   */\n      0x20\n        /* \"#utility.yul\":1536:1554   */\n      add\n        /* \"contracts/TreasuryDAO.sol\":4500:4597  function getBalance() public view returns (uint256) {... */\n      tag_33\n        /* \"#utility.yul\":1417:1594   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":1666:2376  function proposeFunding(address payable recipient, uint256 amount) public onlyMember {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_25\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n        /* \"contracts/TreasuryDAO.sol\":3997:4169  function performUpkeep(bytes calldata performData) external override {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_25\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"contracts/TreasuryDAO.sol\":4316:4452  function withdrawFromAave(uint256 amount) external onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_25\n      tag_63\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n        /* \"contracts/TreasuryDAO.sol\":4175:4310  function depositToAave(uint256 amount) external onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_25\n      tag_67\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"contracts/TreasuryDAO.sol\":3570:3991  function checkUpkeep(bytes calldata /* checkData */) external view override returns (bool upkeepNeeded, bytes memory /* performData */) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      tag_71\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_33\n      swap3\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_25\n      tag_77\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_79:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3236:3268   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3218:3269   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3206:3208   */\n      0x20\n        /* \"#utility.yul\":3191:3209   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_33\n        /* \"#utility.yul\":3072:3275   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":866:890  IPool public lendingPool */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      sload(0x05)\n      tag_79\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/TreasuryDAO.sol\":3411:3564  function getETHPrice() public view returns (uint256) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_47\n      tag_90\n      jump\t// in\n        /* \"contracts/TreasuryDAO.sol\":896:935  uint256 public minVoteDuration = 1 days */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_47\n      sload(0x06)\n      dup2\n      jump\n        /* \"contracts/TreasuryDAO.sol\":1569:1660  function addMember(address member) public onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_25\n      tag_98\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_25\n      tag_104\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n        /* \"contracts/TreasuryDAO.sol\":785:814  IERC20 public governanceToken */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      sload(0x03)\n      tag_79\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/TreasuryDAO.sol\":2382:2924  function vote(uint proposalId) public onlyMember {... */\n    tag_28:\n        /* \"contracts/TreasuryDAO.sol\":1513:1523  msg.sender */\n      caller\n        /* \"contracts/TreasuryDAO.sol\":1505:1524  members[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":1505:1512  members */\n      0x01\n        /* \"contracts/TreasuryDAO.sol\":1505:1524  members[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/TreasuryDAO.sol\":1497:1545  require(members[msg.sender], \"Not a DAO member\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3926:3928   */\n      0x20\n        /* \"contracts/TreasuryDAO.sol\":1497:1545  require(members[msg.sender], \"Not a DAO member\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3908:3929   */\n      mstore\n        /* \"#utility.yul\":3965:3967   */\n      0x10\n        /* \"#utility.yul\":3945:3963   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3938:3968   */\n      mstore\n      shl(0x81, 0x2737ba1030902220a79036b2b6b132b9)\n        /* \"#utility.yul\":3984:4002   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3977:4023   */\n      mstore\n        /* \"#utility.yul\":4040:4058   */\n      0x64\n      add\n        /* \"contracts/TreasuryDAO.sol\":1497:1545  require(members[msg.sender], \"Not a DAO member\") */\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"contracts/TreasuryDAO.sol\":2441:2466  Proposal storage proposal */\n      0x00\n        /* \"contracts/TreasuryDAO.sol\":2469:2478  proposals */\n      0x02\n        /* \"contracts/TreasuryDAO.sol\":2479:2489  proposalId */\n      dup3\n        /* \"contracts/TreasuryDAO.sol\":2469:2490  proposals[proposalId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_117\n      jumpi\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/TreasuryDAO.sol\":2524:2534  msg.sender */\n      caller\n        /* \"contracts/TreasuryDAO.sol\":2509:2535  proposal.voted[msg.sender] */\n      dup5\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":2509:2523  proposal.voted */\n      0x06\n        /* \"contracts/TreasuryDAO.sol\":2469:2490  proposals[proposalId] */\n      0x07\n      swap1\n      swap4\n      mul\n      add\n        /* \"contracts/TreasuryDAO.sol\":2509:2523  proposal.voted */\n      swap2\n      dup3\n      add\n        /* \"contracts/TreasuryDAO.sol\":2509:2535  proposal.voted[msg.sender] */\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/TreasuryDAO.sol\":2469:2490  proposals[proposalId] */\n      swap1\n      swap2\n      pop\n        /* \"contracts/TreasuryDAO.sol\":2509:2535  proposal.voted[msg.sender] */\n      0xff\n      and\n        /* \"contracts/TreasuryDAO.sol\":2508:2535  !proposal.voted[msg.sender] */\n      iszero\n        /* \"contracts/TreasuryDAO.sol\":2500:2553  require(!proposal.voted[msg.sender], \"Already voted\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4403:4405   */\n      0x20\n        /* \"contracts/TreasuryDAO.sol\":2500:2553  require(!proposal.voted[msg.sender], \"Already voted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4385:4406   */\n      mstore\n        /* \"#utility.yul\":4442:4444   */\n      0x0d\n        /* \"#utility.yul\":4422:4440   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4415:4445   */\n      mstore\n      shl(0x9a, 0x105b1c9958591e481d9bdd1959)\n        /* \"#utility.yul\":4461:4479   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4454:4497   */\n      mstore\n        /* \"#utility.yul\":4514:4532   */\n      0x64\n      add\n        /* \"contracts/TreasuryDAO.sol\":2500:2553  require(!proposal.voted[msg.sender], \"Already voted\") */\n      tag_113\n        /* \"#utility.yul\":4201:4538   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":2500:2553  require(!proposal.voted[msg.sender], \"Already voted\") */\n    tag_120:\n        /* \"contracts/TreasuryDAO.sol\":2589:2597  proposal */\n      dup1\n        /* \"contracts/TreasuryDAO.sol\":2589:2605  proposal.endTime */\n      0x03\n      add\n      sload\n        /* \"contracts/TreasuryDAO.sol\":2571:2586  block.timestamp */\n      timestamp\n        /* \"contracts/TreasuryDAO.sol\":2571:2605  block.timestamp < proposal.endTime */\n      lt\n        /* \"contracts/TreasuryDAO.sol\":2563:2629  require(block.timestamp < proposal.endTime, \"Voting period ended\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4745:4747   */\n      0x20\n        /* \"contracts/TreasuryDAO.sol\":2563:2629  require(block.timestamp < proposal.endTime, \"Voting period ended\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4727:4748   */\n      mstore\n        /* \"#utility.yul\":4784:4786   */\n      0x13\n        /* \"#utility.yul\":4764:4782   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4757:4787   */\n      mstore\n      shl(0x6a, 0x159bdd1a5b99c81c195c9a5bd908195b991959)\n        /* \"#utility.yul\":4803:4821   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4796:4845   */\n      mstore\n        /* \"#utility.yul\":4862:4880   */\n      0x64\n      add\n        /* \"contracts/TreasuryDAO.sol\":2563:2629  require(block.timestamp < proposal.endTime, \"Voting period ended\") */\n      tag_113\n        /* \"#utility.yul\":4543:4886   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":2563:2629  require(block.timestamp < proposal.endTime, \"Voting period ended\") */\n    tag_123:\n        /* \"contracts/TreasuryDAO.sol\":2663:2678  governanceToken */\n      sload(0x03)\n        /* \"contracts/TreasuryDAO.sol\":2663:2700  governanceToken.balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":2689:2699  msg.sender */\n      caller\n        /* \"contracts/TreasuryDAO.sol\":2663:2700  governanceToken.balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3218:3269   */\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":2640:2660  uint256 voterBalance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/TreasuryDAO.sol\":2663:2678  governanceToken */\n      and\n      swap1\n        /* \"contracts/TreasuryDAO.sol\":2663:2688  governanceToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":3191:3209   */\n      0x24\n      add\n        /* \"contracts/TreasuryDAO.sol\":2663:2700  governanceToken.balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"contracts/TreasuryDAO.sol\":2640:2700  uint256 voterBalance = governanceToken.balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/TreasuryDAO.sol\":2733:2734  0 */\n      0x00\n        /* \"contracts/TreasuryDAO.sol\":2718:2730  voterBalance */\n      dup2\n        /* \"contracts/TreasuryDAO.sol\":2718:2734  voterBalance > 0 */\n      gt\n        /* \"contracts/TreasuryDAO.sol\":2710:2774  require(voterBalance > 0, \"Must hold governance tokens to vote\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5328:5330   */\n      0x20\n        /* \"contracts/TreasuryDAO.sol\":2710:2774  require(voterBalance > 0, \"Must hold governance tokens to vote\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5310:5331   */\n      mstore\n        /* \"#utility.yul\":5367:5369   */\n      0x23\n        /* \"#utility.yul\":5347:5365   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5340:5370   */\n      mstore\n        /* \"#utility.yul\":5406:5440   */\n      0x4d75737420686f6c6420676f7665726e616e636520746f6b656e7320746f2076\n        /* \"#utility.yul\":5386:5404   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5379:5441   */\n      mstore\n      shl(0xe8, 0x6f7465)\n        /* \"#utility.yul\":5457:5475   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5450:5483   */\n      mstore\n        /* \"#utility.yul\":5500:5519   */\n      0x84\n      add\n        /* \"contracts/TreasuryDAO.sol\":2710:2774  require(voterBalance > 0, \"Must hold governance tokens to vote\") */\n      tag_113\n        /* \"#utility.yul\":5126:5525   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":2710:2774  require(voterBalance > 0, \"Must hold governance tokens to vote\") */\n    tag_131:\n        /* \"contracts/TreasuryDAO.sol\":2803:2815  voterBalance */\n      dup1\n        /* \"contracts/TreasuryDAO.sol\":2785:2793  proposal */\n      dup3\n        /* \"contracts/TreasuryDAO.sol\":2785:2799  proposal.votes */\n      0x02\n      add\n      0x00\n        /* \"contracts/TreasuryDAO.sol\":2785:2815  proposal.votes += voterBalance */\n      dup3\n      dup3\n      sload\n      tag_134\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/TreasuryDAO.sol\":2840:2850  msg.sender */\n      caller\n        /* \"contracts/TreasuryDAO.sol\":2825:2851  proposal.voted[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":2825:2839  proposal.voted */\n      0x06\n      dup5\n      add\n        /* \"contracts/TreasuryDAO.sol\":2825:2851  proposal.voted[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/TreasuryDAO.sol\":2825:2858  proposal.voted[msg.sender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/TreasuryDAO.sol\":2854:2858  true */\n      0x01\n        /* \"contracts/TreasuryDAO.sol\":2825:2858  proposal.voted[msg.sender] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/TreasuryDAO.sol\":2874:2917  Voted(proposalId, msg.sender, voterBalance) */\n      dup2\n      mload\n        /* \"#utility.yul\":5994:6019   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":6035:6053   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":6028:6088   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":6104:6122   */\n      dup2\n      add\n        /* \"#utility.yul\":6097:6131   */\n      dup3\n      swap1\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":2874:2917  Voted(proposalId, msg.sender, voterBalance) */\n      0x1abe610cf2bf87e57dcc1181fcf5ac0934e843d8344ab9eed6e86c799f62585e\n      swap1\n        /* \"#utility.yul\":5982:5984   */\n      0x60\n        /* \"#utility.yul\":5967:5985   */\n      add\n        /* \"contracts/TreasuryDAO.sol\":2874:2917  Voted(proposalId, msg.sender, voterBalance) */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/TreasuryDAO.sol\":2431:2924  {... */\n      pop\n      pop\n        /* \"contracts/TreasuryDAO.sol\":2382:2924  function vote(uint proposalId) public onlyMember {... */\n      pop\n      jump\t// out\n        /* \"contracts/TreasuryDAO.sol\":752:779  Proposal[] public proposals */\n    tag_32:\n      0x02\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x07\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      dup6\n      add\n      sload\n      0x05\n      swap1\n      swap6\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap5\n      and\n      swap6\n      pop\n      swap2\n      swap4\n      swap1\n      swap3\n      0xff\n      and\n      dup7\n      jump\t// out\n        /* \"contracts/TreasuryDAO.sol\":2930:3405  function executeProposal(uint proposalId) public {... */\n    tag_45:\n        /* \"contracts/TreasuryDAO.sol\":2989:3014  Proposal storage proposal */\n      0x00\n        /* \"contracts/TreasuryDAO.sol\":3017:3026  proposals */\n      0x02\n        /* \"contracts/TreasuryDAO.sol\":3027:3037  proposalId */\n      dup3\n        /* \"contracts/TreasuryDAO.sol\":3017:3038  proposals[proposalId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_142\n      jumpi\n      tag_142\n      tag_118\n      jump\t// in\n    tag_142:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/TreasuryDAO.sol\":2989:3038  Proposal storage proposal = proposals[proposalId] */\n      swap1\n      pop\n        /* \"contracts/TreasuryDAO.sol\":3074:3086  500 * 10**18 */\n      0x1b1ae4d6e2ef500000\n        /* \"contracts/TreasuryDAO.sol\":3056:3064  proposal */\n      dup2\n        /* \"contracts/TreasuryDAO.sol\":3056:3070  proposal.votes */\n      0x02\n      add\n      sload\n        /* \"contracts/TreasuryDAO.sol\":3056:3086  proposal.votes >= 500 * 10**18 */\n      lt\n      iszero\n        /* \"contracts/TreasuryDAO.sol\":3048:3129  require(proposal.votes >= 500 * 10**18, \"Not enough votes (500 tokens required)\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6344:6346   */\n      0x20\n        /* \"contracts/TreasuryDAO.sol\":3048:3129  require(proposal.votes >= 500 * 10**18, \"Not enough votes (500 tokens required)\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6326:6347   */\n      mstore\n        /* \"#utility.yul\":6383:6385   */\n      0x26\n        /* \"#utility.yul\":6363:6381   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6356:6386   */\n      mstore\n        /* \"#utility.yul\":6422:6456   */\n      0x4e6f7420656e6f75676820766f746573202835303020746f6b656e7320726571\n        /* \"#utility.yul\":6402:6420   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6395:6457   */\n      mstore\n      shl(0xd0, 0x756972656429)\n        /* \"#utility.yul\":6473:6491   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6466:6502   */\n      mstore\n        /* \"#utility.yul\":6519:6538   */\n      0x84\n      add\n        /* \"contracts/TreasuryDAO.sol\":3048:3129  require(proposal.votes >= 500 * 10**18, \"Not enough votes (500 tokens required)\") */\n      tag_113\n        /* \"#utility.yul\":6142:6544   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":3048:3129  require(proposal.votes >= 500 * 10**18, \"Not enough votes (500 tokens required)\") */\n    tag_144:\n        /* \"contracts/TreasuryDAO.sol\":3148:3165  proposal.executed */\n      0x05\n      dup2\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/TreasuryDAO.sol\":3147:3165  !proposal.executed */\n      iszero\n        /* \"contracts/TreasuryDAO.sol\":3139:3186  require(!proposal.executed, \"Already executed\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6751:6753   */\n      0x20\n        /* \"contracts/TreasuryDAO.sol\":3139:3186  require(!proposal.executed, \"Already executed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6733:6754   */\n      mstore\n        /* \"#utility.yul\":6790:6792   */\n      0x10\n        /* \"#utility.yul\":6770:6788   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6763:6793   */\n      mstore\n      shl(0x82, 0x105b1c9958591e48195e1958dd5d1959)\n        /* \"#utility.yul\":6809:6827   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6802:6848   */\n      mstore\n        /* \"#utility.yul\":6865:6883   */\n      0x64\n      add\n        /* \"contracts/TreasuryDAO.sol\":3139:3186  require(!proposal.executed, \"Already executed\") */\n      tag_113\n        /* \"#utility.yul\":6549:6889   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":3139:3186  require(!proposal.executed, \"Already executed\") */\n    tag_147:\n        /* \"contracts/TreasuryDAO.sol\":3223:3231  proposal */\n      dup1\n        /* \"contracts/TreasuryDAO.sol\":3223:3242  proposal.unlockTime */\n      0x04\n      add\n      sload\n        /* \"contracts/TreasuryDAO.sol\":3204:3219  block.timestamp */\n      timestamp\n        /* \"contracts/TreasuryDAO.sol\":3204:3242  block.timestamp >= proposal.unlockTime */\n      lt\n      iszero\n        /* \"contracts/TreasuryDAO.sol\":3196:3265  require(block.timestamp >= proposal.unlockTime, \"Funds still locked\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7096:7098   */\n      0x20\n        /* \"contracts/TreasuryDAO.sol\":3196:3265  require(block.timestamp >= proposal.unlockTime, \"Funds still locked\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7078:7099   */\n      mstore\n        /* \"#utility.yul\":7135:7137   */\n      0x12\n        /* \"#utility.yul\":7115:7133   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7108:7138   */\n      mstore\n      shl(0x72, 0x119d5b991cc81cdd1a5b1b081b1bd8dad959)\n        /* \"#utility.yul\":7154:7172   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7147:7195   */\n      mstore\n        /* \"#utility.yul\":7212:7230   */\n      0x64\n      add\n        /* \"contracts/TreasuryDAO.sol\":3196:3265  require(block.timestamp >= proposal.unlockTime, \"Funds still locked\") */\n      tag_113\n        /* \"#utility.yul\":6894:7236   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":3196:3265  require(block.timestamp >= proposal.unlockTime, \"Funds still locked\") */\n    tag_150:\n        /* \"contracts/TreasuryDAO.sol\":3276:3293  proposal.executed */\n      0x05\n      dup2\n      add\n        /* \"contracts/TreasuryDAO.sol\":3276:3300  proposal.executed = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/TreasuryDAO.sol\":3296:3300  true */\n      0x01\n        /* \"contracts/TreasuryDAO.sol\":3276:3300  proposal.executed = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/TreasuryDAO.sol\":3310:3328  proposal.recipient */\n      dup2\n      sload\n        /* \"contracts/TreasuryDAO.sol\":3338:3353  proposal.amount */\n      swap1\n      dup3\n      add\n      sload\n        /* \"contracts/TreasuryDAO.sol\":3310:3354  proposal.recipient.transfer(proposal.amount) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/TreasuryDAO.sol\":3310:3328  proposal.recipient */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/TreasuryDAO.sol\":3310:3354  proposal.recipient.transfer(proposal.amount) */\n      dup2\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"contracts/TreasuryDAO.sol\":3338:3353  proposal.amount */\n      swap1\n        /* \"contracts/TreasuryDAO.sol\":3276:3293  proposal.executed */\n      0x00\n        /* \"contracts/TreasuryDAO.sol\":3310:3354  proposal.recipient.transfer(proposal.amount) */\n      dup2\n        /* \"contracts/TreasuryDAO.sol\":3276:3293  proposal.executed */\n      dup2\n        /* \"contracts/TreasuryDAO.sol\":3310:3354  proposal.recipient.transfer(proposal.amount) */\n      dup2\n        /* \"contracts/TreasuryDAO.sol\":3338:3353  proposal.amount */\n      dup6\n        /* \"contracts/TreasuryDAO.sol\":3310:3328  proposal.recipient */\n      dup9\n        /* \"contracts/TreasuryDAO.sol\":3310:3354  proposal.recipient.transfer(proposal.amount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_154\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_154:\n      pop\n        /* \"contracts/TreasuryDAO.sol\":3370:3398  ProposalExecuted(proposalId) */\n      mload(0x40)\n        /* \"#utility.yul\":1563:1588   */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":3370:3398  ProposalExecuted(proposalId) */\n      0x712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f\n      swap1\n        /* \"#utility.yul\":1551:1553   */\n      0x20\n        /* \"#utility.yul\":1536:1554   */\n      add\n        /* \"contracts/TreasuryDAO.sol\":3370:3398  ProposalExecuted(proposalId) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/TreasuryDAO.sol\":2979:3405  {... */\n      pop\n        /* \"contracts/TreasuryDAO.sol\":2930:3405  function executeProposal(uint proposalId) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/TreasuryDAO.sol\":1666:2376  function proposeFunding(address payable recipient, uint256 amount) public onlyMember {... */\n    tag_55:\n        /* \"contracts/TreasuryDAO.sol\":1513:1523  msg.sender */\n      caller\n        /* \"contracts/TreasuryDAO.sol\":1505:1524  members[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":1505:1512  members */\n      0x01\n        /* \"contracts/TreasuryDAO.sol\":1505:1524  members[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/TreasuryDAO.sol\":1497:1545  require(members[msg.sender], \"Not a DAO member\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3926:3928   */\n      0x20\n        /* \"contracts/TreasuryDAO.sol\":1497:1545  require(members[msg.sender], \"Not a DAO member\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3908:3929   */\n      mstore\n        /* \"#utility.yul\":3965:3967   */\n      0x10\n        /* \"#utility.yul\":3945:3963   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3938:3968   */\n      mstore\n      shl(0x81, 0x2737ba1030902220a79036b2b6b132b9)\n        /* \"#utility.yul\":3984:4002   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3977:4023   */\n      mstore\n        /* \"#utility.yul\":4040:4058   */\n      0x64\n      add\n        /* \"contracts/TreasuryDAO.sol\":1497:1545  require(members[msg.sender], \"Not a DAO member\") */\n      tag_113\n        /* \"#utility.yul\":3724:4064   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":1497:1545  require(members[msg.sender], \"Not a DAO member\") */\n    tag_158:\n        /* \"contracts/TreasuryDAO.sol\":1794:1800  amount */\n      dup1\n        /* \"contracts/TreasuryDAO.sol\":1769:1790  address(this).balance */\n      selfbalance\n        /* \"contracts/TreasuryDAO.sol\":1769:1800  address(this).balance >= amount */\n      lt\n      iszero\n        /* \"contracts/TreasuryDAO.sol\":1761:1834  require(address(this).balance >= amount, \"Insufficient treasury balance\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7443:7445   */\n      0x20\n        /* \"contracts/TreasuryDAO.sol\":1761:1834  require(address(this).balance >= amount, \"Insufficient treasury balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7425:7446   */\n      mstore\n        /* \"#utility.yul\":7482:7484   */\n      0x1d\n        /* \"#utility.yul\":7462:7480   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7455:7485   */\n      mstore\n        /* \"#utility.yul\":7521:7552   */\n      0x496e73756666696369656e742074726561737572792062616c616e6365000000\n        /* \"#utility.yul\":7501:7519   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7494:7553   */\n      mstore\n        /* \"#utility.yul\":7570:7588   */\n      0x64\n      add\n        /* \"contracts/TreasuryDAO.sol\":1761:1834  require(address(this).balance >= amount, \"Insufficient treasury balance\") */\n      tag_113\n        /* \"#utility.yul\":7241:7594   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":1761:1834  require(address(this).balance >= amount, \"Insufficient treasury balance\") */\n    tag_161:\n        /* \"contracts/TreasuryDAO.sol\":1868:1872  1500 */\n      0x05dc\n        /* \"contracts/TreasuryDAO.sol\":1852:1865  getETHPrice() */\n      tag_164\n        /* \"contracts/TreasuryDAO.sol\":1852:1863  getETHPrice */\n      tag_90\n        /* \"contracts/TreasuryDAO.sol\":1852:1865  getETHPrice() */\n      jump\t// in\n    tag_164:\n        /* \"contracts/TreasuryDAO.sol\":1852:1872  getETHPrice() > 1500 */\n      gt\n        /* \"contracts/TreasuryDAO.sol\":1844:1894  require(getETHPrice() > 1500, \"ETH price too low\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7801:7803   */\n      0x20\n        /* \"contracts/TreasuryDAO.sol\":1844:1894  require(getETHPrice() > 1500, \"ETH price too low\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7783:7804   */\n      mstore\n        /* \"#utility.yul\":7840:7842   */\n      0x11\n        /* \"#utility.yul\":7820:7838   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7813:7843   */\n      mstore\n      shl(0x78, 0x45544820707269636520746f6f206c6f77)\n        /* \"#utility.yul\":7859:7877   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7852:7899   */\n      mstore\n        /* \"#utility.yul\":7916:7934   */\n      0x64\n      add\n        /* \"contracts/TreasuryDAO.sol\":1844:1894  require(getETHPrice() > 1500, \"ETH price too low\") */\n      tag_113\n        /* \"#utility.yul\":7599:7940   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":1844:1894  require(getETHPrice() > 1500, \"ETH price too low\") */\n    tag_165:\n        /* \"contracts/TreasuryDAO.sol\":1905:1914  proposals */\n      0x02\n        /* \"contracts/TreasuryDAO.sol\":1905:1921  proposals.push() */\n      dup1\n      sload\n      0x01\n      swap1\n      dup2\n      add\n      dup1\n      dup4\n      sstore\n      0x00\n      dup4\n      dup2\n      mstore\n      swap3\n        /* \"contracts/TreasuryDAO.sol\":1905:1914  proposals */\n      swap2\n        /* \"contracts/TreasuryDAO.sol\":1972:1992  proposals.length - 1 */\n      tag_169\n      swap2\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"contracts/TreasuryDAO.sol\":1962:1993  proposals[proposals.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_172\n      jumpi\n      tag_172\n      tag_118\n      jump\t// in\n    tag_172:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      0x07\n      swap2\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/TreasuryDAO.sol\":2003:2036  newProposal.recipient = recipient */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      or\n      dup2\n      sstore\n      0x01\n        /* \"contracts/TreasuryDAO.sol\":2046:2064  newProposal.amount */\n      dup2\n      add\n        /* \"contracts/TreasuryDAO.sol\":2046:2073  newProposal.amount = amount */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/TreasuryDAO.sol\":2083:2100  newProposal.votes */\n      0x02\n      dup2\n      add\n        /* \"contracts/TreasuryDAO.sol\":2083:2104  newProposal.votes = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/TreasuryDAO.sol\":2154:2169  minVoteDuration */\n      sload(0x06)\n        /* \"contracts/TreasuryDAO.sol\":1962:1993  proposals[proposals.length - 1] */\n      swap1\n      swap2\n      pop\n        /* \"contracts/TreasuryDAO.sol\":2136:2169  block.timestamp + minVoteDuration */\n      tag_174\n      swap1\n        /* \"contracts/TreasuryDAO.sol\":2136:2151  block.timestamp */\n      timestamp\n        /* \"contracts/TreasuryDAO.sol\":2136:2169  block.timestamp + minVoteDuration */\n      tag_135\n      jump\t// in\n    tag_174:\n        /* \"contracts/TreasuryDAO.sol\":2114:2133  newProposal.endTime */\n      0x03\n      dup3\n      add\n        /* \"contracts/TreasuryDAO.sol\":2114:2169  newProposal.endTime = block.timestamp + minVoteDuration */\n      sstore\n        /* \"contracts/TreasuryDAO.sol\":2204:2230  block.timestamp + 48 hours */\n      tag_175\n        /* \"contracts/TreasuryDAO.sol\":2204:2219  block.timestamp */\n      timestamp\n        /* \"contracts/TreasuryDAO.sol\":2222:2230  48 hours */\n      0x02a300\n        /* \"contracts/TreasuryDAO.sol\":2204:2230  block.timestamp + 48 hours */\n      tag_135\n      jump\t// in\n    tag_175:\n        /* \"contracts/TreasuryDAO.sol\":2179:2201  newProposal.unlockTime */\n      0x04\n      dup3\n      add\n        /* \"contracts/TreasuryDAO.sol\":2179:2230  newProposal.unlockTime = block.timestamp + 48 hours */\n      sstore\n        /* \"contracts/TreasuryDAO.sol\":2269:2289  newProposal.executed */\n      0x05\n      dup2\n      add\n        /* \"contracts/TreasuryDAO.sol\":2269:2297  newProposal.executed = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/TreasuryDAO.sol\":2329:2338  proposals */\n      0x02\n        /* \"contracts/TreasuryDAO.sol\":2329:2345  proposals.length */\n      sload\n        /* \"contracts/TreasuryDAO.sol\":2313:2369  ProposalCreated(proposals.length - 1, recipient, amount) */\n      0x3417b456fad6209c73445d5efd446d686e75e4560f0f50c13b5a5cde976447b4\n      swap1\n        /* \"contracts/TreasuryDAO.sol\":2329:2349  proposals.length - 1 */\n      tag_176\n      swap1\n        /* \"contracts/TreasuryDAO.sol\":2269:2297  newProposal.executed = false */\n      0x01\n      swap1\n        /* \"contracts/TreasuryDAO.sol\":2329:2349  proposals.length - 1 */\n      tag_170\n      jump\t// in\n    tag_176:\n        /* \"contracts/TreasuryDAO.sol\":2313:2369  ProposalCreated(proposals.length - 1, recipient, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5994:6019   */\n      swap2\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6055:6087   */\n      dup7\n      and\n        /* \"#utility.yul\":6050:6052   */\n      0x20\n        /* \"#utility.yul\":6035:6053   */\n      dup4\n      add\n        /* \"#utility.yul\":6028:6088   */\n      mstore\n        /* \"#utility.yul\":6104:6122   */\n      dup2\n      add\n        /* \"#utility.yul\":6097:6131   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":5982:5984   */\n      0x60\n        /* \"#utility.yul\":5967:5985   */\n      add\n        /* \"contracts/TreasuryDAO.sol\":2313:2369  ProposalCreated(proposals.length - 1, recipient, amount) */\n      tag_136\n        /* \"#utility.yul\":5792:6137   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":3997:4169  function performUpkeep(bytes calldata performData) external override {... */\n    tag_60:\n        /* \"contracts/TreasuryDAO.sol\":4076:4091  uint proposalId */\n      0x00\n        /* \"contracts/TreasuryDAO.sol\":4094:4125  abi.decode(performData, (uint)) */\n      tag_180\n      dup3\n      dup5\n      add\n        /* \"contracts/TreasuryDAO.sol\":4105:4116  performData */\n      dup5\n        /* \"contracts/TreasuryDAO.sol\":4094:4125  abi.decode(performData, (uint)) */\n      tag_27\n      jump\t// in\n    tag_180:\n        /* \"contracts/TreasuryDAO.sol\":4076:4125  uint proposalId = abi.decode(performData, (uint)) */\n      swap1\n      pop\n        /* \"contracts/TreasuryDAO.sol\":4135:4162  executeProposal(proposalId) */\n      tag_181\n        /* \"contracts/TreasuryDAO.sol\":4151:4161  proposalId */\n      dup2\n        /* \"contracts/TreasuryDAO.sol\":4135:4150  executeProposal */\n      tag_45\n        /* \"contracts/TreasuryDAO.sol\":4135:4162  executeProposal(proposalId) */\n      jump\t// in\n    tag_181:\n        /* \"contracts/TreasuryDAO.sol\":4066:4169  {... */\n      pop\n        /* \"contracts/TreasuryDAO.sol\":3997:4169  function performUpkeep(bytes calldata performData) external override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TreasuryDAO.sol\":4316:4452  function withdrawFromAave(uint256 amount) external onlyOwner {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_183:\n        /* \"contracts/TreasuryDAO.sol\":4387:4398  lendingPool */\n      sload(0x05)\n        /* \"contracts/TreasuryDAO.sol\":4387:4445  lendingPool.withdraw(address(this), amount, address(this)) */\n      mload(0x40)\n      shl(0xe2, 0x1a4ca37b)\n      dup2\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":4416:4420  this */\n      address\n        /* \"contracts/TreasuryDAO.sol\":4387:4445  lendingPool.withdraw(address(this), amount, address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8638:8689   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8705:8723   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8698:8732   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":8748:8766   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8741:8801   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/TreasuryDAO.sol\":4387:4398  lendingPool */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/TreasuryDAO.sol\":4387:4407  lendingPool.withdraw */\n      0x69328dec\n      swap1\n        /* \"#utility.yul\":8611:8629   */\n      0x64\n      add\n        /* \"contracts/TreasuryDAO.sol\":4387:4445  lendingPool.withdraw(address(this), amount, address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_189:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_190\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_190:\n      pop\n        /* \"contracts/TreasuryDAO.sol\":4316:4452  function withdrawFromAave(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/TreasuryDAO.sol\":4175:4310  function depositToAave(uint256 amount) external onlyOwner {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_192:\n        /* \"contracts/TreasuryDAO.sol\":4243:4254  lendingPool */\n      sload(0x05)\n        /* \"contracts/TreasuryDAO.sol\":4243:4303  lendingPool.deposit(address(this), amount, address(this), 0) */\n      mload(0x40)\n      shl(0xe0, 0xe8eda9df)\n      dup2\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":4271:4275  this */\n      address\n        /* \"contracts/TreasuryDAO.sol\":4243:4303  lendingPool.deposit(address(this), amount, address(this), 0) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9050:9101   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9117:9135   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9110:9144   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":9160:9178   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9153:9213   */\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":4243:4254  lendingPool */\n      0x00\n        /* \"#utility.yul\":9229:9247   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9222:9269   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/TreasuryDAO.sol\":4243:4254  lendingPool */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/TreasuryDAO.sol\":4243:4262  lendingPool.deposit */\n      0xe8eda9df\n      swap1\n        /* \"#utility.yul\":9022:9041   */\n      0x84\n      add\n        /* \"contracts/TreasuryDAO.sol\":4243:4303  lendingPool.deposit(address(this), amount, address(this), 0) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_196\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_196:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_198\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_198:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/TreasuryDAO.sol\":4175:4310  function depositToAave(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/TreasuryDAO.sol\":3570:3991  function checkUpkeep(bytes calldata /* checkData */) external view override returns (bool upkeepNeeded, bytes memory /* performData */) {... */\n    tag_72:\n        /* \"contracts/TreasuryDAO.sol\":3655:3672  bool upkeepNeeded */\n      0x00\n        /* \"contracts/TreasuryDAO.sol\":3674:3686  bytes memory */\n      0x60\n        /* \"contracts/TreasuryDAO.sol\":3721:3727  uint i */\n      0x00\n        /* \"contracts/TreasuryDAO.sol\":3716:3957  for (uint i = 0; i < proposals.length; i++) {... */\n    tag_200:\n        /* \"contracts/TreasuryDAO.sol\":3737:3746  proposals */\n      0x02\n        /* \"contracts/TreasuryDAO.sol\":3737:3753  proposals.length */\n      sload\n        /* \"contracts/TreasuryDAO.sol\":3733:3753  i < proposals.length */\n      dup2\n      lt\n        /* \"contracts/TreasuryDAO.sol\":3716:3957  for (uint i = 0; i < proposals.length; i++) {... */\n      iszero\n      tag_201\n      jumpi\n        /* \"contracts/TreasuryDAO.sol\":3779:3788  proposals */\n      0x02\n        /* \"contracts/TreasuryDAO.sol\":3789:3790  i */\n      dup2\n        /* \"contracts/TreasuryDAO.sol\":3779:3791  proposals[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_204\n      jumpi\n      tag_204\n      tag_118\n      jump\t// in\n    tag_204:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/TreasuryDAO.sol\":3779:3800  proposals[i].executed */\n      0x05\n        /* \"contracts/TreasuryDAO.sol\":3779:3791  proposals[i] */\n      0x07\n      swap1\n      swap3\n      mul\n      add\n        /* \"contracts/TreasuryDAO.sol\":3779:3800  proposals[i].executed */\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/TreasuryDAO.sol\":3778:3800  !proposals[i].executed */\n      iszero\n        /* \"contracts/TreasuryDAO.sol\":3778:3838  !proposals[i].executed && proposals[i].votes >= 500 * 10**18 */\n      dup1\n      iszero\n      tag_206\n      jumpi\n      pop\n        /* \"contracts/TreasuryDAO.sol\":3826:3838  500 * 10**18 */\n      0x1b1ae4d6e2ef500000\n        /* \"contracts/TreasuryDAO.sol\":3804:3813  proposals */\n      0x02\n        /* \"contracts/TreasuryDAO.sol\":3814:3815  i */\n      dup3\n        /* \"contracts/TreasuryDAO.sol\":3804:3816  proposals[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_208\n      jumpi\n      tag_208\n      tag_118\n      jump\t// in\n    tag_208:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/TreasuryDAO.sol\":3804:3822  proposals[i].votes */\n      0x02\n      add\n      sload\n        /* \"contracts/TreasuryDAO.sol\":3804:3838  proposals[i].votes >= 500 * 10**18 */\n      lt\n      iszero\n        /* \"contracts/TreasuryDAO.sol\":3778:3838  !proposals[i].executed && proposals[i].votes >= 500 * 10**18 */\n    tag_206:\n        /* \"contracts/TreasuryDAO.sol\":3778:3884  !proposals[i].executed && proposals[i].votes >= 500 * 10**18 && block.timestamp >= proposals[i].unlockTime */\n      dup1\n      iszero\n      tag_210\n      jumpi\n      pop\n        /* \"contracts/TreasuryDAO.sol\":3861:3870  proposals */\n      0x02\n        /* \"contracts/TreasuryDAO.sol\":3871:3872  i */\n      dup2\n        /* \"contracts/TreasuryDAO.sol\":3861:3873  proposals[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_212\n      jumpi\n      tag_212\n      tag_118\n      jump\t// in\n    tag_212:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/TreasuryDAO.sol\":3861:3884  proposals[i].unlockTime */\n      0x04\n      add\n      sload\n        /* \"contracts/TreasuryDAO.sol\":3842:3857  block.timestamp */\n      timestamp\n        /* \"contracts/TreasuryDAO.sol\":3842:3884  block.timestamp >= proposals[i].unlockTime */\n      lt\n      iszero\n        /* \"contracts/TreasuryDAO.sol\":3778:3884  !proposals[i].executed && proposals[i].votes >= 500 * 10**18 && block.timestamp >= proposals[i].unlockTime */\n    tag_210:\n        /* \"contracts/TreasuryDAO.sol\":3774:3947  if (!proposals[i].executed && proposals[i].votes >= 500 * 10**18 && block.timestamp >= proposals[i].unlockTime) {... */\n      iszero\n      tag_214\n      jumpi\n        /* \"contracts/TreasuryDAO.sol\":3912:3916  true */\n      0x01\n        /* \"contracts/TreasuryDAO.sol\":3929:3930  i */\n      dup2\n        /* \"contracts/TreasuryDAO.sol\":3918:3931  abi.encode(i) */\n      add(0x20, mload(0x40))\n      tag_215\n      swap2\n        /* \"#utility.yul\":1563:1588   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1551:1553   */\n      0x20\n        /* \"#utility.yul\":1536:1554   */\n      add\n      swap1\n        /* \"#utility.yul\":1417:1594   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":3918:3931  abi.encode(i) */\n    tag_215:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":3904:3932  return (true, abi.encode(i)) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_199)\n        /* \"contracts/TreasuryDAO.sol\":3774:3947  if (!proposals[i].executed && proposals[i].votes >= 500 * 10**18 && block.timestamp >= proposals[i].unlockTime) {... */\n    tag_214:\n        /* \"contracts/TreasuryDAO.sol\":3755:3758  i++ */\n      0x01\n      add\n        /* \"contracts/TreasuryDAO.sol\":3716:3957  for (uint i = 0; i < proposals.length; i++) {... */\n      jump(tag_200)\n    tag_201:\n      pop\n      pop\n        /* \"contracts/TreasuryDAO.sol\":3966:3984  return (false, \"\") */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":3974:3979  false */\n      0x00\n        /* \"contracts/TreasuryDAO.sol\":3966:3984  return (false, \"\") */\n      dup1\n      dup3\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":3974:3979  false */\n      swap2\n      pop\n        /* \"contracts/TreasuryDAO.sol\":3570:3991  function checkUpkeep(bytes calldata /* checkData */) external view override returns (bool upkeepNeeded, bytes memory /* performData */) {... */\n    tag_199:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_217\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_220\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/TreasuryDAO.sol\":3411:3564  function getETHPrice() public view returns (uint256) {... */\n    tag_90:\n        /* \"contracts/TreasuryDAO.sol\":3496:3505  priceFeed */\n      0x04\n      dup1\n      sload\n        /* \"contracts/TreasuryDAO.sol\":3496:3523  priceFeed.latestRoundData() */\n      0x40\n      dup1\n      mload\n      shl(0xe2, 0x3fabe5a3)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/TreasuryDAO.sol\":3455:3462  uint256 */\n      0x00\n      swap4\n      dup5\n      swap4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/TreasuryDAO.sol\":3496:3505  priceFeed */\n      and\n      swap3\n        /* \"contracts/TreasuryDAO.sol\":3496:3521  priceFeed.latestRoundData */\n      0xfeaf968c\n      swap3\n        /* \"contracts/TreasuryDAO.sol\":3496:3523  priceFeed.latestRoundData() */\n      dup2\n      dup4\n      add\n      swap3\n      0xa0\n      swap3\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/TreasuryDAO.sol\":3496:3505  priceFeed */\n      dup7\n        /* \"contracts/TreasuryDAO.sol\":3496:3523  priceFeed.latestRoundData() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_224\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_224:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_225\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n        /* \"contracts/TreasuryDAO.sol\":3474:3523  (, int price, , , ) = priceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/TreasuryDAO.sol\":3554:3557  1e8 */\n      0x05f5e100\n        /* \"contracts/TreasuryDAO.sol\":3545:3550  price */\n      dup2\n        /* \"contracts/TreasuryDAO.sol\":3540:3557  uint(price) / 1e8 */\n      tag_227\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"contracts/TreasuryDAO.sol\":3533:3557  return uint(price) / 1e8 */\n      swap2\n      pop\n      pop\n        /* \"contracts/TreasuryDAO.sol\":3411:3564  function getETHPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TreasuryDAO.sol\":1569:1660  function addMember(address member) public onlyOwner {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_230\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_230:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/TreasuryDAO.sol\":1631:1646  members[member] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":1649:1653  true */\n      0x01\n        /* \"contracts/TreasuryDAO.sol\":1631:1646  members[member] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/TreasuryDAO.sol\":1631:1653  members[member] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/TreasuryDAO.sol\":1569:1660  function addMember(address member) public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_234\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_234:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_236\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3218:3269   */\n      mstore\n        /* \"#utility.yul\":3191:3209   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_113\n        /* \"#utility.yul\":3072:3275   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_238\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_220\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_219\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3218:3269   */\n      mstore\n        /* \"#utility.yul\":3191:3209   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_113\n        /* \"#utility.yul\":3072:3275   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:240   */\n    tag_27:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_253:\n      pop\n        /* \"#utility.yul\":187:210   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:240   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":837:968   */\n    tag_248:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":912:943   */\n      dup2\n      and\n        /* \"#utility.yul\":902:944   */\n      dup2\n      eq\n        /* \"#utility.yul\":892:962   */\n      tag_238\n      jumpi\n        /* \"#utility.yul\":958:959   */\n      0x00\n        /* \"#utility.yul\":955:956   */\n      dup1\n        /* \"#utility.yul\":948:960   */\n      revert\n        /* \"#utility.yul\":973:1220   */\n    tag_38:\n        /* \"#utility.yul\":1032:1038   */\n      0x00\n        /* \"#utility.yul\":1085:1087   */\n      0x20\n        /* \"#utility.yul\":1073:1082   */\n      dup3\n        /* \"#utility.yul\":1064:1071   */\n      dup5\n        /* \"#utility.yul\":1060:1083   */\n      sub\n        /* \"#utility.yul\":1056:1088   */\n      slt\n        /* \"#utility.yul\":1053:1105   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":1101:1102   */\n      0x00\n        /* \"#utility.yul\":1098:1099   */\n      dup1\n        /* \"#utility.yul\":1091:1103   */\n      revert\n        /* \"#utility.yul\":1053:1105   */\n    tag_258:\n        /* \"#utility.yul\":1140:1149   */\n      dup2\n        /* \"#utility.yul\":1127:1150   */\n      calldataload\n        /* \"#utility.yul\":1159:1190   */\n      tag_259\n        /* \"#utility.yul\":1184:1189   */\n      dup2\n        /* \"#utility.yul\":1159:1190   */\n      tag_248\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":1209:1214   */\n      swap4\n        /* \"#utility.yul\":973:1220   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1599:1974   */\n    tag_54:\n        /* \"#utility.yul\":1675:1681   */\n      0x00\n        /* \"#utility.yul\":1683:1689   */\n      dup1\n        /* \"#utility.yul\":1736:1738   */\n      0x40\n        /* \"#utility.yul\":1724:1733   */\n      dup4\n        /* \"#utility.yul\":1715:1722   */\n      dup6\n        /* \"#utility.yul\":1711:1734   */\n      sub\n        /* \"#utility.yul\":1707:1739   */\n      slt\n        /* \"#utility.yul\":1704:1756   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":1752:1753   */\n      0x00\n        /* \"#utility.yul\":1749:1750   */\n      dup1\n        /* \"#utility.yul\":1742:1754   */\n      revert\n        /* \"#utility.yul\":1704:1756   */\n    tag_263:\n        /* \"#utility.yul\":1791:1800   */\n      dup3\n        /* \"#utility.yul\":1778:1801   */\n      calldataload\n        /* \"#utility.yul\":1810:1841   */\n      tag_264\n        /* \"#utility.yul\":1835:1840   */\n      dup2\n        /* \"#utility.yul\":1810:1841   */\n      tag_248\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":1860:1865   */\n      swap5\n        /* \"#utility.yul\":1938:1940   */\n      0x20\n        /* \"#utility.yul\":1923:1941   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1910:1942   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1599:1974   */\n      jump\t// out\n        /* \"#utility.yul\":1979:2565   */\n    tag_59:\n        /* \"#utility.yul\":2049:2055   */\n      0x00\n        /* \"#utility.yul\":2057:2063   */\n      dup1\n        /* \"#utility.yul\":2110:2112   */\n      0x20\n        /* \"#utility.yul\":2098:2107   */\n      dup4\n        /* \"#utility.yul\":2089:2096   */\n      dup6\n        /* \"#utility.yul\":2085:2108   */\n      sub\n        /* \"#utility.yul\":2081:2113   */\n      slt\n        /* \"#utility.yul\":2078:2130   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":2126:2127   */\n      0x00\n        /* \"#utility.yul\":2123:2124   */\n      dup1\n        /* \"#utility.yul\":2116:2128   */\n      revert\n        /* \"#utility.yul\":2078:2130   */\n    tag_266:\n        /* \"#utility.yul\":2166:2175   */\n      dup3\n        /* \"#utility.yul\":2153:2176   */\n      calldataload\n        /* \"#utility.yul\":2199:2217   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2191:2197   */\n      dup2\n        /* \"#utility.yul\":2188:2218   */\n      gt\n        /* \"#utility.yul\":2185:2235   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":2231:2232   */\n      0x00\n        /* \"#utility.yul\":2228:2229   */\n      dup1\n        /* \"#utility.yul\":2221:2233   */\n      revert\n        /* \"#utility.yul\":2185:2235   */\n    tag_267:\n        /* \"#utility.yul\":2254:2276   */\n      dup4\n      add\n        /* \"#utility.yul\":2307:2311   */\n      0x1f\n        /* \"#utility.yul\":2299:2312   */\n      dup2\n      add\n        /* \"#utility.yul\":2295:2322   */\n      dup6\n      sgt\n        /* \"#utility.yul\":2285:2340   */\n      tag_268\n      jumpi\n        /* \"#utility.yul\":2336:2337   */\n      0x00\n        /* \"#utility.yul\":2333:2334   */\n      dup1\n        /* \"#utility.yul\":2326:2338   */\n      revert\n        /* \"#utility.yul\":2285:2340   */\n    tag_268:\n        /* \"#utility.yul\":2376:2378   */\n      dup1\n        /* \"#utility.yul\":2363:2379   */\n      calldataload\n        /* \"#utility.yul\":2402:2420   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2394:2400   */\n      dup2\n        /* \"#utility.yul\":2391:2421   */\n      gt\n        /* \"#utility.yul\":2388:2438   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":2434:2435   */\n      0x00\n        /* \"#utility.yul\":2431:2432   */\n      dup1\n        /* \"#utility.yul\":2424:2436   */\n      revert\n        /* \"#utility.yul\":2388:2438   */\n    tag_269:\n        /* \"#utility.yul\":2479:2486   */\n      dup6\n        /* \"#utility.yul\":2474:2476   */\n      0x20\n        /* \"#utility.yul\":2465:2471   */\n      dup3\n        /* \"#utility.yul\":2461:2463   */\n      dup5\n        /* \"#utility.yul\":2457:2472   */\n      add\n        /* \"#utility.yul\":2453:2477   */\n      add\n        /* \"#utility.yul\":2450:2487   */\n      gt\n        /* \"#utility.yul\":2447:2504   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":2500:2501   */\n      0x00\n        /* \"#utility.yul\":2497:2498   */\n      dup1\n        /* \"#utility.yul\":2490:2502   */\n      revert\n        /* \"#utility.yul\":2447:2504   */\n    tag_270:\n        /* \"#utility.yul\":2531:2533   */\n      0x20\n        /* \"#utility.yul\":2523:2534   */\n      swap2\n      swap1\n      swap2\n      add\n      swap6\n        /* \"#utility.yul\":2553:2559   */\n      swap1\n      swap5\n      pop\n        /* \"#utility.yul\":1979:2565   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2570:3067   */\n    tag_74:\n        /* \"#utility.yul\":2753:2759   */\n      dup3\n        /* \"#utility.yul\":2746:2760   */\n      iszero\n        /* \"#utility.yul\":2739:2761   */\n      iszero\n        /* \"#utility.yul\":2728:2737   */\n      dup2\n        /* \"#utility.yul\":2721:2762   */\n      mstore\n        /* \"#utility.yul\":2798:2800   */\n      0x40\n        /* \"#utility.yul\":2793:2795   */\n      0x20\n        /* \"#utility.yul\":2782:2791   */\n      dup3\n        /* \"#utility.yul\":2778:2796   */\n      add\n        /* \"#utility.yul\":2771:2801   */\n      mstore\n        /* \"#utility.yul\":2702:2706   */\n      0x00\n        /* \"#utility.yul\":2830:2836   */\n      dup3\n        /* \"#utility.yul\":2824:2837   */\n      mload\n        /* \"#utility.yul\":2873:2879   */\n      dup1\n        /* \"#utility.yul\":2868:2870   */\n      0x40\n        /* \"#utility.yul\":2857:2866   */\n      dup5\n        /* \"#utility.yul\":2853:2871   */\n      add\n        /* \"#utility.yul\":2846:2880   */\n      mstore\n        /* \"#utility.yul\":2932:2938   */\n      dup1\n        /* \"#utility.yul\":2927:2929   */\n      0x20\n        /* \"#utility.yul\":2919:2925   */\n      dup6\n        /* \"#utility.yul\":2915:2930   */\n      add\n        /* \"#utility.yul\":2910:2912   */\n      0x60\n        /* \"#utility.yul\":2899:2908   */\n      dup6\n        /* \"#utility.yul\":2895:2913   */\n      add\n        /* \"#utility.yul\":2889:2939   */\n      mcopy\n        /* \"#utility.yul\":2988:2989   */\n      0x00\n        /* \"#utility.yul\":2983:2985   */\n      0x60\n        /* \"#utility.yul\":2974:2980   */\n      dup3\n        /* \"#utility.yul\":2963:2972   */\n      dup6\n        /* \"#utility.yul\":2959:2981   */\n      add\n        /* \"#utility.yul\":2955:2986   */\n      add\n        /* \"#utility.yul\":2948:2990   */\n      mstore\n        /* \"#utility.yul\":3058:3060   */\n      0x60\n        /* \"#utility.yul\":3051:3053   */\n      0x1f\n        /* \"#utility.yul\":3047:3054   */\n      not\n        /* \"#utility.yul\":3042:3044   */\n      0x1f\n        /* \"#utility.yul\":3034:3040   */\n      dup4\n        /* \"#utility.yul\":3030:3045   */\n      add\n        /* \"#utility.yul\":3026:3055   */\n      and\n        /* \"#utility.yul\":3015:3024   */\n      dup5\n        /* \"#utility.yul\":3011:3056   */\n      add\n        /* \"#utility.yul\":3007:3061   */\n      add\n        /* \"#utility.yul\":2999:3061   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2570:3067   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4069:4196   */\n    tag_118:\n        /* \"#utility.yul\":4130:4140   */\n      0x4e487b71\n        /* \"#utility.yul\":4125:4128   */\n      0xe0\n        /* \"#utility.yul\":4121:4141   */\n      shl\n        /* \"#utility.yul\":4118:4119   */\n      0x00\n        /* \"#utility.yul\":4111:4142   */\n      mstore\n        /* \"#utility.yul\":4161:4165   */\n      0x32\n        /* \"#utility.yul\":4158:4159   */\n      0x04\n        /* \"#utility.yul\":4151:4166   */\n      mstore\n        /* \"#utility.yul\":4185:4189   */\n      0x24\n        /* \"#utility.yul\":4182:4183   */\n      0x00\n        /* \"#utility.yul\":4175:4190   */\n      revert\n        /* \"#utility.yul\":4891:5121   */\n    tag_130:\n        /* \"#utility.yul\":4961:4967   */\n      0x00\n        /* \"#utility.yul\":5014:5016   */\n      0x20\n        /* \"#utility.yul\":5002:5011   */\n      dup3\n        /* \"#utility.yul\":4993:5000   */\n      dup5\n        /* \"#utility.yul\":4989:5012   */\n      sub\n        /* \"#utility.yul\":4985:5017   */\n      slt\n        /* \"#utility.yul\":4982:5034   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":5030:5031   */\n      0x00\n        /* \"#utility.yul\":5027:5028   */\n      dup1\n        /* \"#utility.yul\":5020:5032   */\n      revert\n        /* \"#utility.yul\":4982:5034   */\n    tag_280:\n      pop\n        /* \"#utility.yul\":5075:5091   */\n      mload\n      swap2\n        /* \"#utility.yul\":4891:5121   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5530:5657   */\n    tag_249:\n        /* \"#utility.yul\":5591:5601   */\n      0x4e487b71\n        /* \"#utility.yul\":5586:5589   */\n      0xe0\n        /* \"#utility.yul\":5582:5602   */\n      shl\n        /* \"#utility.yul\":5579:5580   */\n      0x00\n        /* \"#utility.yul\":5572:5603   */\n      mstore\n        /* \"#utility.yul\":5622:5626   */\n      0x11\n        /* \"#utility.yul\":5619:5620   */\n      0x04\n        /* \"#utility.yul\":5612:5627   */\n      mstore\n        /* \"#utility.yul\":5646:5650   */\n      0x24\n        /* \"#utility.yul\":5643:5644   */\n      0x00\n        /* \"#utility.yul\":5636:5651   */\n      revert\n        /* \"#utility.yul\":5662:5787   */\n    tag_135:\n        /* \"#utility.yul\":5727:5736   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5748:5758   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5745:5781   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":5761:5779   */\n      tag_285\n      tag_249\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":5662:5787   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7945:8073   */\n    tag_170:\n        /* \"#utility.yul\":8012:8021   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":8033:8044   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":8030:8067   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":8047:8065   */\n      tag_285\n      tag_249\n      jump\t// in\n        /* \"#utility.yul\":9280:9459   */\n    tag_250:\n        /* \"#utility.yul\":9358:9371   */\n      dup1\n      mload\n        /* \"#utility.yul\":9411:9433   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":9400:9434   */\n      dup2\n      and\n        /* \"#utility.yul\":9390:9435   */\n      dup2\n      eq\n        /* \"#utility.yul\":9380:9453   */\n      tag_299\n      jumpi\n        /* \"#utility.yul\":9449:9450   */\n      0x00\n        /* \"#utility.yul\":9446:9447   */\n      dup1\n        /* \"#utility.yul\":9439:9451   */\n      revert\n        /* \"#utility.yul\":9380:9453   */\n    tag_299:\n        /* \"#utility.yul\":9280:9459   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9464:10035   */\n    tag_226:\n        /* \"#utility.yul\":9567:9573   */\n      0x00\n        /* \"#utility.yul\":9575:9581   */\n      dup1\n        /* \"#utility.yul\":9583:9589   */\n      0x00\n        /* \"#utility.yul\":9591:9597   */\n      dup1\n        /* \"#utility.yul\":9599:9605   */\n      0x00\n        /* \"#utility.yul\":9652:9655   */\n      0xa0\n        /* \"#utility.yul\":9640:9649   */\n      dup7\n        /* \"#utility.yul\":9631:9638   */\n      dup9\n        /* \"#utility.yul\":9627:9650   */\n      sub\n        /* \"#utility.yul\":9623:9656   */\n      slt\n        /* \"#utility.yul\":9620:9673   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":9669:9670   */\n      0x00\n        /* \"#utility.yul\":9666:9667   */\n      dup1\n        /* \"#utility.yul\":9659:9671   */\n      revert\n        /* \"#utility.yul\":9620:9673   */\n    tag_301:\n        /* \"#utility.yul\":9692:9731   */\n      tag_302\n        /* \"#utility.yul\":9721:9730   */\n      dup7\n        /* \"#utility.yul\":9692:9731   */\n      tag_250\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":9771:9773   */\n      0x20\n        /* \"#utility.yul\":9756:9774   */\n      dup8\n      add\n        /* \"#utility.yul\":9750:9775   */\n      mload\n        /* \"#utility.yul\":9837:9839   */\n      0x40\n        /* \"#utility.yul\":9822:9840   */\n      dup9\n      add\n        /* \"#utility.yul\":9816:9841   */\n      mload\n        /* \"#utility.yul\":9931:9933   */\n      0x60\n        /* \"#utility.yul\":9916:9934   */\n      dup10\n      add\n        /* \"#utility.yul\":9910:9935   */\n      mload\n        /* \"#utility.yul\":9682:9731   */\n      swap3\n      swap8\n      pop\n        /* \"#utility.yul\":9750:9775   */\n      swap1\n      swap6\n      pop\n        /* \"#utility.yul\":9816:9841   */\n      swap4\n      pop\n        /* \"#utility.yul\":9910:9935   */\n      swap2\n      pop\n        /* \"#utility.yul\":9980:10029   */\n      tag_303\n        /* \"#utility.yul\":10024:10027   */\n      0x80\n        /* \"#utility.yul\":10009:10028   */\n      dup8\n      add\n        /* \"#utility.yul\":9980:10029   */\n      tag_250\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":9970:10029   */\n      swap1\n      pop\n        /* \"#utility.yul\":9464:10035   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10040:10257   */\n    tag_228:\n        /* \"#utility.yul\":10080:10081   */\n      0x00\n        /* \"#utility.yul\":10106:10107   */\n      dup3\n        /* \"#utility.yul\":10096:10228   */\n      tag_305\n      jumpi\n        /* \"#utility.yul\":10150:10160   */\n      0x4e487b71\n        /* \"#utility.yul\":10145:10148   */\n      0xe0\n        /* \"#utility.yul\":10141:10161   */\n      shl\n        /* \"#utility.yul\":10138:10139   */\n      0x00\n        /* \"#utility.yul\":10131:10162   */\n      mstore\n        /* \"#utility.yul\":10185:10189   */\n      0x12\n        /* \"#utility.yul\":10182:10183   */\n      0x04\n        /* \"#utility.yul\":10175:10190   */\n      mstore\n        /* \"#utility.yul\":10213:10217   */\n      0x24\n        /* \"#utility.yul\":10210:10211   */\n      0x00\n        /* \"#utility.yul\":10203:10218   */\n      revert\n        /* \"#utility.yul\":10096:10228   */\n    tag_305:\n      pop\n        /* \"#utility.yul\":10242:10251   */\n      div\n      swap1\n        /* \"#utility.yul\":10040:10257   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208a441baef47d9d791131caa698271e20b7d36d467354e63ec0bee1e2716dd86164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1319": {
									"entryPoint": null,
									"id": 1319,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_1631": {
									"entryPoint": null,
									"id": 1631,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_transferOwnership_1415": {
									"entryPoint": 206,
									"id": 1415,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory": {
									"entryPoint": 312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:870:10",
										"nodeType": "YulBlock",
										"src": "0:870:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:10",
													"nodeType": "YulBlock",
													"src": "74:117:10",
													"statements": [
														{
															"nativeSrc": "84:22:10",
															"nodeType": "YulAssignment",
															"src": "84:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:10"
																},
																"nativeSrc": "93:13:10",
																"nodeType": "YulFunctionCall",
																"src": "93:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:10",
																"nodeType": "YulBlock",
																"src": "169:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:10",
																					"nodeType": "YulLiteral",
																					"src": "178:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:10",
																					"nodeType": "YulLiteral",
																					"src": "181:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:10"
																			},
																			"nativeSrc": "171:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:10"
																		},
																		"nativeSrc": "171:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:10",
																										"nodeType": "YulLiteral",
																										"src": "154:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:10",
																										"nodeType": "YulLiteral",
																										"src": "159:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:10"
																								},
																								"nativeSrc": "150:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:10",
																								"nodeType": "YulLiteral",
																								"src": "163:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:10"
																						},
																						"nativeSrc": "146:19:10",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:10"
																				},
																				"nativeSrc": "135:31:10",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:10"
																		},
																		"nativeSrc": "125:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:10"
																},
																"nativeSrc": "118:50:10",
																"nodeType": "YulFunctionCall",
																"src": "118:50:10"
															},
															"nativeSrc": "115:70:10",
															"nodeType": "YulIf",
															"src": "115:70:10"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:10",
														"nodeType": "YulTypedName",
														"src": "53:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:10",
														"nodeType": "YulTypedName",
														"src": "64:5:10",
														"type": ""
													}
												],
												"src": "14:177:10"
											},
											{
												"body": {
													"nativeSrc": "328:332:10",
													"nodeType": "YulBlock",
													"src": "328:332:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "375:16:10",
																"nodeType": "YulBlock",
																"src": "375:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "384:1:10",
																					"nodeType": "YulLiteral",
																					"src": "384:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "387:1:10",
																					"nodeType": "YulLiteral",
																					"src": "387:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "377:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "377:6:10"
																			},
																			"nativeSrc": "377:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "377:12:10"
																		},
																		"nativeSrc": "377:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "377:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "349:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "349:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "358:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "358:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "345:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "345:3:10"
																		},
																		"nativeSrc": "345:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "345:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "370:3:10",
																		"nodeType": "YulLiteral",
																		"src": "370:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "341:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:10"
																},
																"nativeSrc": "341:33:10",
																"nodeType": "YulFunctionCall",
																"src": "341:33:10"
															},
															"nativeSrc": "338:53:10",
															"nodeType": "YulIf",
															"src": "338:53:10"
														},
														{
															"nativeSrc": "400:50:10",
															"nodeType": "YulAssignment",
															"src": "400:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "440:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "440:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "410:29:10",
																	"nodeType": "YulIdentifier",
																	"src": "410:29:10"
																},
																"nativeSrc": "410:40:10",
																"nodeType": "YulFunctionCall",
																"src": "410:40:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "400:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:10"
																}
															]
														},
														{
															"nativeSrc": "459:59:10",
															"nodeType": "YulAssignment",
															"src": "459:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "503:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "503:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "514:2:10",
																				"nodeType": "YulLiteral",
																				"src": "514:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "499:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:10"
																		},
																		"nativeSrc": "499:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "499:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "469:29:10",
																	"nodeType": "YulIdentifier",
																	"src": "469:29:10"
																},
																"nativeSrc": "469:49:10",
																"nodeType": "YulFunctionCall",
																"src": "469:49:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "459:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "459:6:10"
																}
															]
														},
														{
															"nativeSrc": "527:59:10",
															"nodeType": "YulAssignment",
															"src": "527:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "571:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "571:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "582:2:10",
																				"nodeType": "YulLiteral",
																				"src": "582:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "567:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "567:3:10"
																		},
																		"nativeSrc": "567:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "567:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "537:29:10",
																	"nodeType": "YulIdentifier",
																	"src": "537:29:10"
																},
																"nativeSrc": "537:49:10",
																"nodeType": "YulFunctionCall",
																"src": "537:49:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "527:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "527:6:10"
																}
															]
														},
														{
															"nativeSrc": "595:59:10",
															"nodeType": "YulAssignment",
															"src": "595:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "639:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "639:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "650:2:10",
																				"nodeType": "YulLiteral",
																				"src": "650:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "635:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "635:3:10"
																		},
																		"nativeSrc": "635:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "635:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "605:29:10",
																	"nodeType": "YulIdentifier",
																	"src": "605:29:10"
																},
																"nativeSrc": "605:49:10",
																"nodeType": "YulFunctionCall",
																"src": "605:49:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "595:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "595:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory",
												"nativeSrc": "196:464:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "270:9:10",
														"nodeType": "YulTypedName",
														"src": "270:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "281:7:10",
														"nodeType": "YulTypedName",
														"src": "281:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "293:6:10",
														"nodeType": "YulTypedName",
														"src": "293:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "301:6:10",
														"nodeType": "YulTypedName",
														"src": "301:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "309:6:10",
														"nodeType": "YulTypedName",
														"src": "309:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "317:6:10",
														"nodeType": "YulTypedName",
														"src": "317:6:10",
														"type": ""
													}
												],
												"src": "196:464:10"
											},
											{
												"body": {
													"nativeSrc": "766:102:10",
													"nodeType": "YulBlock",
													"src": "766:102:10",
													"statements": [
														{
															"nativeSrc": "776:26:10",
															"nodeType": "YulAssignment",
															"src": "776:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "788:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "788:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "799:2:10",
																		"nodeType": "YulLiteral",
																		"src": "799:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "784:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:10"
																},
																"nativeSrc": "784:18:10",
																"nodeType": "YulFunctionCall",
																"src": "784:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "776:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "776:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "818:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "818:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "833:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "833:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "849:3:10",
																								"nodeType": "YulLiteral",
																								"src": "849:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "854:1:10",
																								"nodeType": "YulLiteral",
																								"src": "854:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "845:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "845:3:10"
																						},
																						"nativeSrc": "845:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "845:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "858:1:10",
																						"nodeType": "YulLiteral",
																						"src": "858:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "841:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "841:3:10"
																				},
																				"nativeSrc": "841:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "841:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "829:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "829:3:10"
																		},
																		"nativeSrc": "829:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "829:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "811:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "811:6:10"
																},
																"nativeSrc": "811:51:10",
																"nodeType": "YulFunctionCall",
																"src": "811:51:10"
															},
															"nativeSrc": "811:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "811:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "665:203:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "735:9:10",
														"nodeType": "YulTypedName",
														"src": "735:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "746:6:10",
														"nodeType": "YulTypedName",
														"src": "746:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "757:4:10",
														"nodeType": "YulTypedName",
														"src": "757:4:10",
														"type": ""
													}
												],
												"src": "665:203:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x15180 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x16 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x112E CODESIZE SUB DUP1 PUSH2 0x112E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x35 SWAP2 PUSH2 0x138 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x63 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6C DUP2 PUSH2 0xCE JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD DUP3 AND SWAP5 DUP7 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x189 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x133 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x14B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x154 DUP6 PUSH2 0x11D JUMP JUMPDEST SWAP4 POP PUSH2 0x162 PUSH1 0x20 DUP7 ADD PUSH2 0x11D JUMP JUMPDEST SWAP3 POP PUSH2 0x170 PUSH1 0x40 DUP7 ADD PUSH2 0x11D JUMP JUMPDEST SWAP2 POP PUSH2 0x17E PUSH1 0x60 DUP7 ADD PUSH2 0x11D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0xF98 DUP1 PUSH2 0x196 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x110 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E04FF0D GT PUSH2 0x9D JUMPI DUP1 PUSH4 0xC00D2A8C GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xC00D2A8C EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0xCA6D56DC EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xF96DAE0A EQ PUSH2 0x37E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xA59A9973 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0xA607A8D9 EQ PUSH2 0x317 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12065FE0 GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x237AF348 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x688F237B EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x68FD2D80 EQ PUSH2 0x268 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x121B93F EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x13CF08B EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x8AE4B0C EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0xD61B519 EQ PUSH2 0x1D0 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x133 PUSH2 0x12E CALLDATASIZE PUSH1 0x4 PUSH2 0xD49 JUMP JUMPDEST PUSH2 0x39D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x154 PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0xD49 JUMP JUMPDEST PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x189 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x133 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0xD49 JUMP JUMPDEST PUSH2 0x645 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP SELFBALANCE JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x189 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x216 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x133 PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0xD96 JUMP JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x133 PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC0 JUMP JUMPDEST PUSH2 0x9BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x254 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x133 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0xD49 JUMP JUMPDEST PUSH2 0x9DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x273 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x133 PUSH2 0x282 CALLDATASIZE PUSH1 0x4 PUSH2 0xD49 JUMP JUMPDEST PUSH2 0xA5F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x2A1 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC0 JUMP JUMPDEST PUSH2 0xAD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP3 SWAP2 SWAP1 PUSH2 0xE2E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x133 PUSH2 0xBCA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x189 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x2E0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x322 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0xBDD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x336 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x133 PUSH2 0x35A CALLDATASIZE PUSH1 0x4 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0xC63 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x133 PUSH2 0x379 CALLDATASIZE PUSH1 0x4 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0xC91 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x389 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x2E0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2737BA1030902220A79036B2B6B132B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x407 JUMPI PUSH2 0x407 PUSH2 0xE6C JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x6 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x469 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x105B1C9958591E481D9BDD1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EA JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD TIMESTAMP LT PUSH2 0x4B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x159BDD1A5B99C81C195C9A5BD908195B991959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4F8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x51C SWAP2 SWAP1 PUSH2 0xE80 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x579 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420686F6C6420676F7665726E616E636520746F6B656E7320746F2076 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6F7465 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EA JUMP JUMPDEST DUP1 DUP3 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x58C SWAP2 SWAP1 PUSH2 0xEAB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD DUP7 DUP2 MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x1ABE610CF2BF87E57DCC1181FCF5AC0934E843D8344AB9EED6E86C799F62585E SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x603 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 SWAP1 SWAP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP6 POP SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0xFF AND DUP7 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x659 JUMPI PUSH2 0x659 PUSH2 0xE6C JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH9 0x1B1AE4D6E2EF500000 DUP2 PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820766F746573202835303020746F6B656E7320726571 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x756972656429 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x71B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x105B1C9958591E48195E1958DD5D1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EA JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x119D5B991CC81CDD1A5B1B081B1BD8DAD959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SLOAD SWAP1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7AF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x712AE1383F79AC853F8D882153778E0260EF8F03B504E2866E0593E04D2B291F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x838 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2737BA1030902220A79036B2B6B132B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EA JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x888 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742074726561737572792062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EA JUMP JUMPDEST PUSH2 0x5DC PUSH2 0x893 PUSH2 0xBDD JUMP JUMPDEST GT PUSH2 0x8D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x45544820707269636520746F6F206C6F77 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD DUP1 DUP4 SSTORE PUSH0 DUP4 DUP2 MSTORE SWAP3 SWAP2 PUSH2 0x8EF SWAP2 PUSH2 0xEC4 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x8FF JUMPI PUSH2 0x8FF PUSH2 0xE6C JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x7 SWAP2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x946 SWAP1 TIMESTAMP PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0x958 TIMESTAMP PUSH3 0x2A300 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH32 0x3417B456FAD6209C73445D5EFD446D686E75E4560F0F50C13B5A5CDE976447B4 SWAP1 PUSH2 0x99A SWAP1 PUSH1 0x1 SWAP1 PUSH2 0xEC4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 ADD PUSH2 0x5E7 JUMP JUMPDEST PUSH0 PUSH2 0x9CA DUP3 DUP5 ADD DUP5 PUSH2 0xD49 JUMP JUMPDEST SWAP1 POP PUSH2 0x9D5 DUP2 PUSH2 0x645 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x9E2 PUSH2 0xCCE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1A4CA37B PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x69328DEC SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA37 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA5B SWAP2 SWAP1 PUSH2 0xE80 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA67 PUSH2 0xCCE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE8EDA9DF PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH0 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xE8EDA9DF SWAP1 PUSH1 0x84 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xABD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xACF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xBAF JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xAF8 JUMPI PUSH2 0xAF8 PUSH2 0xE6C JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 PUSH1 0x7 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xB46 JUMPI POP PUSH9 0x1B1AE4D6E2EF500000 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB33 JUMPI PUSH2 0xB33 PUSH2 0xE6C JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x2 ADD SLOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xB74 JUMPI POP PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB60 JUMPI PUSH2 0xB60 PUSH2 0xE6C JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x4 ADD SLOAD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0xBA7 JUMPI PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB8E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP SWAP3 POP POP PUSH2 0xBC3 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xADB JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP1 DUP3 MSTORE SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBD2 PUSH2 0xCCE JUMP JUMPDEST PUSH2 0xBDB PUSH0 PUSH2 0xCFA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP4 DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0xFEAF968C SWAP3 DUP2 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC23 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC47 SWAP2 SWAP1 PUSH2 0xEF5 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH4 0x5F5E100 DUP2 PUSH2 0xC5D SWAP2 SWAP1 PUSH2 0xF43 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xC6B PUSH2 0xCCE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xC99 PUSH2 0xCCE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCC2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3EA JUMP JUMPDEST PUSH2 0xCCB DUP2 PUSH2 0xCFA JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBDB JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3EA JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD59 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCCB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD84 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD8F DUP2 PUSH2 0xD60 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDA7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xDB2 DUP2 PUSH2 0xD60 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDD1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0xDF7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE0D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0xE1E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x60 DUP6 ADD MCOPY PUSH0 PUSH1 0x60 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE90 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xEBE JUMPI PUSH2 0xEBE PUSH2 0xE97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xEBE JUMPI PUSH2 0xEBE PUSH2 0xE97 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xEF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF09 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF12 DUP7 PUSH2 0xED7 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x60 DUP10 ADD MLOAD SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0xF37 PUSH1 0x80 DUP8 ADD PUSH2 0xED7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xF5D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 PREVRANDAO SHL 0xAE DELEGATECALL PUSH30 0x9D791131CAA698271E20B7D36D467354E63EC0BEE1E2716DD86164736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "381:4218:9:-:0;;;929:6;896:39;;1132:327;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1230:12;-1:-1:-1;;;;;1273:26:6;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:6;;1350:1;1322:31;;;811:51:10;784:18;;1322:31:6;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1254:15:9::1;:38:::0;;-1:-1:-1;;;;;;1254:38:9;;::::1;-1:-1:-1::0;;;;;1254:38:9;;::::1;;::::0;;;1302:9:::1;:41:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;1385:11:::1;:29:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;1424:21:::1;-1:-1:-1::0;1424:21:9;;;-1:-1:-1;1424:21:9::1;::::0;;;;;;;:28;;-1:-1:-1;;1424:28:9::1;::::0;;::::1;::::0;;381:4218;;2912:187:6;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:6;;;-1:-1:-1;;;;;;3020:17:6;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:10:-;93:13;;-1:-1:-1;;;;;135:31:10;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:464::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;459:59;;537:49;582:2;571:9;567:18;537:49;:::i;:::-;527:59;;605:49;650:2;639:9;635:18;605:49;:::i;:::-;595:59;;196:464;;;;;;;:::o;665:203::-;381:4218:9;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_1353": {
									"entryPoint": 3278,
									"id": 1353,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1506": {
									"entryPoint": null,
									"id": 1506,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1415": {
									"entryPoint": 3322,
									"id": 1415,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addMember_1657": {
									"entryPoint": 3171,
									"id": 1657,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@checkUpkeep_1963": {
									"entryPoint": 2774,
									"id": 1963,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@depositToAave_2007": {
									"entryPoint": 2655,
									"id": 2007,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deposit_2033": {
									"entryPoint": null,
									"id": 2033,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@executeProposal_1883": {
									"entryPoint": 1605,
									"id": 1883,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getBalance_2045": {
									"entryPoint": null,
									"id": 2045,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getETHPrice_1902": {
									"entryPoint": 3037,
									"id": 1902,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@governanceToken_1563": {
									"entryPoint": null,
									"id": 1563,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lendingPool_1569": {
									"entryPoint": null,
									"id": 1569,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@members_1556": {
									"entryPoint": null,
									"id": 1556,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minVoteDuration_1572": {
									"entryPoint": null,
									"id": 1572,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_1336": {
									"entryPoint": null,
									"id": 1336,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@performUpkeep_1984": {
									"entryPoint": 2493,
									"id": 1984,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@proposals_1560": {
									"entryPoint": 1524,
									"id": 1560,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@proposeFunding_1752": {
									"entryPoint": 2023,
									"id": 1752,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_1367": {
									"entryPoint": 3018,
									"id": 1367,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_1395": {
									"entryPoint": 3217,
									"id": 1395,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@vote_1823": {
									"entryPoint": 925,
									"id": 1823,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawFromAave_2029": {
									"entryPoint": 2522,
									"id": 2029,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256": {
									"entryPoint": 3478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes_calldata_ptr": {
									"entryPoint": 3520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 3829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_uint80_fromMemory": {
									"entryPoint": 3799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_payable_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address_t_rational_0_by_1__to_t_address_t_uint256_t_address_t_uint16__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 3630,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$1494__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IPool_$638__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_23dd702789a702d582f99b58a434cec47cd541852e1263083521a4179a192189__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_36ba02d776fd732ac627a72d2a4bcd896afdeadba8694171733d88c6775413e0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_41c4e4fc25bbb0d8878d5705bd166f1c809d1260cb49444e3832f4736f0439e3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_58f47ea4e737df2d9cc4764db26c111751884cf0a1856aca9f4c66cadc811e1b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_59eae394831db960eed2b1204907b57c5e1f65d6dfb40c9a41314d384a8055da__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_66d1585b1e27cc9397312cfc1f57a2ea0c14475d5f53f4e39e5c98660bad98b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70781312560918a61d3b5e274a24dd70cd2d0901f970caf6cb5f94161f7cdb19__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c8fc0753689749684a9e551425bc1a5c3140528f7a45ea255ec00e51d97963b5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_payable_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3735,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3692,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 3424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10259:10",
										"nodeType": "YulBlock",
										"src": "0:10259:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:156:10",
													"nodeType": "YulBlock",
													"src": "84:156:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:10",
																"nodeType": "YulBlock",
																"src": "130:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:10",
																					"nodeType": "YulLiteral",
																					"src": "139:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:10",
																					"nodeType": "YulLiteral",
																					"src": "142:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:10"
																			},
																			"nativeSrc": "132:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:10"
																		},
																		"nativeSrc": "132:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:10"
																		},
																		"nativeSrc": "101:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:10",
																		"nodeType": "YulLiteral",
																		"src": "126:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:10"
																},
																"nativeSrc": "97:32:10",
																"nodeType": "YulFunctionCall",
																"src": "97:32:10"
															},
															"nativeSrc": "94:52:10",
															"nodeType": "YulIf",
															"src": "94:52:10"
														},
														{
															"nativeSrc": "155:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "155:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "168:1:10",
																"nodeType": "YulLiteral",
																"src": "168:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "159:5:10",
																	"nodeType": "YulTypedName",
																	"src": "159:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "178:32:10",
															"nodeType": "YulAssignment",
															"src": "178:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "200:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "200:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "187:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:12:10"
																},
																"nativeSrc": "187:23:10",
																"nodeType": "YulFunctionCall",
																"src": "187:23:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "178:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "178:5:10"
																}
															]
														},
														{
															"nativeSrc": "219:15:10",
															"nodeType": "YulAssignment",
															"src": "219:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "229:5:10",
																"nodeType": "YulIdentifier",
																"src": "229:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "219:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "219:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:226:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:10",
														"nodeType": "YulTypedName",
														"src": "50:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:10",
														"nodeType": "YulTypedName",
														"src": "61:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:10",
														"nodeType": "YulTypedName",
														"src": "73:6:10",
														"type": ""
													}
												],
												"src": "14:226:10"
											},
											{
												"body": {
													"nativeSrc": "496:336:10",
													"nodeType": "YulBlock",
													"src": "496:336:10",
													"statements": [
														{
															"nativeSrc": "506:27:10",
															"nodeType": "YulAssignment",
															"src": "506:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "518:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "518:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "529:3:10",
																		"nodeType": "YulLiteral",
																		"src": "529:3:10",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "514:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "514:3:10"
																},
																"nativeSrc": "514:19:10",
																"nodeType": "YulFunctionCall",
																"src": "514:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "506:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "506:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "549:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "549:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "564:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "564:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "580:3:10",
																								"nodeType": "YulLiteral",
																								"src": "580:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "585:1:10",
																								"nodeType": "YulLiteral",
																								"src": "585:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "576:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "576:3:10"
																						},
																						"nativeSrc": "576:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "576:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "589:1:10",
																						"nodeType": "YulLiteral",
																						"src": "589:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "572:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "572:3:10"
																				},
																				"nativeSrc": "572:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "572:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "560:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "560:3:10"
																		},
																		"nativeSrc": "560:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "560:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "542:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "542:6:10"
																},
																"nativeSrc": "542:51:10",
																"nodeType": "YulFunctionCall",
																"src": "542:51:10"
															},
															"nativeSrc": "542:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "542:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "613:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "613:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "624:2:10",
																				"nodeType": "YulLiteral",
																				"src": "624:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "609:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "609:3:10"
																		},
																		"nativeSrc": "609:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "609:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "629:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "602:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "602:6:10"
																},
																"nativeSrc": "602:34:10",
																"nodeType": "YulFunctionCall",
																"src": "602:34:10"
															},
															"nativeSrc": "602:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "602:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "656:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "656:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "667:2:10",
																				"nodeType": "YulLiteral",
																				"src": "667:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:10"
																		},
																		"nativeSrc": "652:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "652:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "672:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "672:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "645:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "645:6:10"
																},
																"nativeSrc": "645:34:10",
																"nodeType": "YulFunctionCall",
																"src": "645:34:10"
															},
															"nativeSrc": "645:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "645:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "699:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "699:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "710:2:10",
																				"nodeType": "YulLiteral",
																				"src": "710:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "695:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "695:3:10"
																		},
																		"nativeSrc": "695:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "695:18:10"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "715:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "715:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "688:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "688:6:10"
																},
																"nativeSrc": "688:34:10",
																"nodeType": "YulFunctionCall",
																"src": "688:34:10"
															},
															"nativeSrc": "688:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "688:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "742:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "742:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "753:3:10",
																				"nodeType": "YulLiteral",
																				"src": "753:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "738:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "738:3:10"
																		},
																		"nativeSrc": "738:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "738:19:10"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "759:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "759:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "731:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "731:6:10"
																},
																"nativeSrc": "731:35:10",
																"nodeType": "YulFunctionCall",
																"src": "731:35:10"
															},
															"nativeSrc": "731:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "731:35:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "797:3:10",
																				"nodeType": "YulLiteral",
																				"src": "797:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "782:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "782:3:10"
																		},
																		"nativeSrc": "782:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "782:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value5",
																						"nativeSrc": "817:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "817:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "810:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "810:6:10"
																				},
																				"nativeSrc": "810:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "810:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "803:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "803:6:10"
																		},
																		"nativeSrc": "803:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "803:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "775:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "775:6:10"
																},
																"nativeSrc": "775:51:10",
																"nodeType": "YulFunctionCall",
																"src": "775:51:10"
															},
															"nativeSrc": "775:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "775:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_payable_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "245:587:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "425:9:10",
														"nodeType": "YulTypedName",
														"src": "425:9:10",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "436:6:10",
														"nodeType": "YulTypedName",
														"src": "436:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "444:6:10",
														"nodeType": "YulTypedName",
														"src": "444:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "452:6:10",
														"nodeType": "YulTypedName",
														"src": "452:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "460:6:10",
														"nodeType": "YulTypedName",
														"src": "460:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "468:6:10",
														"nodeType": "YulTypedName",
														"src": "468:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "476:6:10",
														"nodeType": "YulTypedName",
														"src": "476:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "487:4:10",
														"nodeType": "YulTypedName",
														"src": "487:4:10",
														"type": ""
													}
												],
												"src": "245:587:10"
											},
											{
												"body": {
													"nativeSrc": "882:86:10",
													"nodeType": "YulBlock",
													"src": "882:86:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "946:16:10",
																"nodeType": "YulBlock",
																"src": "946:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "955:1:10",
																					"nodeType": "YulLiteral",
																					"src": "955:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "958:1:10",
																					"nodeType": "YulLiteral",
																					"src": "958:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "948:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "948:6:10"
																			},
																			"nativeSrc": "948:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "948:12:10"
																		},
																		"nativeSrc": "948:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "948:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "905:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "905:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "916:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "916:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "931:3:10",
																										"nodeType": "YulLiteral",
																										"src": "931:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "936:1:10",
																										"nodeType": "YulLiteral",
																										"src": "936:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "927:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "927:3:10"
																								},
																								"nativeSrc": "927:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "927:11:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "940:1:10",
																								"nodeType": "YulLiteral",
																								"src": "940:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "923:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "923:3:10"
																						},
																						"nativeSrc": "923:19:10",
																						"nodeType": "YulFunctionCall",
																						"src": "923:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "912:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "912:3:10"
																				},
																				"nativeSrc": "912:31:10",
																				"nodeType": "YulFunctionCall",
																				"src": "912:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "902:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "902:2:10"
																		},
																		"nativeSrc": "902:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "902:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "895:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:10"
																},
																"nativeSrc": "895:50:10",
																"nodeType": "YulFunctionCall",
																"src": "895:50:10"
															},
															"nativeSrc": "892:70:10",
															"nodeType": "YulIf",
															"src": "892:70:10"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "837:131:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "871:5:10",
														"nodeType": "YulTypedName",
														"src": "871:5:10",
														"type": ""
													}
												],
												"src": "837:131:10"
											},
											{
												"body": {
													"nativeSrc": "1043:177:10",
													"nodeType": "YulBlock",
													"src": "1043:177:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1089:16:10",
																"nodeType": "YulBlock",
																"src": "1089:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1098:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1098:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1101:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1101:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1091:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1091:6:10"
																			},
																			"nativeSrc": "1091:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1091:12:10"
																		},
																		"nativeSrc": "1091:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1091:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1064:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1064:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1073:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1073:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1060:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1060:3:10"
																		},
																		"nativeSrc": "1060:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1060:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1085:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1085:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1056:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1056:3:10"
																},
																"nativeSrc": "1056:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1056:32:10"
															},
															"nativeSrc": "1053:52:10",
															"nodeType": "YulIf",
															"src": "1053:52:10"
														},
														{
															"nativeSrc": "1114:36:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1114:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1140:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1140:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1127:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1127:12:10"
																},
																"nativeSrc": "1127:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1127:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1118:5:10",
																	"nodeType": "YulTypedName",
																	"src": "1118:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1184:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1184:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1159:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "1159:24:10"
																},
																"nativeSrc": "1159:31:10",
																"nodeType": "YulFunctionCall",
																"src": "1159:31:10"
															},
															"nativeSrc": "1159:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "1159:31:10"
														},
														{
															"nativeSrc": "1199:15:10",
															"nodeType": "YulAssignment",
															"src": "1199:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "1209:5:10",
																"nodeType": "YulIdentifier",
																"src": "1209:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1199:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1199:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "973:247:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1009:9:10",
														"nodeType": "YulTypedName",
														"src": "1009:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1020:7:10",
														"nodeType": "YulTypedName",
														"src": "1020:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1032:6:10",
														"nodeType": "YulTypedName",
														"src": "1032:6:10",
														"type": ""
													}
												],
												"src": "973:247:10"
											},
											{
												"body": {
													"nativeSrc": "1320:92:10",
													"nodeType": "YulBlock",
													"src": "1320:92:10",
													"statements": [
														{
															"nativeSrc": "1330:26:10",
															"nodeType": "YulAssignment",
															"src": "1330:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1342:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1342:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1353:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1353:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1338:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1338:3:10"
																},
																"nativeSrc": "1338:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1338:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1330:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1330:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1372:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1372:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1397:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1397:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1390:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "1390:6:10"
																				},
																				"nativeSrc": "1390:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1390:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1383:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1383:6:10"
																		},
																		"nativeSrc": "1383:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1383:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1365:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1365:6:10"
																},
																"nativeSrc": "1365:41:10",
																"nodeType": "YulFunctionCall",
																"src": "1365:41:10"
															},
															"nativeSrc": "1365:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "1365:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1225:187:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1289:9:10",
														"nodeType": "YulTypedName",
														"src": "1289:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1300:6:10",
														"nodeType": "YulTypedName",
														"src": "1300:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1311:4:10",
														"nodeType": "YulTypedName",
														"src": "1311:4:10",
														"type": ""
													}
												],
												"src": "1225:187:10"
											},
											{
												"body": {
													"nativeSrc": "1518:76:10",
													"nodeType": "YulBlock",
													"src": "1518:76:10",
													"statements": [
														{
															"nativeSrc": "1528:26:10",
															"nodeType": "YulAssignment",
															"src": "1528:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1540:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1540:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1551:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1551:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1536:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1536:3:10"
																},
																"nativeSrc": "1536:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1536:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1528:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1528:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1570:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1570:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1581:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1581:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1563:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1563:6:10"
																},
																"nativeSrc": "1563:25:10",
																"nodeType": "YulFunctionCall",
																"src": "1563:25:10"
															},
															"nativeSrc": "1563:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "1563:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1417:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1487:9:10",
														"nodeType": "YulTypedName",
														"src": "1487:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1498:6:10",
														"nodeType": "YulTypedName",
														"src": "1498:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1509:4:10",
														"nodeType": "YulTypedName",
														"src": "1509:4:10",
														"type": ""
													}
												],
												"src": "1417:177:10"
											},
											{
												"body": {
													"nativeSrc": "1694:280:10",
													"nodeType": "YulBlock",
													"src": "1694:280:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1740:16:10",
																"nodeType": "YulBlock",
																"src": "1740:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1749:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1749:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1752:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1752:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1742:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1742:6:10"
																			},
																			"nativeSrc": "1742:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1742:12:10"
																		},
																		"nativeSrc": "1742:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1742:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1715:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1715:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1724:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1724:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1711:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1711:3:10"
																		},
																		"nativeSrc": "1711:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1711:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1736:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1736:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1707:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1707:3:10"
																},
																"nativeSrc": "1707:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1707:32:10"
															},
															"nativeSrc": "1704:52:10",
															"nodeType": "YulIf",
															"src": "1704:52:10"
														},
														{
															"nativeSrc": "1765:36:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1765:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1791:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1791:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1778:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1778:12:10"
																},
																"nativeSrc": "1778:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1778:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1769:5:10",
																	"nodeType": "YulTypedName",
																	"src": "1769:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1835:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1835:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1810:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "1810:24:10"
																},
																"nativeSrc": "1810:31:10",
																"nodeType": "YulFunctionCall",
																"src": "1810:31:10"
															},
															"nativeSrc": "1810:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "1810:31:10"
														},
														{
															"nativeSrc": "1850:15:10",
															"nodeType": "YulAssignment",
															"src": "1850:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "1860:5:10",
																"nodeType": "YulIdentifier",
																"src": "1860:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1850:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1850:6:10"
																}
															]
														},
														{
															"nativeSrc": "1874:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1874:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "1889:1:10",
																"nodeType": "YulLiteral",
																"src": "1889:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1878:7:10",
																	"nodeType": "YulTypedName",
																	"src": "1878:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1899:43:10",
															"nodeType": "YulAssignment",
															"src": "1899:43:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1927:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1927:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1938:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1938:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1923:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1923:3:10"
																		},
																		"nativeSrc": "1923:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1923:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1910:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1910:12:10"
																},
																"nativeSrc": "1910:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1910:32:10"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1899:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1899:7:10"
																}
															]
														},
														{
															"nativeSrc": "1951:17:10",
															"nodeType": "YulAssignment",
															"src": "1951:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "1961:7:10",
																"nodeType": "YulIdentifier",
																"src": "1961:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1951:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1951:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nativeSrc": "1599:375:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1652:9:10",
														"nodeType": "YulTypedName",
														"src": "1652:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1663:7:10",
														"nodeType": "YulTypedName",
														"src": "1663:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1675:6:10",
														"nodeType": "YulTypedName",
														"src": "1675:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1683:6:10",
														"nodeType": "YulTypedName",
														"src": "1683:6:10",
														"type": ""
													}
												],
												"src": "1599:375:10"
											},
											{
												"body": {
													"nativeSrc": "2068:497:10",
													"nodeType": "YulBlock",
													"src": "2068:497:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2114:16:10",
																"nodeType": "YulBlock",
																"src": "2114:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2123:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2123:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2126:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2126:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2116:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2116:6:10"
																			},
																			"nativeSrc": "2116:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2116:12:10"
																		},
																		"nativeSrc": "2116:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2116:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2089:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2089:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2098:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2098:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2085:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2085:3:10"
																		},
																		"nativeSrc": "2085:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2085:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2110:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2110:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2081:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2081:3:10"
																},
																"nativeSrc": "2081:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2081:32:10"
															},
															"nativeSrc": "2078:52:10",
															"nodeType": "YulIf",
															"src": "2078:52:10"
														},
														{
															"nativeSrc": "2139:37:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2139:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2166:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2166:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2153:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2153:12:10"
																},
																"nativeSrc": "2153:23:10",
																"nodeType": "YulFunctionCall",
																"src": "2153:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "2143:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2143:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2219:16:10",
																"nodeType": "YulBlock",
																"src": "2219:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2228:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2228:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2231:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2231:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2221:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:10"
																			},
																			"nativeSrc": "2221:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2221:12:10"
																		},
																		"nativeSrc": "2221:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2191:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2191:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2199:18:10",
																		"nodeType": "YulLiteral",
																		"src": "2199:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2188:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2188:2:10"
																},
																"nativeSrc": "2188:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2188:30:10"
															},
															"nativeSrc": "2185:50:10",
															"nodeType": "YulIf",
															"src": "2185:50:10"
														},
														{
															"nativeSrc": "2244:32:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2244:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2258:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2258:9:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2269:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2269:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2254:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2254:3:10"
																},
																"nativeSrc": "2254:22:10",
																"nodeType": "YulFunctionCall",
																"src": "2254:22:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2248:2:10",
																	"nodeType": "YulTypedName",
																	"src": "2248:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2324:16:10",
																"nodeType": "YulBlock",
																"src": "2324:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2333:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2333:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2336:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2336:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2326:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2326:6:10"
																			},
																			"nativeSrc": "2326:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2326:12:10"
																		},
																		"nativeSrc": "2326:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2326:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "2303:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "2303:2:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2307:4:10",
																						"nodeType": "YulLiteral",
																						"src": "2307:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2299:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2299:3:10"
																				},
																				"nativeSrc": "2299:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2299:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2314:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2314:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2295:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2295:3:10"
																		},
																		"nativeSrc": "2295:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2295:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2288:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2288:6:10"
																},
																"nativeSrc": "2288:35:10",
																"nodeType": "YulFunctionCall",
																"src": "2288:35:10"
															},
															"nativeSrc": "2285:55:10",
															"nodeType": "YulIf",
															"src": "2285:55:10"
														},
														{
															"nativeSrc": "2349:30:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2349:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2376:2:10",
																		"nodeType": "YulIdentifier",
																		"src": "2376:2:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2363:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2363:12:10"
																},
																"nativeSrc": "2363:16:10",
																"nodeType": "YulFunctionCall",
																"src": "2363:16:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2353:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2353:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2422:16:10",
																"nodeType": "YulBlock",
																"src": "2422:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2431:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2431:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2434:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2434:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2424:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2424:6:10"
																			},
																			"nativeSrc": "2424:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2424:12:10"
																		},
																		"nativeSrc": "2424:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2424:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2394:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2394:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2402:18:10",
																		"nodeType": "YulLiteral",
																		"src": "2402:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2391:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2391:2:10"
																},
																"nativeSrc": "2391:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2391:30:10"
															},
															"nativeSrc": "2388:50:10",
															"nodeType": "YulIf",
															"src": "2388:50:10"
														},
														{
															"body": {
																"nativeSrc": "2488:16:10",
																"nodeType": "YulBlock",
																"src": "2488:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2497:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2497:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2500:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2500:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2490:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2490:6:10"
																			},
																			"nativeSrc": "2490:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2490:12:10"
																		},
																		"nativeSrc": "2490:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2490:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "2461:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "2461:2:10"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2465:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2465:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2457:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2457:3:10"
																				},
																				"nativeSrc": "2457:15:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2457:15:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2474:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2474:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2453:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2453:3:10"
																		},
																		"nativeSrc": "2453:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2453:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2479:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "2479:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2450:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2450:2:10"
																},
																"nativeSrc": "2450:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2450:37:10"
															},
															"nativeSrc": "2447:57:10",
															"nodeType": "YulIf",
															"src": "2447:57:10"
														},
														{
															"nativeSrc": "2513:21:10",
															"nodeType": "YulAssignment",
															"src": "2513:21:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2527:2:10",
																		"nodeType": "YulIdentifier",
																		"src": "2527:2:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2531:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2531:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2523:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2523:3:10"
																},
																"nativeSrc": "2523:11:10",
																"nodeType": "YulFunctionCall",
																"src": "2523:11:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2513:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2513:6:10"
																}
															]
														},
														{
															"nativeSrc": "2543:16:10",
															"nodeType": "YulAssignment",
															"src": "2543:16:10",
															"value": {
																"name": "length",
																"nativeSrc": "2553:6:10",
																"nodeType": "YulIdentifier",
																"src": "2553:6:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2543:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2543:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptr",
												"nativeSrc": "1979:586:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2026:9:10",
														"nodeType": "YulTypedName",
														"src": "2026:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2037:7:10",
														"nodeType": "YulTypedName",
														"src": "2037:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2049:6:10",
														"nodeType": "YulTypedName",
														"src": "2049:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2057:6:10",
														"nodeType": "YulTypedName",
														"src": "2057:6:10",
														"type": ""
													}
												],
												"src": "1979:586:10"
											},
											{
												"body": {
													"nativeSrc": "2711:356:10",
													"nodeType": "YulBlock",
													"src": "2711:356:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2728:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2728:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "2753:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2753:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2746:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "2746:6:10"
																				},
																				"nativeSrc": "2746:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2746:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2739:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2739:6:10"
																		},
																		"nativeSrc": "2739:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2739:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2721:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2721:6:10"
																},
																"nativeSrc": "2721:41:10",
																"nodeType": "YulFunctionCall",
																"src": "2721:41:10"
															},
															"nativeSrc": "2721:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "2721:41:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2782:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2782:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2793:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2793:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2778:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2778:3:10"
																		},
																		"nativeSrc": "2778:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2778:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2798:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2798:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2771:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2771:6:10"
																},
																"nativeSrc": "2771:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2771:30:10"
															},
															"nativeSrc": "2771:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "2771:30:10"
														},
														{
															"nativeSrc": "2810:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2810:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2830:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2830:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2824:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2824:5:10"
																},
																"nativeSrc": "2824:13:10",
																"nodeType": "YulFunctionCall",
																"src": "2824:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2814:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2814:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2857:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2857:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2868:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2868:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2853:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2853:3:10"
																		},
																		"nativeSrc": "2853:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2853:18:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2873:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2873:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2846:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2846:6:10"
																},
																"nativeSrc": "2846:34:10",
																"nodeType": "YulFunctionCall",
																"src": "2846:34:10"
															},
															"nativeSrc": "2846:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "2846:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2899:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2899:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2910:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2910:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2895:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2895:3:10"
																		},
																		"nativeSrc": "2895:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2895:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "2919:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2919:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2927:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2927:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2915:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2915:3:10"
																		},
																		"nativeSrc": "2915:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2915:15:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2932:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2932:6:10"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2889:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2889:5:10"
																},
																"nativeSrc": "2889:50:10",
																"nodeType": "YulFunctionCall",
																"src": "2889:50:10"
															},
															"nativeSrc": "2889:50:10",
															"nodeType": "YulExpressionStatement",
															"src": "2889:50:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2963:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2963:9:10"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2974:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2974:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2959:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2959:3:10"
																				},
																				"nativeSrc": "2959:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2959:22:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2983:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2983:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2955:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2955:3:10"
																		},
																		"nativeSrc": "2955:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2955:31:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2988:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2988:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2948:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2948:6:10"
																},
																"nativeSrc": "2948:42:10",
																"nodeType": "YulFunctionCall",
																"src": "2948:42:10"
															},
															"nativeSrc": "2948:42:10",
															"nodeType": "YulExpressionStatement",
															"src": "2948:42:10"
														},
														{
															"nativeSrc": "2999:62:10",
															"nodeType": "YulAssignment",
															"src": "2999:62:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3015:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3015:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "3034:6:10",
																								"nodeType": "YulIdentifier",
																								"src": "3034:6:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3042:2:10",
																								"nodeType": "YulLiteral",
																								"src": "3042:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3030:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "3030:3:10"
																						},
																						"nativeSrc": "3030:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "3030:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3051:2:10",
																								"nodeType": "YulLiteral",
																								"src": "3051:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "3047:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "3047:3:10"
																						},
																						"nativeSrc": "3047:7:10",
																						"nodeType": "YulFunctionCall",
																						"src": "3047:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3026:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3026:3:10"
																				},
																				"nativeSrc": "3026:29:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3026:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3011:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3011:3:10"
																		},
																		"nativeSrc": "3011:45:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3011:45:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3058:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3058:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3007:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3007:3:10"
																},
																"nativeSrc": "3007:54:10",
																"nodeType": "YulFunctionCall",
																"src": "3007:54:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2999:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2999:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "2570:497:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2672:9:10",
														"nodeType": "YulTypedName",
														"src": "2672:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2683:6:10",
														"nodeType": "YulTypedName",
														"src": "2683:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2691:6:10",
														"nodeType": "YulTypedName",
														"src": "2691:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2702:4:10",
														"nodeType": "YulTypedName",
														"src": "2702:4:10",
														"type": ""
													}
												],
												"src": "2570:497:10"
											},
											{
												"body": {
													"nativeSrc": "3173:102:10",
													"nodeType": "YulBlock",
													"src": "3173:102:10",
													"statements": [
														{
															"nativeSrc": "3183:26:10",
															"nodeType": "YulAssignment",
															"src": "3183:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3195:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3195:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3206:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3206:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3191:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3191:3:10"
																},
																"nativeSrc": "3191:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3191:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3183:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3183:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3225:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3225:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3240:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3240:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3256:3:10",
																								"nodeType": "YulLiteral",
																								"src": "3256:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3261:1:10",
																								"nodeType": "YulLiteral",
																								"src": "3261:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3252:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "3252:3:10"
																						},
																						"nativeSrc": "3252:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "3252:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3265:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3265:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3248:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3248:3:10"
																				},
																				"nativeSrc": "3248:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3248:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3236:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3236:3:10"
																		},
																		"nativeSrc": "3236:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3236:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3218:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3218:6:10"
																},
																"nativeSrc": "3218:51:10",
																"nodeType": "YulFunctionCall",
																"src": "3218:51:10"
															},
															"nativeSrc": "3218:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "3218:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3072:203:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3142:9:10",
														"nodeType": "YulTypedName",
														"src": "3142:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3153:6:10",
														"nodeType": "YulTypedName",
														"src": "3153:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3164:4:10",
														"nodeType": "YulTypedName",
														"src": "3164:4:10",
														"type": ""
													}
												],
												"src": "3072:203:10"
											},
											{
												"body": {
													"nativeSrc": "3394:102:10",
													"nodeType": "YulBlock",
													"src": "3394:102:10",
													"statements": [
														{
															"nativeSrc": "3404:26:10",
															"nodeType": "YulAssignment",
															"src": "3404:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3416:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3416:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3427:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3427:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3412:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3412:3:10"
																},
																"nativeSrc": "3412:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3412:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3404:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3404:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3446:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3446:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3461:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3461:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3477:3:10",
																								"nodeType": "YulLiteral",
																								"src": "3477:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3482:1:10",
																								"nodeType": "YulLiteral",
																								"src": "3482:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3473:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "3473:3:10"
																						},
																						"nativeSrc": "3473:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "3473:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3486:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3486:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3469:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3469:3:10"
																				},
																				"nativeSrc": "3469:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3469:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3457:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3457:3:10"
																		},
																		"nativeSrc": "3457:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3457:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3439:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3439:6:10"
																},
																"nativeSrc": "3439:51:10",
																"nodeType": "YulFunctionCall",
																"src": "3439:51:10"
															},
															"nativeSrc": "3439:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "3439:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IPool_$638__to_t_address__fromStack_reversed",
												"nativeSrc": "3280:216:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3363:9:10",
														"nodeType": "YulTypedName",
														"src": "3363:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3374:6:10",
														"nodeType": "YulTypedName",
														"src": "3374:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3385:4:10",
														"nodeType": "YulTypedName",
														"src": "3385:4:10",
														"type": ""
													}
												],
												"src": "3280:216:10"
											},
											{
												"body": {
													"nativeSrc": "3617:102:10",
													"nodeType": "YulBlock",
													"src": "3617:102:10",
													"statements": [
														{
															"nativeSrc": "3627:26:10",
															"nodeType": "YulAssignment",
															"src": "3627:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3639:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3639:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3650:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3650:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3635:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3635:3:10"
																},
																"nativeSrc": "3635:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3635:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3627:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3627:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3669:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3669:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3684:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3684:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3700:3:10",
																								"nodeType": "YulLiteral",
																								"src": "3700:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3705:1:10",
																								"nodeType": "YulLiteral",
																								"src": "3705:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3696:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "3696:3:10"
																						},
																						"nativeSrc": "3696:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "3696:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3709:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3709:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3692:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3692:3:10"
																				},
																				"nativeSrc": "3692:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3692:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3680:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3680:3:10"
																		},
																		"nativeSrc": "3680:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3680:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3662:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3662:6:10"
																},
																"nativeSrc": "3662:51:10",
																"nodeType": "YulFunctionCall",
																"src": "3662:51:10"
															},
															"nativeSrc": "3662:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "3662:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$1494__to_t_address__fromStack_reversed",
												"nativeSrc": "3501:218:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3586:9:10",
														"nodeType": "YulTypedName",
														"src": "3586:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3597:6:10",
														"nodeType": "YulTypedName",
														"src": "3597:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3608:4:10",
														"nodeType": "YulTypedName",
														"src": "3608:4:10",
														"type": ""
													}
												],
												"src": "3501:218:10"
											},
											{
												"body": {
													"nativeSrc": "3898:166:10",
													"nodeType": "YulBlock",
													"src": "3898:166:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3915:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3915:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3926:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3926:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3908:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3908:6:10"
																},
																"nativeSrc": "3908:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3908:21:10"
															},
															"nativeSrc": "3908:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "3908:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3949:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3949:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3960:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3960:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3945:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3945:3:10"
																		},
																		"nativeSrc": "3945:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3945:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3965:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3965:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3938:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3938:6:10"
																},
																"nativeSrc": "3938:30:10",
																"nodeType": "YulFunctionCall",
																"src": "3938:30:10"
															},
															"nativeSrc": "3938:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "3938:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3988:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3988:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3999:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3999:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3984:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3984:3:10"
																		},
																		"nativeSrc": "3984:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:18:10"
																	},
																	{
																		"hexValue": "4e6f7420612044414f206d656d626572",
																		"kind": "string",
																		"nativeSrc": "4004:18:10",
																		"nodeType": "YulLiteral",
																		"src": "4004:18:10",
																		"type": "",
																		"value": "Not a DAO member"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3977:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3977:6:10"
																},
																"nativeSrc": "3977:46:10",
																"nodeType": "YulFunctionCall",
																"src": "3977:46:10"
															},
															"nativeSrc": "3977:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "3977:46:10"
														},
														{
															"nativeSrc": "4032:26:10",
															"nodeType": "YulAssignment",
															"src": "4032:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4044:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4044:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4055:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4055:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4040:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4040:3:10"
																},
																"nativeSrc": "4040:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4040:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4032:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4032:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c8fc0753689749684a9e551425bc1a5c3140528f7a45ea255ec00e51d97963b5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3724:340:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3875:9:10",
														"nodeType": "YulTypedName",
														"src": "3875:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3889:4:10",
														"nodeType": "YulTypedName",
														"src": "3889:4:10",
														"type": ""
													}
												],
												"src": "3724:340:10"
											},
											{
												"body": {
													"nativeSrc": "4101:95:10",
													"nodeType": "YulBlock",
													"src": "4101:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4118:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4118:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4125:3:10",
																				"nodeType": "YulLiteral",
																				"src": "4125:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4130:10:10",
																				"nodeType": "YulLiteral",
																				"src": "4130:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4121:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4121:3:10"
																		},
																		"nativeSrc": "4121:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4121:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4111:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4111:6:10"
																},
																"nativeSrc": "4111:31:10",
																"nodeType": "YulFunctionCall",
																"src": "4111:31:10"
															},
															"nativeSrc": "4111:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "4111:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4158:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4158:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4161:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4161:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4151:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4151:6:10"
																},
																"nativeSrc": "4151:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4151:15:10"
															},
															"nativeSrc": "4151:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "4151:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4182:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4182:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4185:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4185:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4175:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4175:6:10"
																},
																"nativeSrc": "4175:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4175:15:10"
															},
															"nativeSrc": "4175:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "4175:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "4069:127:10",
												"nodeType": "YulFunctionDefinition",
												"src": "4069:127:10"
											},
											{
												"body": {
													"nativeSrc": "4375:163:10",
													"nodeType": "YulBlock",
													"src": "4375:163:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4392:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4392:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4403:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4403:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4385:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4385:6:10"
																},
																"nativeSrc": "4385:21:10",
																"nodeType": "YulFunctionCall",
																"src": "4385:21:10"
															},
															"nativeSrc": "4385:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "4385:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4426:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4426:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4437:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4437:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4422:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4422:3:10"
																		},
																		"nativeSrc": "4422:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4422:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4442:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4442:2:10",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4415:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4415:6:10"
																},
																"nativeSrc": "4415:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4415:30:10"
															},
															"nativeSrc": "4415:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "4415:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4465:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4465:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4476:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4476:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4461:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4461:3:10"
																		},
																		"nativeSrc": "4461:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4461:18:10"
																	},
																	{
																		"hexValue": "416c726561647920766f746564",
																		"kind": "string",
																		"nativeSrc": "4481:15:10",
																		"nodeType": "YulLiteral",
																		"src": "4481:15:10",
																		"type": "",
																		"value": "Already voted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4454:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4454:6:10"
																},
																"nativeSrc": "4454:43:10",
																"nodeType": "YulFunctionCall",
																"src": "4454:43:10"
															},
															"nativeSrc": "4454:43:10",
															"nodeType": "YulExpressionStatement",
															"src": "4454:43:10"
														},
														{
															"nativeSrc": "4506:26:10",
															"nodeType": "YulAssignment",
															"src": "4506:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4518:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4518:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4529:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4529:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4514:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4514:3:10"
																},
																"nativeSrc": "4514:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4514:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4506:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4506:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4201:337:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4352:9:10",
														"nodeType": "YulTypedName",
														"src": "4352:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4366:4:10",
														"nodeType": "YulTypedName",
														"src": "4366:4:10",
														"type": ""
													}
												],
												"src": "4201:337:10"
											},
											{
												"body": {
													"nativeSrc": "4717:169:10",
													"nodeType": "YulBlock",
													"src": "4717:169:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4734:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4734:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4745:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4745:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4727:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4727:6:10"
																},
																"nativeSrc": "4727:21:10",
																"nodeType": "YulFunctionCall",
																"src": "4727:21:10"
															},
															"nativeSrc": "4727:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "4727:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4768:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4768:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4779:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4779:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4764:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4764:3:10"
																		},
																		"nativeSrc": "4764:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4764:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4784:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4784:2:10",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4757:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4757:6:10"
																},
																"nativeSrc": "4757:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4757:30:10"
															},
															"nativeSrc": "4757:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "4757:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4807:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4807:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4818:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4818:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4803:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4803:3:10"
																		},
																		"nativeSrc": "4803:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4803:18:10"
																	},
																	{
																		"hexValue": "566f74696e6720706572696f6420656e646564",
																		"kind": "string",
																		"nativeSrc": "4823:21:10",
																		"nodeType": "YulLiteral",
																		"src": "4823:21:10",
																		"type": "",
																		"value": "Voting period ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4796:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4796:6:10"
																},
																"nativeSrc": "4796:49:10",
																"nodeType": "YulFunctionCall",
																"src": "4796:49:10"
															},
															"nativeSrc": "4796:49:10",
															"nodeType": "YulExpressionStatement",
															"src": "4796:49:10"
														},
														{
															"nativeSrc": "4854:26:10",
															"nodeType": "YulAssignment",
															"src": "4854:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4866:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4866:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4877:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4877:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4862:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4862:3:10"
																},
																"nativeSrc": "4862:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4862:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4854:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4854:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_36ba02d776fd732ac627a72d2a4bcd896afdeadba8694171733d88c6775413e0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4543:343:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4694:9:10",
														"nodeType": "YulTypedName",
														"src": "4694:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4708:4:10",
														"nodeType": "YulTypedName",
														"src": "4708:4:10",
														"type": ""
													}
												],
												"src": "4543:343:10"
											},
											{
												"body": {
													"nativeSrc": "4972:149:10",
													"nodeType": "YulBlock",
													"src": "4972:149:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5018:16:10",
																"nodeType": "YulBlock",
																"src": "5018:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5027:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5030:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5030:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5020:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5020:6:10"
																			},
																			"nativeSrc": "5020:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5020:12:10"
																		},
																		"nativeSrc": "5020:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5020:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4993:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4993:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5002:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5002:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4989:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4989:3:10"
																		},
																		"nativeSrc": "4989:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4989:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5014:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5014:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4985:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4985:3:10"
																},
																"nativeSrc": "4985:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4985:32:10"
															},
															"nativeSrc": "4982:52:10",
															"nodeType": "YulIf",
															"src": "4982:52:10"
														},
														{
															"nativeSrc": "5043:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5043:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "5056:1:10",
																"nodeType": "YulLiteral",
																"src": "5056:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5047:5:10",
																	"nodeType": "YulTypedName",
																	"src": "5047:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5066:25:10",
															"nodeType": "YulAssignment",
															"src": "5066:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5081:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5081:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5075:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5075:5:10"
																},
																"nativeSrc": "5075:16:10",
																"nodeType": "YulFunctionCall",
																"src": "5075:16:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5066:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5066:5:10"
																}
															]
														},
														{
															"nativeSrc": "5100:15:10",
															"nodeType": "YulAssignment",
															"src": "5100:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "5110:5:10",
																"nodeType": "YulIdentifier",
																"src": "5110:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5100:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5100:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "4891:230:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4938:9:10",
														"nodeType": "YulTypedName",
														"src": "4938:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4949:7:10",
														"nodeType": "YulTypedName",
														"src": "4949:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4961:6:10",
														"nodeType": "YulTypedName",
														"src": "4961:6:10",
														"type": ""
													}
												],
												"src": "4891:230:10"
											},
											{
												"body": {
													"nativeSrc": "5300:225:10",
													"nodeType": "YulBlock",
													"src": "5300:225:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5317:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5317:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5328:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5328:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5310:6:10"
																},
																"nativeSrc": "5310:21:10",
																"nodeType": "YulFunctionCall",
																"src": "5310:21:10"
															},
															"nativeSrc": "5310:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "5310:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5351:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5351:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5362:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5362:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5347:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5347:3:10"
																		},
																		"nativeSrc": "5347:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5347:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5367:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5367:2:10",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5340:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5340:6:10"
																},
																"nativeSrc": "5340:30:10",
																"nodeType": "YulFunctionCall",
																"src": "5340:30:10"
															},
															"nativeSrc": "5340:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "5340:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5390:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5390:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5401:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5401:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5386:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5386:3:10"
																		},
																		"nativeSrc": "5386:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5386:18:10"
																	},
																	{
																		"hexValue": "4d75737420686f6c6420676f7665726e616e636520746f6b656e7320746f2076",
																		"kind": "string",
																		"nativeSrc": "5406:34:10",
																		"nodeType": "YulLiteral",
																		"src": "5406:34:10",
																		"type": "",
																		"value": "Must hold governance tokens to v"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5379:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5379:6:10"
																},
																"nativeSrc": "5379:62:10",
																"nodeType": "YulFunctionCall",
																"src": "5379:62:10"
															},
															"nativeSrc": "5379:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "5379:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5461:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5461:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5472:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5472:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5457:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5457:3:10"
																		},
																		"nativeSrc": "5457:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5457:18:10"
																	},
																	{
																		"hexValue": "6f7465",
																		"kind": "string",
																		"nativeSrc": "5477:5:10",
																		"nodeType": "YulLiteral",
																		"src": "5477:5:10",
																		"type": "",
																		"value": "ote"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5450:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5450:6:10"
																},
																"nativeSrc": "5450:33:10",
																"nodeType": "YulFunctionCall",
																"src": "5450:33:10"
															},
															"nativeSrc": "5450:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "5450:33:10"
														},
														{
															"nativeSrc": "5492:27:10",
															"nodeType": "YulAssignment",
															"src": "5492:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5504:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5504:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5515:3:10",
																		"nodeType": "YulLiteral",
																		"src": "5515:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5500:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5500:3:10"
																},
																"nativeSrc": "5500:19:10",
																"nodeType": "YulFunctionCall",
																"src": "5500:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5492:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5492:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_23dd702789a702d582f99b58a434cec47cd541852e1263083521a4179a192189__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5126:399:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5277:9:10",
														"nodeType": "YulTypedName",
														"src": "5277:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5291:4:10",
														"nodeType": "YulTypedName",
														"src": "5291:4:10",
														"type": ""
													}
												],
												"src": "5126:399:10"
											},
											{
												"body": {
													"nativeSrc": "5562:95:10",
													"nodeType": "YulBlock",
													"src": "5562:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5579:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5579:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5586:3:10",
																				"nodeType": "YulLiteral",
																				"src": "5586:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5591:10:10",
																				"nodeType": "YulLiteral",
																				"src": "5591:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5582:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5582:3:10"
																		},
																		"nativeSrc": "5582:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5582:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5572:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5572:6:10"
																},
																"nativeSrc": "5572:31:10",
																"nodeType": "YulFunctionCall",
																"src": "5572:31:10"
															},
															"nativeSrc": "5572:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "5572:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5619:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5619:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5622:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5622:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5612:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5612:6:10"
																},
																"nativeSrc": "5612:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5612:15:10"
															},
															"nativeSrc": "5612:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5612:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5643:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5643:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5646:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5646:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5636:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5636:6:10"
																},
																"nativeSrc": "5636:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5636:15:10"
															},
															"nativeSrc": "5636:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5636:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5530:127:10",
												"nodeType": "YulFunctionDefinition",
												"src": "5530:127:10"
											},
											{
												"body": {
													"nativeSrc": "5710:77:10",
													"nodeType": "YulBlock",
													"src": "5710:77:10",
													"statements": [
														{
															"nativeSrc": "5720:16:10",
															"nodeType": "YulAssignment",
															"src": "5720:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5731:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5731:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5734:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5734:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5727:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5727:3:10"
																},
																"nativeSrc": "5727:9:10",
																"nodeType": "YulFunctionCall",
																"src": "5727:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5720:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5720:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5759:22:10",
																"nodeType": "YulBlock",
																"src": "5759:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5761:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5761:16:10"
																			},
																			"nativeSrc": "5761:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5761:18:10"
																		},
																		"nativeSrc": "5761:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5761:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5751:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5751:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5754:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5754:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5748:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5748:2:10"
																},
																"nativeSrc": "5748:10:10",
																"nodeType": "YulFunctionCall",
																"src": "5748:10:10"
															},
															"nativeSrc": "5745:36:10",
															"nodeType": "YulIf",
															"src": "5745:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5662:125:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5693:1:10",
														"nodeType": "YulTypedName",
														"src": "5693:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5696:1:10",
														"nodeType": "YulTypedName",
														"src": "5696:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5702:3:10",
														"nodeType": "YulTypedName",
														"src": "5702:3:10",
														"type": ""
													}
												],
												"src": "5662:125:10"
											},
											{
												"body": {
													"nativeSrc": "5949:188:10",
													"nodeType": "YulBlock",
													"src": "5949:188:10",
													"statements": [
														{
															"nativeSrc": "5959:26:10",
															"nodeType": "YulAssignment",
															"src": "5959:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5971:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5971:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5982:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5982:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5967:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5967:3:10"
																},
																"nativeSrc": "5967:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5967:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5959:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5959:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6001:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6001:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6012:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6012:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5994:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5994:6:10"
																},
																"nativeSrc": "5994:25:10",
																"nodeType": "YulFunctionCall",
																"src": "5994:25:10"
															},
															"nativeSrc": "5994:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "5994:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6039:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6039:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6050:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6050:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6035:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6035:3:10"
																		},
																		"nativeSrc": "6035:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6035:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6059:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6059:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6075:3:10",
																								"nodeType": "YulLiteral",
																								"src": "6075:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6080:1:10",
																								"nodeType": "YulLiteral",
																								"src": "6080:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6071:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "6071:3:10"
																						},
																						"nativeSrc": "6071:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "6071:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6084:1:10",
																						"nodeType": "YulLiteral",
																						"src": "6084:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6067:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6067:3:10"
																				},
																				"nativeSrc": "6067:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6067:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6055:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6055:3:10"
																		},
																		"nativeSrc": "6055:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6055:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6028:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6028:6:10"
																},
																"nativeSrc": "6028:60:10",
																"nodeType": "YulFunctionCall",
																"src": "6028:60:10"
															},
															"nativeSrc": "6028:60:10",
															"nodeType": "YulExpressionStatement",
															"src": "6028:60:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6108:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6108:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6119:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6119:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6104:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6104:3:10"
																		},
																		"nativeSrc": "6104:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6104:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6124:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6124:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6097:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6097:6:10"
																},
																"nativeSrc": "6097:34:10",
																"nodeType": "YulFunctionCall",
																"src": "6097:34:10"
															},
															"nativeSrc": "6097:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "6097:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5792:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5902:9:10",
														"nodeType": "YulTypedName",
														"src": "5902:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5913:6:10",
														"nodeType": "YulTypedName",
														"src": "5913:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5921:6:10",
														"nodeType": "YulTypedName",
														"src": "5921:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5929:6:10",
														"nodeType": "YulTypedName",
														"src": "5929:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5940:4:10",
														"nodeType": "YulTypedName",
														"src": "5940:4:10",
														"type": ""
													}
												],
												"src": "5792:345:10"
											},
											{
												"body": {
													"nativeSrc": "6316:228:10",
													"nodeType": "YulBlock",
													"src": "6316:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6333:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6333:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6344:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6344:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6326:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6326:6:10"
																},
																"nativeSrc": "6326:21:10",
																"nodeType": "YulFunctionCall",
																"src": "6326:21:10"
															},
															"nativeSrc": "6326:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "6326:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6367:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6367:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6378:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6378:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6363:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6363:3:10"
																		},
																		"nativeSrc": "6363:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6363:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6383:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6383:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6356:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6356:6:10"
																},
																"nativeSrc": "6356:30:10",
																"nodeType": "YulFunctionCall",
																"src": "6356:30:10"
															},
															"nativeSrc": "6356:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "6356:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6406:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6406:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6417:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6417:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6402:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6402:3:10"
																		},
																		"nativeSrc": "6402:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6402:18:10"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820766f746573202835303020746f6b656e7320726571",
																		"kind": "string",
																		"nativeSrc": "6422:34:10",
																		"nodeType": "YulLiteral",
																		"src": "6422:34:10",
																		"type": "",
																		"value": "Not enough votes (500 tokens req"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6395:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6395:6:10"
																},
																"nativeSrc": "6395:62:10",
																"nodeType": "YulFunctionCall",
																"src": "6395:62:10"
															},
															"nativeSrc": "6395:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "6395:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6477:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6477:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6488:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6488:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6473:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6473:3:10"
																		},
																		"nativeSrc": "6473:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6473:18:10"
																	},
																	{
																		"hexValue": "756972656429",
																		"kind": "string",
																		"nativeSrc": "6493:8:10",
																		"nodeType": "YulLiteral",
																		"src": "6493:8:10",
																		"type": "",
																		"value": "uired)"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6466:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6466:6:10"
																},
																"nativeSrc": "6466:36:10",
																"nodeType": "YulFunctionCall",
																"src": "6466:36:10"
															},
															"nativeSrc": "6466:36:10",
															"nodeType": "YulExpressionStatement",
															"src": "6466:36:10"
														},
														{
															"nativeSrc": "6511:27:10",
															"nodeType": "YulAssignment",
															"src": "6511:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6523:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6523:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6534:3:10",
																		"nodeType": "YulLiteral",
																		"src": "6534:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6519:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6519:3:10"
																},
																"nativeSrc": "6519:19:10",
																"nodeType": "YulFunctionCall",
																"src": "6519:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6511:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6511:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70781312560918a61d3b5e274a24dd70cd2d0901f970caf6cb5f94161f7cdb19__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6142:402:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6293:9:10",
														"nodeType": "YulTypedName",
														"src": "6293:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6307:4:10",
														"nodeType": "YulTypedName",
														"src": "6307:4:10",
														"type": ""
													}
												],
												"src": "6142:402:10"
											},
											{
												"body": {
													"nativeSrc": "6723:166:10",
													"nodeType": "YulBlock",
													"src": "6723:166:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6740:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6740:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6751:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6751:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6733:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6733:6:10"
																},
																"nativeSrc": "6733:21:10",
																"nodeType": "YulFunctionCall",
																"src": "6733:21:10"
															},
															"nativeSrc": "6733:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "6733:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6774:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6774:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6785:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6785:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6770:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6770:3:10"
																		},
																		"nativeSrc": "6770:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6770:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6790:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6790:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6763:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6763:6:10"
																},
																"nativeSrc": "6763:30:10",
																"nodeType": "YulFunctionCall",
																"src": "6763:30:10"
															},
															"nativeSrc": "6763:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "6763:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6813:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6813:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6824:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6824:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6809:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6809:3:10"
																		},
																		"nativeSrc": "6809:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6809:18:10"
																	},
																	{
																		"hexValue": "416c7265616479206578656375746564",
																		"kind": "string",
																		"nativeSrc": "6829:18:10",
																		"nodeType": "YulLiteral",
																		"src": "6829:18:10",
																		"type": "",
																		"value": "Already executed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6802:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6802:6:10"
																},
																"nativeSrc": "6802:46:10",
																"nodeType": "YulFunctionCall",
																"src": "6802:46:10"
															},
															"nativeSrc": "6802:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "6802:46:10"
														},
														{
															"nativeSrc": "6857:26:10",
															"nodeType": "YulAssignment",
															"src": "6857:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6869:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6869:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6880:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6880:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6865:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6865:3:10"
																},
																"nativeSrc": "6865:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6865:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6857:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6857:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_58f47ea4e737df2d9cc4764db26c111751884cf0a1856aca9f4c66cadc811e1b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6549:340:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6700:9:10",
														"nodeType": "YulTypedName",
														"src": "6700:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6714:4:10",
														"nodeType": "YulTypedName",
														"src": "6714:4:10",
														"type": ""
													}
												],
												"src": "6549:340:10"
											},
											{
												"body": {
													"nativeSrc": "7068:168:10",
													"nodeType": "YulBlock",
													"src": "7068:168:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7085:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7085:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7096:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7096:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7078:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7078:6:10"
																},
																"nativeSrc": "7078:21:10",
																"nodeType": "YulFunctionCall",
																"src": "7078:21:10"
															},
															"nativeSrc": "7078:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "7078:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7119:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7119:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7130:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7130:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7115:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7115:3:10"
																		},
																		"nativeSrc": "7115:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7115:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7135:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7135:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7108:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7108:6:10"
																},
																"nativeSrc": "7108:30:10",
																"nodeType": "YulFunctionCall",
																"src": "7108:30:10"
															},
															"nativeSrc": "7108:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "7108:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7158:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7158:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7169:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7169:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7154:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7154:3:10"
																		},
																		"nativeSrc": "7154:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7154:18:10"
																	},
																	{
																		"hexValue": "46756e6473207374696c6c206c6f636b6564",
																		"kind": "string",
																		"nativeSrc": "7174:20:10",
																		"nodeType": "YulLiteral",
																		"src": "7174:20:10",
																		"type": "",
																		"value": "Funds still locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7147:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7147:6:10"
																},
																"nativeSrc": "7147:48:10",
																"nodeType": "YulFunctionCall",
																"src": "7147:48:10"
															},
															"nativeSrc": "7147:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "7147:48:10"
														},
														{
															"nativeSrc": "7204:26:10",
															"nodeType": "YulAssignment",
															"src": "7204:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7216:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7216:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7227:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7227:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7212:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7212:3:10"
																},
																"nativeSrc": "7212:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7212:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7204:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7204:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_41c4e4fc25bbb0d8878d5705bd166f1c809d1260cb49444e3832f4736f0439e3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6894:342:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7045:9:10",
														"nodeType": "YulTypedName",
														"src": "7045:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7059:4:10",
														"nodeType": "YulTypedName",
														"src": "7059:4:10",
														"type": ""
													}
												],
												"src": "6894:342:10"
											},
											{
												"body": {
													"nativeSrc": "7415:179:10",
													"nodeType": "YulBlock",
													"src": "7415:179:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7432:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7432:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7443:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7443:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7425:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7425:6:10"
																},
																"nativeSrc": "7425:21:10",
																"nodeType": "YulFunctionCall",
																"src": "7425:21:10"
															},
															"nativeSrc": "7425:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "7425:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7466:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7466:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7477:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7477:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7462:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7462:3:10"
																		},
																		"nativeSrc": "7462:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7462:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7482:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7482:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7455:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7455:6:10"
																},
																"nativeSrc": "7455:30:10",
																"nodeType": "YulFunctionCall",
																"src": "7455:30:10"
															},
															"nativeSrc": "7455:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "7455:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7505:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7505:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7516:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7516:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7501:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7501:3:10"
																		},
																		"nativeSrc": "7501:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7501:18:10"
																	},
																	{
																		"hexValue": "496e73756666696369656e742074726561737572792062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "7521:31:10",
																		"nodeType": "YulLiteral",
																		"src": "7521:31:10",
																		"type": "",
																		"value": "Insufficient treasury balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7494:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7494:6:10"
																},
																"nativeSrc": "7494:59:10",
																"nodeType": "YulFunctionCall",
																"src": "7494:59:10"
															},
															"nativeSrc": "7494:59:10",
															"nodeType": "YulExpressionStatement",
															"src": "7494:59:10"
														},
														{
															"nativeSrc": "7562:26:10",
															"nodeType": "YulAssignment",
															"src": "7562:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7574:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7574:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7585:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7585:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7570:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7570:3:10"
																},
																"nativeSrc": "7570:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7570:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7562:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7562:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_59eae394831db960eed2b1204907b57c5e1f65d6dfb40c9a41314d384a8055da__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7241:353:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7392:9:10",
														"nodeType": "YulTypedName",
														"src": "7392:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7406:4:10",
														"nodeType": "YulTypedName",
														"src": "7406:4:10",
														"type": ""
													}
												],
												"src": "7241:353:10"
											},
											{
												"body": {
													"nativeSrc": "7773:167:10",
													"nodeType": "YulBlock",
													"src": "7773:167:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7790:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7790:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7801:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7801:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7783:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7783:6:10"
																},
																"nativeSrc": "7783:21:10",
																"nodeType": "YulFunctionCall",
																"src": "7783:21:10"
															},
															"nativeSrc": "7783:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "7783:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7824:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7824:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7835:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7835:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7820:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7820:3:10"
																		},
																		"nativeSrc": "7820:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7820:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7840:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7840:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7813:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7813:6:10"
																},
																"nativeSrc": "7813:30:10",
																"nodeType": "YulFunctionCall",
																"src": "7813:30:10"
															},
															"nativeSrc": "7813:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "7813:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7863:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7863:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7874:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7874:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7859:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7859:3:10"
																		},
																		"nativeSrc": "7859:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7859:18:10"
																	},
																	{
																		"hexValue": "45544820707269636520746f6f206c6f77",
																		"kind": "string",
																		"nativeSrc": "7879:19:10",
																		"nodeType": "YulLiteral",
																		"src": "7879:19:10",
																		"type": "",
																		"value": "ETH price too low"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7852:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7852:6:10"
																},
																"nativeSrc": "7852:47:10",
																"nodeType": "YulFunctionCall",
																"src": "7852:47:10"
															},
															"nativeSrc": "7852:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "7852:47:10"
														},
														{
															"nativeSrc": "7908:26:10",
															"nodeType": "YulAssignment",
															"src": "7908:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7920:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7920:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7931:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7931:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7916:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7916:3:10"
																},
																"nativeSrc": "7916:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7916:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7908:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7908:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_66d1585b1e27cc9397312cfc1f57a2ea0c14475d5f53f4e39e5c98660bad98b3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7599:341:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7750:9:10",
														"nodeType": "YulTypedName",
														"src": "7750:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7764:4:10",
														"nodeType": "YulTypedName",
														"src": "7764:4:10",
														"type": ""
													}
												],
												"src": "7599:341:10"
											},
											{
												"body": {
													"nativeSrc": "7994:79:10",
													"nodeType": "YulBlock",
													"src": "7994:79:10",
													"statements": [
														{
															"nativeSrc": "8004:17:10",
															"nodeType": "YulAssignment",
															"src": "8004:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8016:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8016:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8019:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8019:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8012:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8012:3:10"
																},
																"nativeSrc": "8012:9:10",
																"nodeType": "YulFunctionCall",
																"src": "8012:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8004:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8004:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8045:22:10",
																"nodeType": "YulBlock",
																"src": "8045:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8047:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8047:16:10"
																			},
																			"nativeSrc": "8047:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8047:18:10"
																		},
																		"nativeSrc": "8047:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8047:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8036:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8036:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8042:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8042:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8033:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8033:2:10"
																},
																"nativeSrc": "8033:11:10",
																"nodeType": "YulFunctionCall",
																"src": "8033:11:10"
															},
															"nativeSrc": "8030:37:10",
															"nodeType": "YulIf",
															"src": "8030:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7945:128:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7976:1:10",
														"nodeType": "YulTypedName",
														"src": "7976:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7979:1:10",
														"nodeType": "YulTypedName",
														"src": "7979:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7985:4:10",
														"nodeType": "YulTypedName",
														"src": "7985:4:10",
														"type": ""
													}
												],
												"src": "7945:128:10"
											},
											{
												"body": {
													"nativeSrc": "8243:188:10",
													"nodeType": "YulBlock",
													"src": "8243:188:10",
													"statements": [
														{
															"nativeSrc": "8253:26:10",
															"nodeType": "YulAssignment",
															"src": "8253:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8265:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8265:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8276:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8276:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8261:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8261:3:10"
																},
																"nativeSrc": "8261:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8261:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8253:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8253:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8295:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8295:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "8306:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8306:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8288:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8288:6:10"
																},
																"nativeSrc": "8288:25:10",
																"nodeType": "YulFunctionCall",
																"src": "8288:25:10"
															},
															"nativeSrc": "8288:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "8288:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8333:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8333:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8344:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8344:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8329:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8329:3:10"
																		},
																		"nativeSrc": "8329:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8329:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "8353:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8353:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8369:3:10",
																								"nodeType": "YulLiteral",
																								"src": "8369:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8374:1:10",
																								"nodeType": "YulLiteral",
																								"src": "8374:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8365:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "8365:3:10"
																						},
																						"nativeSrc": "8365:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "8365:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8378:1:10",
																						"nodeType": "YulLiteral",
																						"src": "8378:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8361:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8361:3:10"
																				},
																				"nativeSrc": "8361:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8361:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8349:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8349:3:10"
																		},
																		"nativeSrc": "8349:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8349:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8322:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8322:6:10"
																},
																"nativeSrc": "8322:60:10",
																"nodeType": "YulFunctionCall",
																"src": "8322:60:10"
															},
															"nativeSrc": "8322:60:10",
															"nodeType": "YulExpressionStatement",
															"src": "8322:60:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8402:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8402:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8413:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8413:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8398:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8398:3:10"
																		},
																		"nativeSrc": "8398:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8398:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8418:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8418:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8391:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8391:6:10"
																},
																"nativeSrc": "8391:34:10",
																"nodeType": "YulFunctionCall",
																"src": "8391:34:10"
															},
															"nativeSrc": "8391:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "8391:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_payable_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8078:353:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8196:9:10",
														"nodeType": "YulTypedName",
														"src": "8196:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8207:6:10",
														"nodeType": "YulTypedName",
														"src": "8207:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8215:6:10",
														"nodeType": "YulTypedName",
														"src": "8215:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8223:6:10",
														"nodeType": "YulTypedName",
														"src": "8223:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8234:4:10",
														"nodeType": "YulTypedName",
														"src": "8234:4:10",
														"type": ""
													}
												],
												"src": "8078:353:10"
											},
											{
												"body": {
													"nativeSrc": "8593:214:10",
													"nodeType": "YulBlock",
													"src": "8593:214:10",
													"statements": [
														{
															"nativeSrc": "8603:26:10",
															"nodeType": "YulAssignment",
															"src": "8603:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8615:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8615:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8626:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8626:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8611:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8611:3:10"
																},
																"nativeSrc": "8611:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8611:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8603:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8603:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8645:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8645:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8660:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8660:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8676:3:10",
																								"nodeType": "YulLiteral",
																								"src": "8676:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8681:1:10",
																								"nodeType": "YulLiteral",
																								"src": "8681:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8672:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "8672:3:10"
																						},
																						"nativeSrc": "8672:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "8672:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8685:1:10",
																						"nodeType": "YulLiteral",
																						"src": "8685:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8668:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8668:3:10"
																				},
																				"nativeSrc": "8668:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8668:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8656:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8656:3:10"
																		},
																		"nativeSrc": "8656:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8656:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8638:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8638:6:10"
																},
																"nativeSrc": "8638:51:10",
																"nodeType": "YulFunctionCall",
																"src": "8638:51:10"
															},
															"nativeSrc": "8638:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "8638:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8709:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8709:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8720:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8720:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8705:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8705:3:10"
																		},
																		"nativeSrc": "8705:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8705:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8725:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8725:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8698:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8698:6:10"
																},
																"nativeSrc": "8698:34:10",
																"nodeType": "YulFunctionCall",
																"src": "8698:34:10"
															},
															"nativeSrc": "8698:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "8698:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8752:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8752:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8763:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8763:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8748:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8748:3:10"
																		},
																		"nativeSrc": "8748:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8748:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "8772:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8772:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8788:3:10",
																								"nodeType": "YulLiteral",
																								"src": "8788:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8793:1:10",
																								"nodeType": "YulLiteral",
																								"src": "8793:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8784:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "8784:3:10"
																						},
																						"nativeSrc": "8784:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "8784:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8797:1:10",
																						"nodeType": "YulLiteral",
																						"src": "8797:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8780:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8780:3:10"
																				},
																				"nativeSrc": "8780:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8780:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8768:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8768:3:10"
																		},
																		"nativeSrc": "8768:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8768:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8741:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8741:6:10"
																},
																"nativeSrc": "8741:60:10",
																"nodeType": "YulFunctionCall",
																"src": "8741:60:10"
															},
															"nativeSrc": "8741:60:10",
															"nodeType": "YulExpressionStatement",
															"src": "8741:60:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "8436:371:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8546:9:10",
														"nodeType": "YulTypedName",
														"src": "8546:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8557:6:10",
														"nodeType": "YulTypedName",
														"src": "8557:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8565:6:10",
														"nodeType": "YulTypedName",
														"src": "8565:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8573:6:10",
														"nodeType": "YulTypedName",
														"src": "8573:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8584:4:10",
														"nodeType": "YulTypedName",
														"src": "8584:4:10",
														"type": ""
													}
												],
												"src": "8436:371:10"
											},
											{
												"body": {
													"nativeSrc": "9004:271:10",
													"nodeType": "YulBlock",
													"src": "9004:271:10",
													"statements": [
														{
															"nativeSrc": "9014:27:10",
															"nodeType": "YulAssignment",
															"src": "9014:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9026:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9026:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9037:3:10",
																		"nodeType": "YulLiteral",
																		"src": "9037:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9022:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9022:3:10"
																},
																"nativeSrc": "9022:19:10",
																"nodeType": "YulFunctionCall",
																"src": "9022:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9014:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9014:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9057:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9057:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9072:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9072:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9088:3:10",
																								"nodeType": "YulLiteral",
																								"src": "9088:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9093:1:10",
																								"nodeType": "YulLiteral",
																								"src": "9093:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9084:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "9084:3:10"
																						},
																						"nativeSrc": "9084:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "9084:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9097:1:10",
																						"nodeType": "YulLiteral",
																						"src": "9097:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9080:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9080:3:10"
																				},
																				"nativeSrc": "9080:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9080:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9068:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9068:3:10"
																		},
																		"nativeSrc": "9068:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9068:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9050:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9050:6:10"
																},
																"nativeSrc": "9050:51:10",
																"nodeType": "YulFunctionCall",
																"src": "9050:51:10"
															},
															"nativeSrc": "9050:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "9050:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9121:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9121:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9132:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9132:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9117:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9117:3:10"
																		},
																		"nativeSrc": "9117:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9117:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "9137:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9137:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9110:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9110:6:10"
																},
																"nativeSrc": "9110:34:10",
																"nodeType": "YulFunctionCall",
																"src": "9110:34:10"
															},
															"nativeSrc": "9110:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "9110:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9164:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9164:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9175:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9175:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9160:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9160:3:10"
																		},
																		"nativeSrc": "9160:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9160:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "9184:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9184:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9200:3:10",
																								"nodeType": "YulLiteral",
																								"src": "9200:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9205:1:10",
																								"nodeType": "YulLiteral",
																								"src": "9205:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9196:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "9196:3:10"
																						},
																						"nativeSrc": "9196:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "9196:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9209:1:10",
																						"nodeType": "YulLiteral",
																						"src": "9209:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9192:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9192:3:10"
																				},
																				"nativeSrc": "9192:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9192:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9180:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9180:3:10"
																		},
																		"nativeSrc": "9180:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9180:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9153:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9153:6:10"
																},
																"nativeSrc": "9153:60:10",
																"nodeType": "YulFunctionCall",
																"src": "9153:60:10"
															},
															"nativeSrc": "9153:60:10",
															"nodeType": "YulExpressionStatement",
															"src": "9153:60:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9233:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9233:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9244:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9244:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9229:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9229:3:10"
																		},
																		"nativeSrc": "9229:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9229:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "9253:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9253:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9261:6:10",
																				"nodeType": "YulLiteral",
																				"src": "9261:6:10",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9249:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9249:3:10"
																		},
																		"nativeSrc": "9249:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9249:19:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9222:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9222:6:10"
																},
																"nativeSrc": "9222:47:10",
																"nodeType": "YulFunctionCall",
																"src": "9222:47:10"
															},
															"nativeSrc": "9222:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "9222:47:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address_t_rational_0_by_1__to_t_address_t_uint256_t_address_t_uint16__fromStack_reversed",
												"nativeSrc": "8812:463:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8949:9:10",
														"nodeType": "YulTypedName",
														"src": "8949:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8960:6:10",
														"nodeType": "YulTypedName",
														"src": "8960:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8968:6:10",
														"nodeType": "YulTypedName",
														"src": "8968:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8976:6:10",
														"nodeType": "YulTypedName",
														"src": "8976:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8984:6:10",
														"nodeType": "YulTypedName",
														"src": "8984:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8995:4:10",
														"nodeType": "YulTypedName",
														"src": "8995:4:10",
														"type": ""
													}
												],
												"src": "8812:463:10"
											},
											{
												"body": {
													"nativeSrc": "9339:120:10",
													"nodeType": "YulBlock",
													"src": "9339:120:10",
													"statements": [
														{
															"nativeSrc": "9349:22:10",
															"nodeType": "YulAssignment",
															"src": "9349:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9364:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9364:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9358:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9358:5:10"
																},
																"nativeSrc": "9358:13:10",
																"nodeType": "YulFunctionCall",
																"src": "9358:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9349:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9349:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9437:16:10",
																"nodeType": "YulBlock",
																"src": "9437:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9446:1:10",
																					"nodeType": "YulLiteral",
																					"src": "9446:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9449:1:10",
																					"nodeType": "YulLiteral",
																					"src": "9449:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9439:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9439:6:10"
																			},
																			"nativeSrc": "9439:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9439:12:10"
																		},
																		"nativeSrc": "9439:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9439:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9393:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "9393:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9404:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "9404:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9411:22:10",
																						"nodeType": "YulLiteral",
																						"src": "9411:22:10",
																						"type": "",
																						"value": "0xffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "9400:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9400:3:10"
																				},
																				"nativeSrc": "9400:34:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9400:34:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9390:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "9390:2:10"
																		},
																		"nativeSrc": "9390:45:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9390:45:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9383:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9383:6:10"
																},
																"nativeSrc": "9383:53:10",
																"nodeType": "YulFunctionCall",
																"src": "9383:53:10"
															},
															"nativeSrc": "9380:73:10",
															"nodeType": "YulIf",
															"src": "9380:73:10"
														}
													]
												},
												"name": "abi_decode_uint80_fromMemory",
												"nativeSrc": "9280:179:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9318:6:10",
														"nodeType": "YulTypedName",
														"src": "9318:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9329:5:10",
														"nodeType": "YulTypedName",
														"src": "9329:5:10",
														"type": ""
													}
												],
												"src": "9280:179:10"
											},
											{
												"body": {
													"nativeSrc": "9610:425:10",
													"nodeType": "YulBlock",
													"src": "9610:425:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "9657:16:10",
																"nodeType": "YulBlock",
																"src": "9657:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9666:1:10",
																					"nodeType": "YulLiteral",
																					"src": "9666:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9669:1:10",
																					"nodeType": "YulLiteral",
																					"src": "9669:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9659:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9659:6:10"
																			},
																			"nativeSrc": "9659:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9659:12:10"
																		},
																		"nativeSrc": "9659:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9659:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9631:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9631:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9640:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9640:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9627:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9627:3:10"
																		},
																		"nativeSrc": "9627:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9627:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9652:3:10",
																		"nodeType": "YulLiteral",
																		"src": "9652:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9623:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9623:3:10"
																},
																"nativeSrc": "9623:33:10",
																"nodeType": "YulFunctionCall",
																"src": "9623:33:10"
															},
															"nativeSrc": "9620:53:10",
															"nodeType": "YulIf",
															"src": "9620:53:10"
														},
														{
															"nativeSrc": "9682:49:10",
															"nodeType": "YulAssignment",
															"src": "9682:49:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9721:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9721:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nativeSrc": "9692:28:10",
																	"nodeType": "YulIdentifier",
																	"src": "9692:28:10"
																},
																"nativeSrc": "9692:39:10",
																"nodeType": "YulFunctionCall",
																"src": "9692:39:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9682:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9682:6:10"
																}
															]
														},
														{
															"nativeSrc": "9740:35:10",
															"nodeType": "YulAssignment",
															"src": "9740:35:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9760:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9760:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9771:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9771:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9756:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9756:3:10"
																		},
																		"nativeSrc": "9756:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9756:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9750:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9750:5:10"
																},
																"nativeSrc": "9750:25:10",
																"nodeType": "YulFunctionCall",
																"src": "9750:25:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "9740:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9740:6:10"
																}
															]
														},
														{
															"nativeSrc": "9784:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "9784:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "9797:1:10",
																"nodeType": "YulLiteral",
																"src": "9797:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "9788:5:10",
																	"nodeType": "YulTypedName",
																	"src": "9788:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9807:34:10",
															"nodeType": "YulAssignment",
															"src": "9807:34:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9826:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9826:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9837:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9837:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9822:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9822:3:10"
																		},
																		"nativeSrc": "9822:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9822:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9816:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9816:5:10"
																},
																"nativeSrc": "9816:25:10",
																"nodeType": "YulFunctionCall",
																"src": "9816:25:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9807:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9807:5:10"
																}
															]
														},
														{
															"nativeSrc": "9850:15:10",
															"nodeType": "YulAssignment",
															"src": "9850:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "9860:5:10",
																"nodeType": "YulIdentifier",
																"src": "9860:5:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "9850:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9850:6:10"
																}
															]
														},
														{
															"nativeSrc": "9874:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "9874:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "9889:1:10",
																"nodeType": "YulLiteral",
																"src": "9889:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "9878:7:10",
																	"nodeType": "YulTypedName",
																	"src": "9878:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9899:36:10",
															"nodeType": "YulAssignment",
															"src": "9899:36:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9920:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9920:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9931:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9931:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9916:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9916:3:10"
																		},
																		"nativeSrc": "9916:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9916:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9910:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9910:5:10"
																},
																"nativeSrc": "9910:25:10",
																"nodeType": "YulFunctionCall",
																"src": "9910:25:10"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "9899:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "9899:7:10"
																}
															]
														},
														{
															"nativeSrc": "9944:17:10",
															"nodeType": "YulAssignment",
															"src": "9944:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "9954:7:10",
																"nodeType": "YulIdentifier",
																"src": "9954:7:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "9944:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9944:6:10"
																}
															]
														},
														{
															"nativeSrc": "9970:59:10",
															"nodeType": "YulAssignment",
															"src": "9970:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10013:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10013:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10024:3:10",
																				"nodeType": "YulLiteral",
																				"src": "10024:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10009:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10009:3:10"
																		},
																		"nativeSrc": "10009:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10009:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nativeSrc": "9980:28:10",
																	"nodeType": "YulIdentifier",
																	"src": "9980:28:10"
																},
																"nativeSrc": "9980:49:10",
																"nodeType": "YulFunctionCall",
																"src": "9980:49:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "9970:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9970:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "9464:571:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9544:9:10",
														"nodeType": "YulTypedName",
														"src": "9544:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9555:7:10",
														"nodeType": "YulTypedName",
														"src": "9555:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9567:6:10",
														"nodeType": "YulTypedName",
														"src": "9567:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9575:6:10",
														"nodeType": "YulTypedName",
														"src": "9575:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9583:6:10",
														"nodeType": "YulTypedName",
														"src": "9583:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9591:6:10",
														"nodeType": "YulTypedName",
														"src": "9591:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9599:6:10",
														"nodeType": "YulTypedName",
														"src": "9599:6:10",
														"type": ""
													}
												],
												"src": "9464:571:10"
											},
											{
												"body": {
													"nativeSrc": "10086:171:10",
													"nodeType": "YulBlock",
													"src": "10086:171:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "10117:111:10",
																"nodeType": "YulBlock",
																"src": "10117:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10138:1:10",
																					"nodeType": "YulLiteral",
																					"src": "10138:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10145:3:10",
																							"nodeType": "YulLiteral",
																							"src": "10145:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10150:10:10",
																							"nodeType": "YulLiteral",
																							"src": "10150:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "10141:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "10141:3:10"
																					},
																					"nativeSrc": "10141:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "10141:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10131:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10131:6:10"
																			},
																			"nativeSrc": "10131:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10131:31:10"
																		},
																		"nativeSrc": "10131:31:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10131:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10182:1:10",
																					"nodeType": "YulLiteral",
																					"src": "10182:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10185:4:10",
																					"nodeType": "YulLiteral",
																					"src": "10185:4:10",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10175:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10175:6:10"
																			},
																			"nativeSrc": "10175:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10175:15:10"
																		},
																		"nativeSrc": "10175:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10175:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10210:1:10",
																					"nodeType": "YulLiteral",
																					"src": "10210:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10213:4:10",
																					"nodeType": "YulLiteral",
																					"src": "10213:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10203:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10203:6:10"
																			},
																			"nativeSrc": "10203:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10203:15:10"
																		},
																		"nativeSrc": "10203:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10203:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10106:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10106:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10099:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10099:6:10"
																},
																"nativeSrc": "10099:9:10",
																"nodeType": "YulFunctionCall",
																"src": "10099:9:10"
															},
															"nativeSrc": "10096:132:10",
															"nodeType": "YulIf",
															"src": "10096:132:10"
														},
														{
															"nativeSrc": "10237:14:10",
															"nodeType": "YulAssignment",
															"src": "10237:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10246:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10246:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10249:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10249:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10242:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10242:3:10"
																},
																"nativeSrc": "10242:9:10",
																"nodeType": "YulFunctionCall",
																"src": "10242:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10237:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "10237:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10040:217:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10071:1:10",
														"nodeType": "YulTypedName",
														"src": "10071:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10074:1:10",
														"nodeType": "YulTypedName",
														"src": "10074:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10080:1:10",
														"nodeType": "YulTypedName",
														"src": "10080:1:10",
														"type": ""
													}
												],
												"src": "10040:217:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_payable_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_1, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), 64)\n        let length := mload(value1)\n        mstore(add(headStart, 64), length)\n        mcopy(add(headStart, 96), add(value1, 32), length)\n        mstore(add(add(headStart, length), 96), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 96)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IPool_$638__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1494__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_c8fc0753689749684a9e551425bc1a5c3140528f7a45ea255ec00e51d97963b5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Not a DAO member\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Already voted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_36ba02d776fd732ac627a72d2a4bcd896afdeadba8694171733d88c6775413e0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Voting period ended\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := mload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_23dd702789a702d582f99b58a434cec47cd541852e1263083521a4179a192189__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Must hold governance tokens to v\")\n        mstore(add(headStart, 96), \"ote\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_70781312560918a61d3b5e274a24dd70cd2d0901f970caf6cb5f94161f7cdb19__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Not enough votes (500 tokens req\")\n        mstore(add(headStart, 96), \"uired)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_58f47ea4e737df2d9cc4764db26c111751884cf0a1856aca9f4c66cadc811e1b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Already executed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_41c4e4fc25bbb0d8878d5705bd166f1c809d1260cb49444e3832f4736f0439e3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Funds still locked\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_59eae394831db960eed2b1204907b57c5e1f65d6dfb40c9a41314d384a8055da__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Insufficient treasury balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_66d1585b1e27cc9397312cfc1f57a2ea0c14475d5f53f4e39e5c98660bad98b3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"ETH price too low\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_address_payable_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_rational_0_by_1__to_t_address_t_uint256_t_address_t_uint16__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), and(value3, 0xffff))\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        let value := 0\n        value := mload(add(headStart, 64))\n        value2 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 96))\n        value3 := value_1\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610110575f3560e01c80636e04ff0d1161009d578063c00d2a8c11610062578063c00d2a8c1461032b578063ca6d56dc14610340578063d0e30db014610133578063f2fde38b1461035f578063f96dae0a1461037e575f80fd5b80636e04ff0d14610287578063715018a6146102b45780638da5cb5b146102c8578063a59a9973146102f8578063a607a8d914610317575f80fd5b806312065fe0116100e357806312065fe0146101ef578063237af3481461020b5780634585e33b1461022a578063688f237b1461024957806368fd2d8014610268575f80fd5b80630121b93f14610114578063013cf08b1461013557806308ae4b0c146101925780630d61b519146101d0575b5f80fd5b34801561011f575f80fd5b5061013361012e366004610d49565b61039d565b005b348015610140575f80fd5b5061015461014f366004610d49565b6105f4565b604080516001600160a01b03909716875260208701959095529385019290925260608401526080830152151560a082015260c0015b60405180910390f35b34801561019d575f80fd5b506101c06101ac366004610d74565b60016020525f908152604090205460ff1681565b6040519015158152602001610189565b3480156101db575f80fd5b506101336101ea366004610d49565b610645565b3480156101fa575f80fd5b50475b604051908152602001610189565b348015610216575f80fd5b50610133610225366004610d96565b6107e7565b348015610235575f80fd5b50610133610244366004610dc0565b6109bd565b348015610254575f80fd5b50610133610263366004610d49565b6109da565b348015610273575f80fd5b50610133610282366004610d49565b610a5f565b348015610292575f80fd5b506102a66102a1366004610dc0565b610ad6565b604051610189929190610e2e565b3480156102bf575f80fd5b50610133610bca565b3480156102d3575f80fd5b505f546001600160a01b03165b6040516001600160a01b039091168152602001610189565b348015610303575f80fd5b506005546102e0906001600160a01b031681565b348015610322575f80fd5b506101fd610bdd565b348015610336575f80fd5b506101fd60065481565b34801561034b575f80fd5b5061013361035a366004610d74565b610c63565b34801561036a575f80fd5b50610133610379366004610d74565b610c91565b348015610389575f80fd5b506003546102e0906001600160a01b031681565b335f9081526001602052604090205460ff166103f35760405162461bcd60e51b815260206004820152601060248201526f2737ba1030902220a79036b2b6b132b960811b60448201526064015b60405180910390fd5b5f6002828154811061040757610407610e6c565b5f91825260208083203384526006600790930201918201905260409091205490915060ff16156104695760405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481d9bdd1959609a1b60448201526064016103ea565b806003015442106104b25760405162461bcd60e51b8152602060048201526013602482015272159bdd1a5b99c81c195c9a5bd908195b991959606a1b60448201526064016103ea565b6003546040516370a0823160e01b81523360048201525f916001600160a01b0316906370a0823190602401602060405180830381865afa1580156104f8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061051c9190610e80565b90505f81116105795760405162461bcd60e51b815260206004820152602360248201527f4d75737420686f6c6420676f7665726e616e636520746f6b656e7320746f20766044820152626f746560e81b60648201526084016103ea565b80826002015f82825461058c9190610eab565b9091555050335f818152600684016020908152604091829020805460ff1916600117905581518681529081019290925281018290527f1abe610cf2bf87e57dcc1181fcf5ac0934e843d8344ab9eed6e86c799f62585e906060015b60405180910390a1505050565b60028181548110610603575f80fd5b5f9182526020909120600790910201805460018201546002830154600384015460048501546005909501546001600160a01b0390941695509193909260ff1686565b5f6002828154811061065957610659610e6c565b905f5260205f2090600702019050681b1ae4d6e2ef500000816002015410156106d35760405162461bcd60e51b815260206004820152602660248201527f4e6f7420656e6f75676820766f746573202835303020746f6b656e732072657160448201526575697265642960d01b60648201526084016103ea565b600581015460ff161561071b5760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e48195e1958dd5d195960821b60448201526064016103ea565b80600401544210156107645760405162461bcd60e51b8152602060048201526012602482015271119d5b991cc81cdd1a5b1b081b1bd8dad95960721b60448201526064016103ea565b60058101805460ff191660019081179091558154908201546040516001600160a01b039092169181156108fc0291905f818181858888f193505050501580156107af573d5f803e3d5ffd5b506040518281527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f9060200160405180910390a15050565b335f9081526001602052604090205460ff166108385760405162461bcd60e51b815260206004820152601060248201526f2737ba1030902220a79036b2b6b132b960811b60448201526064016103ea565b804710156108885760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e742074726561737572792062616c616e636500000060448201526064016103ea565b6105dc610893610bdd565b116108d45760405162461bcd60e51b815260206004820152601160248201527045544820707269636520746f6f206c6f7760781b60448201526064016103ea565b6002805460019081018083555f83815292916108ef91610ec4565b815481106108ff576108ff610e6c565b5f918252602082206007919091020180546001600160a01b0319166001600160a01b0386161781556001810184905560028101919091556006549091506109469042610eab565b6003820155610958426202a300610eab565b600482015560058101805460ff191690556002547f3417b456fad6209c73445d5efd446d686e75e4560f0f50c13b5a5cde976447b49061099a90600190610ec4565b604080519182526001600160a01b038616602083015281018490526060016105e7565b5f6109ca82840184610d49565b90506109d581610645565b505050565b6109e2610cce565b600554604051631a4ca37b60e21b815230600482018190526024820184905260448201526001600160a01b03909116906369328dec906064016020604051808303815f875af1158015610a37573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a5b9190610e80565b5050565b610a67610cce565b60055460405163e8eda9df60e01b815230600482018190526024820184905260448201525f60648201526001600160a01b039091169063e8eda9df906084015f604051808303815f87803b158015610abd575f80fd5b505af1158015610acf573d5f803e3d5ffd5b5050505050565b5f60605f5b600254811015610baf5760028181548110610af857610af8610e6c565b5f91825260209091206005600790920201015460ff16158015610b465750681b1ae4d6e2ef50000060028281548110610b3357610b33610e6c565b905f5260205f2090600702016002015410155b8015610b74575060028181548110610b6057610b60610e6c565b905f5260205f209060070201600401544210155b15610ba757600181604051602001610b8e91815260200190565b6040516020818303038152906040529250925050610bc3565b600101610adb565b505060408051602081019091525f80825291505b9250929050565b610bd2610cce565b610bdb5f610cfa565b565b6004805460408051633fabe5a360e21b815290515f9384936001600160a01b03169263feaf968c928183019260a0928290030181865afa158015610c23573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c479190610ef5565b5050509150506305f5e10081610c5d9190610f43565b91505090565b610c6b610cce565b6001600160a01b03165f908152600160208190526040909120805460ff19169091179055565b610c99610cce565b6001600160a01b038116610cc257604051631e4fbdf760e01b81525f60048201526024016103ea565b610ccb81610cfa565b50565b5f546001600160a01b03163314610bdb5760405163118cdaa760e01b81523360048201526024016103ea565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f60208284031215610d59575f80fd5b5035919050565b6001600160a01b0381168114610ccb575f80fd5b5f60208284031215610d84575f80fd5b8135610d8f81610d60565b9392505050565b5f8060408385031215610da7575f80fd5b8235610db281610d60565b946020939093013593505050565b5f8060208385031215610dd1575f80fd5b823567ffffffffffffffff811115610de7575f80fd5b8301601f81018513610df7575f80fd5b803567ffffffffffffffff811115610e0d575f80fd5b856020828401011115610e1e575f80fd5b6020919091019590945092505050565b8215158152604060208201525f82518060408401528060208501606085015e5f606082850101526060601f19601f8301168401019150509392505050565b634e487b7160e01b5f52603260045260245ffd5b5f60208284031215610e90575f80fd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b80820180821115610ebe57610ebe610e97565b92915050565b81810381811115610ebe57610ebe610e97565b805169ffffffffffffffffffff81168114610ef0575f80fd5b919050565b5f805f805f60a08688031215610f09575f80fd5b610f1286610ed7565b60208701516040880151606089015192975090955093509150610f3760808701610ed7565b90509295509295909350565b5f82610f5d57634e487b7160e01b5f52601260045260245ffd5b50049056fea26469706673582212208a441baef47d9d791131caa698271e20b7d36d467354e63ec0bee1e2716dd86164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x110 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E04FF0D GT PUSH2 0x9D JUMPI DUP1 PUSH4 0xC00D2A8C GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xC00D2A8C EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0xCA6D56DC EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xF96DAE0A EQ PUSH2 0x37E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xA59A9973 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0xA607A8D9 EQ PUSH2 0x317 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12065FE0 GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x237AF348 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x688F237B EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x68FD2D80 EQ PUSH2 0x268 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x121B93F EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x13CF08B EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x8AE4B0C EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0xD61B519 EQ PUSH2 0x1D0 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x133 PUSH2 0x12E CALLDATASIZE PUSH1 0x4 PUSH2 0xD49 JUMP JUMPDEST PUSH2 0x39D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x154 PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0xD49 JUMP JUMPDEST PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x189 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x133 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0xD49 JUMP JUMPDEST PUSH2 0x645 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP SELFBALANCE JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x189 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x216 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x133 PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0xD96 JUMP JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x133 PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC0 JUMP JUMPDEST PUSH2 0x9BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x254 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x133 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0xD49 JUMP JUMPDEST PUSH2 0x9DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x273 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x133 PUSH2 0x282 CALLDATASIZE PUSH1 0x4 PUSH2 0xD49 JUMP JUMPDEST PUSH2 0xA5F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x2A1 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC0 JUMP JUMPDEST PUSH2 0xAD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP3 SWAP2 SWAP1 PUSH2 0xE2E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x133 PUSH2 0xBCA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x189 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x2E0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x322 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0xBDD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x336 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x133 PUSH2 0x35A CALLDATASIZE PUSH1 0x4 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0xC63 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x133 PUSH2 0x379 CALLDATASIZE PUSH1 0x4 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0xC91 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x389 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x2E0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2737BA1030902220A79036B2B6B132B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x407 JUMPI PUSH2 0x407 PUSH2 0xE6C JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x6 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x469 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x105B1C9958591E481D9BDD1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EA JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD TIMESTAMP LT PUSH2 0x4B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x159BDD1A5B99C81C195C9A5BD908195B991959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4F8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x51C SWAP2 SWAP1 PUSH2 0xE80 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x579 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420686F6C6420676F7665726E616E636520746F6B656E7320746F2076 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6F7465 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EA JUMP JUMPDEST DUP1 DUP3 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x58C SWAP2 SWAP1 PUSH2 0xEAB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD DUP7 DUP2 MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x1ABE610CF2BF87E57DCC1181FCF5AC0934E843D8344AB9EED6E86C799F62585E SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x603 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 SWAP1 SWAP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP6 POP SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0xFF AND DUP7 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x659 JUMPI PUSH2 0x659 PUSH2 0xE6C JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH9 0x1B1AE4D6E2EF500000 DUP2 PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820766F746573202835303020746F6B656E7320726571 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x756972656429 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x71B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x105B1C9958591E48195E1958DD5D1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EA JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x119D5B991CC81CDD1A5B1B081B1BD8DAD959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SLOAD SWAP1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7AF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x712AE1383F79AC853F8D882153778E0260EF8F03B504E2866E0593E04D2B291F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x838 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2737BA1030902220A79036B2B6B132B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EA JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x888 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742074726561737572792062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EA JUMP JUMPDEST PUSH2 0x5DC PUSH2 0x893 PUSH2 0xBDD JUMP JUMPDEST GT PUSH2 0x8D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x45544820707269636520746F6F206C6F77 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD DUP1 DUP4 SSTORE PUSH0 DUP4 DUP2 MSTORE SWAP3 SWAP2 PUSH2 0x8EF SWAP2 PUSH2 0xEC4 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x8FF JUMPI PUSH2 0x8FF PUSH2 0xE6C JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x7 SWAP2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x946 SWAP1 TIMESTAMP PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0x958 TIMESTAMP PUSH3 0x2A300 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH32 0x3417B456FAD6209C73445D5EFD446D686E75E4560F0F50C13B5A5CDE976447B4 SWAP1 PUSH2 0x99A SWAP1 PUSH1 0x1 SWAP1 PUSH2 0xEC4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 ADD PUSH2 0x5E7 JUMP JUMPDEST PUSH0 PUSH2 0x9CA DUP3 DUP5 ADD DUP5 PUSH2 0xD49 JUMP JUMPDEST SWAP1 POP PUSH2 0x9D5 DUP2 PUSH2 0x645 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x9E2 PUSH2 0xCCE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1A4CA37B PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x69328DEC SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA37 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA5B SWAP2 SWAP1 PUSH2 0xE80 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA67 PUSH2 0xCCE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE8EDA9DF PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH0 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xE8EDA9DF SWAP1 PUSH1 0x84 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xABD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xACF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xBAF JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xAF8 JUMPI PUSH2 0xAF8 PUSH2 0xE6C JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 PUSH1 0x7 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xB46 JUMPI POP PUSH9 0x1B1AE4D6E2EF500000 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB33 JUMPI PUSH2 0xB33 PUSH2 0xE6C JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x2 ADD SLOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xB74 JUMPI POP PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB60 JUMPI PUSH2 0xB60 PUSH2 0xE6C JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x4 ADD SLOAD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0xBA7 JUMPI PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB8E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP SWAP3 POP POP PUSH2 0xBC3 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xADB JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP1 DUP3 MSTORE SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBD2 PUSH2 0xCCE JUMP JUMPDEST PUSH2 0xBDB PUSH0 PUSH2 0xCFA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP4 DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0xFEAF968C SWAP3 DUP2 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC23 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC47 SWAP2 SWAP1 PUSH2 0xEF5 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH4 0x5F5E100 DUP2 PUSH2 0xC5D SWAP2 SWAP1 PUSH2 0xF43 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xC6B PUSH2 0xCCE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xC99 PUSH2 0xCCE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCC2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3EA JUMP JUMPDEST PUSH2 0xCCB DUP2 PUSH2 0xCFA JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBDB JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3EA JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD59 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCCB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD84 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD8F DUP2 PUSH2 0xD60 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDA7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xDB2 DUP2 PUSH2 0xD60 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDD1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0xDF7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE0D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0xE1E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x60 DUP6 ADD MCOPY PUSH0 PUSH1 0x60 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE90 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xEBE JUMPI PUSH2 0xEBE PUSH2 0xE97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xEBE JUMPI PUSH2 0xEBE PUSH2 0xE97 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xEF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF09 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF12 DUP7 PUSH2 0xED7 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x60 DUP10 ADD MLOAD SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0xF37 PUSH1 0x80 DUP8 ADD PUSH2 0xED7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xF5D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 PREVRANDAO SHL 0xAE DELEGATECALL PUSH30 0x9D791131CAA698271E20B7D36D467354E63EC0BEE1E2716DD86164736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "381:4218:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2382:542;;;;;;;;;;-1:-1:-1;2382:542:9;;;;;:::i;:::-;;:::i;:::-;;752:27;;;;;;;;;;-1:-1:-1;752:27:9;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;560:32:10;;;542:51;;624:2;609:18;;602:34;;;;652:18;;;645:34;;;;710:2;695:18;;688:34;753:3;738:19;;731:35;810:14;803:22;580:3;782:19;;775:51;529:3;514:19;752:27:9;;;;;;;;707:39;;;;;;;;;;-1:-1:-1;707:39:9;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1390:14:10;;1383:22;1365:41;;1353:2;1338:18;707:39:9;1225:187:10;2930:475:9;;;;;;;;;;-1:-1:-1;2930:475:9;;;;;:::i;:::-;;:::i;4500:97::-;;;;;;;;;;-1:-1:-1;4569:21:9;4500:97;;;1563:25:10;;;1551:2;1536:18;4500:97:9;1417:177:10;1666:710:9;;;;;;;;;;-1:-1:-1;1666:710:9;;;;;:::i;:::-;;:::i;3997:172::-;;;;;;;;;;-1:-1:-1;3997:172:9;;;;;:::i;:::-;;:::i;4316:136::-;;;;;;;;;;-1:-1:-1;4316:136:9;;;;;:::i;:::-;;:::i;4175:135::-;;;;;;;;;;-1:-1:-1;4175:135:9;;;;;:::i;:::-;;:::i;3570:421::-;;;;;;;;;;-1:-1:-1;3570:421:9;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2293:101:6:-;;;;;;;;;;;;;:::i;1638:85::-;;;;;;;;;;-1:-1:-1;1684:7:6;1710:6;-1:-1:-1;;;;;1710:6:6;1638:85;;;-1:-1:-1;;;;;3236:32:10;;;3218:51;;3206:2;3191:18;1638:85:6;3072:203:10;866:24:9;;;;;;;;;;-1:-1:-1;866:24:9;;;;-1:-1:-1;;;;;866:24:9;;;3411:153;;;;;;;;;;;;;:::i;896:39::-;;;;;;;;;;;;;;;;1569:91;;;;;;;;;;-1:-1:-1;1569:91:9;;;;;:::i;:::-;;:::i;2543:215:6:-;;;;;;;;;;-1:-1:-1;2543:215:6;;;;;:::i;:::-;;:::i;785:29:9:-;;;;;;;;;;-1:-1:-1;785:29:9;;;;-1:-1:-1;;;;;785:29:9;;;2382:542;1513:10;1505:19;;;;:7;:19;;;;;;;;1497:48;;;;-1:-1:-1;;;1497:48:9;;3926:2:10;1497:48:9;;;3908:21:10;3965:2;3945:18;;;3938:30;-1:-1:-1;;;3984:18:10;;;3977:46;4040:18;;1497:48:9;;;;;;;;;2441:25:::1;2469:9;2479:10;2469:21;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;2524:10:::1;2509:26:::0;;:14:::1;2469:21;::::0;;::::1;;2509:14:::0;;::::1;:26:::0;;;;;;;2469:21;;-1:-1:-1;2509:26:9::1;;2508:27;2500:53;;;::::0;-1:-1:-1;;;2500:53:9;;4403:2:10;2500:53:9::1;::::0;::::1;4385:21:10::0;4442:2;4422:18;;;4415:30;-1:-1:-1;;;4461:18:10;;;4454:43;4514:18;;2500:53:9::1;4201:337:10::0;2500:53:9::1;2589:8;:16;;;2571:15;:34;2563:66;;;::::0;-1:-1:-1;;;2563:66:9;;4745:2:10;2563:66:9::1;::::0;::::1;4727:21:10::0;4784:2;4764:18;;;4757:30;-1:-1:-1;;;4803:18:10;;;4796:49;4862:18;;2563:66:9::1;4543:343:10::0;2563:66:9::1;2663:15;::::0;:37:::1;::::0;-1:-1:-1;;;2663:37:9;;2689:10:::1;2663:37;::::0;::::1;3218:51:10::0;2640:20:9::1;::::0;-1:-1:-1;;;;;2663:15:9::1;::::0;:25:::1;::::0;3191:18:10;;2663:37:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2640:60;;2733:1;2718:12;:16;2710:64;;;::::0;-1:-1:-1;;;2710:64:9;;5328:2:10;2710:64:9::1;::::0;::::1;5310:21:10::0;5367:2;5347:18;;;5340:30;5406:34;5386:18;;;5379:62;-1:-1:-1;;;5457:18:10;;;5450:33;5500:19;;2710:64:9::1;5126:399:10::0;2710:64:9::1;2803:12;2785:8;:14;;;:30;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;2840:10:9::1;2825:26;::::0;;;:14:::1;::::0;::::1;:26;::::0;;;;;;;;:33;;-1:-1:-1;;2825:33:9::1;2854:4;2825:33;::::0;;2874:43;;5994:25:10;;;6035:18;;;6028:60;;;;6104:18;;6097:34;;;2874:43:9::1;::::0;5982:2:10;5967:18;2874:43:9::1;;;;;;;;2431:493;;2382:542:::0;:::o;752:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;752:27:9;;;;-1:-1:-1;752:27:9;;;;;;;:::o;2930:475::-;2989:25;3017:9;3027:10;3017:21;;;;;;;;:::i;:::-;;;;;;;;;;;2989:49;;3074:12;3056:8;:14;;;:30;;3048:81;;;;-1:-1:-1;;;3048:81:9;;6344:2:10;3048:81:9;;;6326:21:10;6383:2;6363:18;;;6356:30;6422:34;6402:18;;;6395:62;-1:-1:-1;;;6473:18:10;;;6466:36;6519:19;;3048:81:9;6142:402:10;3048:81:9;3148:17;;;;;;3147:18;3139:47;;;;-1:-1:-1;;;3139:47:9;;6751:2:10;3139:47:9;;;6733:21:10;6790:2;6770:18;;;6763:30;-1:-1:-1;;;6809:18:10;;;6802:46;6865:18;;3139:47:9;6549:340:10;3139:47:9;3223:8;:19;;;3204:15;:38;;3196:69;;;;-1:-1:-1;;;3196:69:9;;7096:2:10;3196:69:9;;;7078:21:10;7135:2;7115:18;;;7108:30;-1:-1:-1;;;7154:18:10;;;7147:48;7212:18;;3196:69:9;6894:342:10;3196:69:9;3276:17;;;:24;;-1:-1:-1;;3276:24:9;3296:4;3276:24;;;;;;3310:18;;3338:15;;;;3310:44;;-1:-1:-1;;;;;3310:18:9;;;;:44;;;;;3338:15;3276:17;3310:44;3276:17;3310:44;3338:15;3310:18;:44;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3370:28:9;;1563:25:10;;;3370:28:9;;1551:2:10;1536:18;3370:28:9;;;;;;;2979:426;2930:475;:::o;1666:710::-;1513:10;1505:19;;;;:7;:19;;;;;;;;1497:48;;;;-1:-1:-1;;;1497:48:9;;3926:2:10;1497:48:9;;;3908:21:10;3965:2;3945:18;;;3938:30;-1:-1:-1;;;3984:18:10;;;3977:46;4040:18;;1497:48:9;3724:340:10;1497:48:9;1794:6:::1;1769:21;:31;;1761:73;;;::::0;-1:-1:-1;;;1761:73:9;;7443:2:10;1761:73:9::1;::::0;::::1;7425:21:10::0;7482:2;7462:18;;;7455:30;7521:31;7501:18;;;7494:59;7570:18;;1761:73:9::1;7241:353:10::0;1761:73:9::1;1868:4;1852:13;:11;:13::i;:::-;:20;1844:50;;;::::0;-1:-1:-1;;;1844:50:9;;7801:2:10;1844:50:9::1;::::0;::::1;7783:21:10::0;7840:2;7820:18;;;7813:30;-1:-1:-1;;;7859:18:10;;;7852:47;7916:18;;1844:50:9::1;7599:341:10::0;1844:50:9::1;1905:9;:16:::0;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;1905:16:9;;;-1:-1:-1;1905:9:9;1972:20:::1;::::0;::::1;:::i;:::-;1962:31;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;;2003:33:::0;;-1:-1:-1;;;;;;2003:33:9::1;-1:-1:-1::0;;;;;2003:33:9;::::1;;::::0;;-1:-1:-1;2046:18:9;::::1;:27:::0;;;2083:17:::1;::::0;::::1;:21:::0;;;;2154:15:::1;::::0;1962:31;;-1:-1:-1;2136:33:9::1;::::0;:15:::1;:33;:::i;:::-;2114:19;::::0;::::1;:55:::0;2204:26:::1;:15;2222:8;2204:26;:::i;:::-;2179:22;::::0;::::1;:51:::0;2269:20:::1;::::0;::::1;:28:::0;;-1:-1:-1;;2269:28:9::1;::::0;;2329:9:::1;:16:::0;2313:56:::1;::::0;2329:20:::1;::::0;2269:28;;2329:20:::1;:::i;:::-;2313:56;::::0;;5994:25:10;;;-1:-1:-1;;;;;6055:32:10;;6050:2;6035:18;;6028:60;6104:18;;6097:34;;;5982:2;5967:18;2313:56:9::1;5792:345:10::0;3997:172:9;4076:15;4094:31;;;;4105:11;4094:31;:::i;:::-;4076:49;;4135:27;4151:10;4135:15;:27::i;:::-;4066:103;3997:172;;:::o;4316:136::-;1531:13:6;:11;:13::i;:::-;4387:11:9::1;::::0;:58:::1;::::0;-1:-1:-1;;;4387:58:9;;4416:4:::1;4387:58;::::0;::::1;8638:51:10::0;;;8705:18;;;8698:34;;;8748:18;;;8741:60;-1:-1:-1;;;;;4387:11:9;;::::1;::::0;:20:::1;::::0;8611:18:10;;4387:58:9::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4316:136:::0;:::o;4175:135::-;1531:13:6;:11;:13::i;:::-;4243:11:9::1;::::0;:60:::1;::::0;-1:-1:-1;;;4243:60:9;;4271:4:::1;4243:60;::::0;::::1;9050:51:10::0;;;9117:18;;;9110:34;;;9160:18;;;9153:60;4243:11:9::1;9229:18:10::0;;;9222:47;-1:-1:-1;;;;;4243:11:9;;::::1;::::0;:19:::1;::::0;9022::10;;4243:60:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4175:135:::0;:::o;3570:421::-;3655:17;3674:12;3721:6;3716:241;3737:9;:16;3733:20;;3716:241;;;3779:9;3789:1;3779:12;;;;;;;;:::i;:::-;;;;;;;;;:21;:12;;;;;:21;;;;3778:22;:60;;;;;3826:12;3804:9;3814:1;3804:12;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;:34;;3778:60;:106;;;;;3861:9;3871:1;3861:12;;;;;;;;:::i;:::-;;;;;;;;;;;:23;;;3842:15;:42;;3778:106;3774:173;;;3912:4;3929:1;3918:13;;;;;;1563:25:10;;1551:2;1536:18;;1417:177;3918:13:9;;;;;;;;;;;;;3904:28;;;;;;;3774:173;3755:3;;3716:241;;;-1:-1:-1;;3966:18:9;;;;;;;;;3974:5;3966:18;;;3974:5;-1:-1:-1;3570:421:9;;;;;;:::o;2293:101:6:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3411:153:9:-;3496:9;;;:27;;;-1:-1:-1;;;3496:27:9;;;;3455:7;;;;-1:-1:-1;;;;;3496:9:9;;:25;;:27;;;;;;;;;;;:9;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3474:49;;;;;;3554:3;3545:5;3540:17;;;;:::i;:::-;3533:24;;;3411:153;:::o;1569:91::-;1531:13:6;:11;:13::i;:::-;-1:-1:-1;;;;;1631:15:9::1;;::::0;;;1649:4:::1;1631:15;::::0;;;;;;;:22;;-1:-1:-1;;1631:22:9::1;::::0;;::::1;::::0;;1569:91::o;2543:215:6:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:6;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:6;;2700:1:::1;2672:31;::::0;::::1;3218:51:10::0;3191:18;;2672:31:6::1;3072:203:10::0;2623:91:6::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:6;735:10:8;1855:23:6;1851:101;;1901:40;;-1:-1:-1;;;1901:40:6;;735:10:8;1901:40:6;;;3218:51:10;3191:18;;1901:40:6;3072:203:10;2912:187:6;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:6;;;-1:-1:-1;;;;;;3020:17:6;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:226:10:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;187:23:10;;14:226;-1:-1:-1;14:226:10:o;837:131::-;-1:-1:-1;;;;;912:31:10;;902:42;;892:70;;958:1;955;948:12;973:247;1032:6;1085:2;1073:9;1064:7;1060:23;1056:32;1053:52;;;1101:1;1098;1091:12;1053:52;1140:9;1127:23;1159:31;1184:5;1159:31;:::i;:::-;1209:5;973:247;-1:-1:-1;;;973:247:10:o;1599:375::-;1675:6;1683;1736:2;1724:9;1715:7;1711:23;1707:32;1704:52;;;1752:1;1749;1742:12;1704:52;1791:9;1778:23;1810:31;1835:5;1810:31;:::i;:::-;1860:5;1938:2;1923:18;;;;1910:32;;-1:-1:-1;;;1599:375:10:o;1979:586::-;2049:6;2057;2110:2;2098:9;2089:7;2085:23;2081:32;2078:52;;;2126:1;2123;2116:12;2078:52;2166:9;2153:23;2199:18;2191:6;2188:30;2185:50;;;2231:1;2228;2221:12;2185:50;2254:22;;2307:4;2299:13;;2295:27;-1:-1:-1;2285:55:10;;2336:1;2333;2326:12;2285:55;2376:2;2363:16;2402:18;2394:6;2391:30;2388:50;;;2434:1;2431;2424:12;2388:50;2479:7;2474:2;2465:6;2461:2;2457:15;2453:24;2450:37;2447:57;;;2500:1;2497;2490:12;2447:57;2531:2;2523:11;;;;;2553:6;;-1:-1:-1;1979:586:10;-1:-1:-1;;;1979:586:10:o;2570:497::-;2753:6;2746:14;2739:22;2728:9;2721:41;2798:2;2793;2782:9;2778:18;2771:30;2702:4;2830:6;2824:13;2873:6;2868:2;2857:9;2853:18;2846:34;2932:6;2927:2;2919:6;2915:15;2910:2;2899:9;2895:18;2889:50;2988:1;2983:2;2974:6;2963:9;2959:22;2955:31;2948:42;3058:2;3051;3047:7;3042:2;3034:6;3030:15;3026:29;3015:9;3011:45;3007:54;2999:62;;;2570:497;;;;;:::o;4069:127::-;4130:10;4125:3;4121:20;4118:1;4111:31;4161:4;4158:1;4151:15;4185:4;4182:1;4175:15;4891:230;4961:6;5014:2;5002:9;4993:7;4989:23;4985:32;4982:52;;;5030:1;5027;5020:12;4982:52;-1:-1:-1;5075:16:10;;4891:230;-1:-1:-1;4891:230:10:o;5530:127::-;5591:10;5586:3;5582:20;5579:1;5572:31;5622:4;5619:1;5612:15;5646:4;5643:1;5636:15;5662:125;5727:9;;;5748:10;;;5745:36;;;5761:18;;:::i;:::-;5662:125;;;;:::o;7945:128::-;8012:9;;;8033:11;;;8030:37;;;8047:18;;:::i;9280:179::-;9358:13;;9411:22;9400:34;;9390:45;;9380:73;;9449:1;9446;9439:12;9380:73;9280:179;;;:::o;9464:571::-;9567:6;9575;9583;9591;9599;9652:3;9640:9;9631:7;9627:23;9623:33;9620:53;;;9669:1;9666;9659:12;9620:53;9692:39;9721:9;9692:39;:::i;:::-;9771:2;9756:18;;9750:25;9837:2;9822:18;;9816:25;9931:2;9916:18;;9910:25;9682:49;;-1:-1:-1;9750:25:10;;-1:-1:-1;9816:25:10;-1:-1:-1;9910:25:10;-1:-1:-1;9980:49:10;10024:3;10009:19;;9980:49;:::i;:::-;9970:59;;9464:571;;;;;;;;:::o;10040:217::-;10080:1;10106;10096:132;;10150:10;10145:3;10141:20;10138:1;10131:31;10185:4;10182:1;10175:15;10213:4;10210:1;10203:15;10096:132;-1:-1:-1;10242:9:10;;10040:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "798400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addMember(address)": "26820",
								"checkUpkeep(bytes)": "infinite",
								"deposit()": "161",
								"depositToAave(uint256)": "infinite",
								"executeProposal(uint256)": "infinite",
								"getBalance()": "205",
								"getETHPrice()": "infinite",
								"governanceToken()": "2446",
								"lendingPool()": "2425",
								"members(address)": "2590",
								"minVoteDuration()": "2316",
								"owner()": "2385",
								"performUpkeep(bytes)": "infinite",
								"proposals(uint256)": "15337",
								"proposeFunding(address,uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"vote(uint256)": "infinite",
								"withdrawFromAave(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 381,
									"end": 4599,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 381,
									"end": 4599,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 381,
									"end": 4599,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 929,
									"end": 935,
									"name": "PUSH",
									"source": 9,
									"value": "15180"
								},
								{
									"begin": 896,
									"end": 935,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 896,
									"end": 935,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1132,
									"end": 1459,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1132,
									"end": 1459,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1230,
									"end": 1242,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 811,
									"end": 862,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 784,
									"end": 802,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 784,
									"end": 802,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1254,
									"end": 1269,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1254,
									"end": 1292,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1254,
									"end": 1292,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1254,
									"end": 1292,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1254,
									"end": 1292,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1254,
									"end": 1292,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1254,
									"end": 1292,
									"name": "SWAP7",
									"source": 9
								},
								{
									"begin": 1254,
									"end": 1292,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1254,
									"end": 1292,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1254,
									"end": 1292,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1254,
									"end": 1292,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1254,
									"end": 1292,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1254,
									"end": 1292,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1302,
									"end": 1311,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1302,
									"end": 1343,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1302,
									"end": 1343,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1302,
									"end": 1343,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1302,
									"end": 1343,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1302,
									"end": 1343,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 1302,
									"end": 1343,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1302,
									"end": 1343,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1302,
									"end": 1343,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 1302,
									"end": 1343,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1302,
									"end": 1343,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 1302,
									"end": 1343,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1302,
									"end": 1343,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1302,
									"end": 1343,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1302,
									"end": 1343,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1385,
									"end": 1396,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1385,
									"end": 1414,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1385,
									"end": 1414,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1385,
									"end": 1414,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1385,
									"end": 1414,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1385,
									"end": 1414,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1385,
									"end": 1414,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1385,
									"end": 1414,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1385,
									"end": 1414,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1385,
									"end": 1414,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1385,
									"end": 1414,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1385,
									"end": 1414,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1385,
									"end": 1414,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1385,
									"end": 1414,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1385,
									"end": 1414,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1385,
									"end": 1414,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1424,
									"end": 1445,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1424,
									"end": 1445,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1424,
									"end": 1445,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1424,
									"end": 1445,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 1424,
									"end": 1445,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1424,
									"end": 1445,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1424,
									"end": 1445,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1424,
									"end": 1445,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1424,
									"end": 1445,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1424,
									"end": 1445,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1424,
									"end": 1445,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1424,
									"end": 1445,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 1424,
									"end": 1452,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1424,
									"end": 1452,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1424,
									"end": 1452,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1424,
									"end": 1452,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1424,
									"end": 1452,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1424,
									"end": 1452,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1424,
									"end": 1452,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1424,
									"end": 1452,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 381,
									"end": 4599,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 381,
									"end": 4599,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 6,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 6
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 196,
									"end": 660,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 660,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 293,
									"end": 299,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 307,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 309,
									"end": 315,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 323,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 370,
									"end": 373,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 358,
									"end": 367,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 349,
									"end": 356,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 345,
									"end": 368,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 341,
									"end": 374,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 338,
									"end": 391,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 338,
									"end": 391,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 387,
									"end": 388,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 385,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 377,
									"end": 389,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 338,
									"end": 391,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 440,
									"end": 449,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 410,
									"end": 450,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 410,
									"end": 450,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 410,
									"end": 450,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 400,
									"end": 450,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 400,
									"end": 450,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 469,
									"end": 518,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 514,
									"end": 516,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 503,
									"end": 512,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 499,
									"end": 517,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 469,
									"end": 518,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 469,
									"end": 518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 469,
									"end": 518,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 469,
									"end": 518,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 459,
									"end": 518,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 459,
									"end": 518,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 537,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 582,
									"end": 584,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 571,
									"end": 580,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 567,
									"end": 585,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 537,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 537,
									"end": 586,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 537,
									"end": 586,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 537,
									"end": 586,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 527,
									"end": 586,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 527,
									"end": 586,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 605,
									"end": 654,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 650,
									"end": 652,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 639,
									"end": 648,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 635,
									"end": 653,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 605,
									"end": 654,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 605,
									"end": 654,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 605,
									"end": 654,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 605,
									"end": 654,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 595,
									"end": 654,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 595,
									"end": 654,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 196,
									"end": 660,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 196,
									"end": 660,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 196,
									"end": 660,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 196,
									"end": 660,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 196,
									"end": 660,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 196,
									"end": 660,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 196,
									"end": 660,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 196,
									"end": 660,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 665,
									"end": 868,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 665,
									"end": 868,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 381,
									"end": 4599,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 381,
									"end": 4599,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 381,
									"end": 4599,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 381,
									"end": 4599,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 381,
									"end": 4599,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 381,
									"end": 4599,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 381,
									"end": 4599,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208a441baef47d9d791131caa698271e20b7d36d467354e63ec0bee1e2716dd86164736f6c634300081a0033",
									".code": [
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "6E04FF0D"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "C00D2A8C"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "C00D2A8C"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "CA6D56DC"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "D0E30DB0"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "F96DAE0A"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "6E04FF0D"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "A59A9973"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "A607A8D9"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "12065FE0"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "12065FE0"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "237AF348"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "4585E33B"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "688F237B"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "68FD2D80"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "121B93F"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "13CF08B"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "8AE4B0C"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "D61B519"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 4599,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2382,
											"end": 2924,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2382,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2382,
											"end": 2924,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2382,
											"end": 2924,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2382,
											"end": 2924,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2382,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2382,
											"end": 2924,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2382,
											"end": 2924,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2382,
											"end": 2924,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2382,
											"end": 2924,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2382,
											"end": 2924,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2382,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2382,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2382,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2382,
											"end": 2924,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2382,
											"end": 2924,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2382,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2382,
											"end": 2924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2382,
											"end": 2924,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2382,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2382,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 2382,
											"end": 2924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2382,
											"end": 2924,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2382,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2382,
											"end": 2924,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 752,
											"end": 779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 752,
											"end": 779,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 779,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 752,
											"end": 779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 752,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 752,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 752,
											"end": 779,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 752,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 752,
											"end": 779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 752,
											"end": 779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 752,
											"end": 779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 752,
											"end": 779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 752,
											"end": 779,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 560,
											"end": 592,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 560,
											"end": 592,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 560,
											"end": 592,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 542,
											"end": 593,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 542,
											"end": 593,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 609,
											"end": 627,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 609,
											"end": 627,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 602,
											"end": 636,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 602,
											"end": 636,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 602,
											"end": 636,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 602,
											"end": 636,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 652,
											"end": 670,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 652,
											"end": 670,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 652,
											"end": 670,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 645,
											"end": 679,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 645,
											"end": 679,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 645,
											"end": 679,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 645,
											"end": 679,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 710,
											"end": 712,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 695,
											"end": 713,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 695,
											"end": 713,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 688,
											"end": 722,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 753,
											"end": 756,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 738,
											"end": 757,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 738,
											"end": 757,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 731,
											"end": 766,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 810,
											"end": 824,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 803,
											"end": 825,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 580,
											"end": 583,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 782,
											"end": 801,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 782,
											"end": 801,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 775,
											"end": 826,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 529,
											"end": 532,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 514,
											"end": 533,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 752,
											"end": 779,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 752,
											"end": 779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 752,
											"end": 779,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 707,
											"end": 746,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 707,
											"end": 746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 707,
											"end": 746,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 707,
											"end": 746,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 707,
											"end": 746,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 707,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 707,
											"end": 746,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 707,
											"end": 746,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 746,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 707,
											"end": 746,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 707,
											"end": 746,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 707,
											"end": 746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 707,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 707,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 707,
											"end": 746,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 707,
											"end": 746,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 707,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 707,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 707,
											"end": 746,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 707,
											"end": 746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 707,
											"end": 746,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 707,
											"end": 746,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 707,
											"end": 746,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 707,
											"end": 746,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 707,
											"end": 746,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 707,
											"end": 746,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 707,
											"end": 746,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 707,
											"end": 746,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 707,
											"end": 746,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 707,
											"end": 746,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 707,
											"end": 746,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 707,
											"end": 746,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 707,
											"end": 746,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 707,
											"end": 746,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 707,
											"end": 746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 707,
											"end": 746,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 746,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1390,
											"end": 1404,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1404,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1405,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1365,
											"end": 1406,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1365,
											"end": 1406,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1355,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1338,
											"end": 1356,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 707,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1225,
											"end": 1412,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2930,
											"end": 3405,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2930,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 3405,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 3405,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 3405,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 3405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 2930,
											"end": 3405,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 3405,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 3405,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 3405,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 3405,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 2930,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2930,
											"end": 3405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2930,
											"end": 3405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2930,
											"end": 3405,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 3405,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2930,
											"end": 3405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2930,
											"end": 3405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 3405,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2930,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 3405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2930,
											"end": 3405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4500,
											"end": 4597,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4500,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4500,
											"end": 4597,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4500,
											"end": 4597,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4500,
											"end": 4597,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4500,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 4500,
											"end": 4597,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4500,
											"end": 4597,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4500,
											"end": 4597,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4500,
											"end": 4597,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4500,
											"end": 4597,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 4500,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4569,
											"end": 4590,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 4500,
											"end": 4597,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 4500,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4500,
											"end": 4597,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4500,
											"end": 4597,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1588,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1588,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1588,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1551,
											"end": 1553,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1536,
											"end": 1554,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4500,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1417,
											"end": 1594,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 2376,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1666,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1666,
											"end": 2376,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1666,
											"end": 2376,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1666,
											"end": 2376,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1666,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1666,
											"end": 2376,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1666,
											"end": 2376,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1666,
											"end": 2376,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1666,
											"end": 2376,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1666,
											"end": 2376,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1666,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1666,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1666,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1666,
											"end": 2376,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1666,
											"end": 2376,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1666,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1666,
											"end": 2376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1666,
											"end": 2376,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1666,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1666,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1666,
											"end": 2376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4169,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3997,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4169,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4169,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4169,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 3997,
											"end": 4169,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4169,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4169,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4169,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4169,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 3997,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3997,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 3997,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3997,
											"end": 4169,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4169,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3997,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 3997,
											"end": 4169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4169,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3997,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3997,
											"end": 4169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4452,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4316,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4452,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4452,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4452,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 4316,
											"end": 4452,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4452,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4316,
											"end": 4452,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4452,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4452,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 4316,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4316,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 4316,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 4316,
											"end": 4452,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4452,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4316,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 4316,
											"end": 4452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4452,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 4316,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4316,
											"end": 4452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4175,
											"end": 4310,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 4175,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4175,
											"end": 4310,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4175,
											"end": 4310,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4175,
											"end": 4310,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4175,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 4175,
											"end": 4310,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4175,
											"end": 4310,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4175,
											"end": 4310,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4175,
											"end": 4310,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4175,
											"end": 4310,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 4175,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4175,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 4175,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 4175,
											"end": 4310,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4175,
											"end": 4310,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4175,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 4175,
											"end": 4310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4175,
											"end": 4310,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 4175,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4175,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 4175,
											"end": 4310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 3570,
											"end": 3991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 3570,
											"end": 3991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 3570,
											"end": 3991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3236,
											"end": 3268,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3236,
											"end": 3268,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3236,
											"end": 3268,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3218,
											"end": 3269,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3218,
											"end": 3269,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3206,
											"end": 3208,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 3072,
											"end": 3275,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 866,
											"end": 890,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 866,
											"end": 890,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 866,
											"end": 890,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 866,
											"end": 890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 866,
											"end": 890,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 866,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 866,
											"end": 890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 866,
											"end": 890,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 866,
											"end": 890,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 866,
											"end": 890,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 866,
											"end": 890,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 866,
											"end": 890,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 866,
											"end": 890,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 866,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 866,
											"end": 890,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 866,
											"end": 890,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 866,
											"end": 890,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 866,
											"end": 890,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3411,
											"end": 3564,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 3411,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3411,
											"end": 3564,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3411,
											"end": 3564,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3411,
											"end": 3564,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3411,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 3411,
											"end": 3564,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3411,
											"end": 3564,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3411,
											"end": 3564,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3411,
											"end": 3564,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3411,
											"end": 3564,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 3411,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3411,
											"end": 3564,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3411,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 3411,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 3411,
											"end": 3564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 896,
											"end": 935,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 896,
											"end": 935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 896,
											"end": 935,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 896,
											"end": 935,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 896,
											"end": 935,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 896,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 896,
											"end": 935,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 896,
											"end": 935,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 935,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 896,
											"end": 935,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 896,
											"end": 935,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 896,
											"end": 935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 896,
											"end": 935,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 896,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 896,
											"end": 935,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 896,
											"end": 935,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 896,
											"end": 935,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 896,
											"end": 935,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1660,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1569,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1660,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1660,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1660,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1569,
											"end": 1660,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1660,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1569,
											"end": 1660,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1660,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1660,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1569,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1569,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1569,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 1569,
											"end": 1660,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1660,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1569,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1569,
											"end": 1660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1660,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 1569,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 1569,
											"end": 1660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 785,
											"end": 814,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 785,
											"end": 814,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 785,
											"end": 814,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 785,
											"end": 814,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 785,
											"end": 814,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 785,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 785,
											"end": 814,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 785,
											"end": 814,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 814,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 785,
											"end": 814,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 785,
											"end": 814,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 785,
											"end": 814,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 785,
											"end": 814,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 785,
											"end": 814,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 785,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 785,
											"end": 814,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 785,
											"end": 814,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 785,
											"end": 814,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 785,
											"end": 814,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2382,
											"end": 2924,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 2382,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1513,
											"end": 1523,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1505,
											"end": 1512,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 3928,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 3929,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3965,
											"end": 3967,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 3945,
											"end": 3963,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3945,
											"end": 3963,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3945,
											"end": 3963,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3938,
											"end": 3968,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA1030902220A79036B2B6B132B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3984,
											"end": 4002,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3984,
											"end": 4002,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 4002,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3977,
											"end": 4023,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4040,
											"end": 4058,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4040,
											"end": 4058,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2469,
											"end": 2478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2479,
											"end": 2489,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2490,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2490,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2490,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2490,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2490,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2469,
											"end": 2490,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2490,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2469,
											"end": 2490,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 2469,
											"end": 2490,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2490,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2469,
											"end": 2490,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2469,
											"end": 2490,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2490,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2490,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2469,
											"end": 2490,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2490,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2490,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2534,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2469,
											"end": 2490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2469,
											"end": 2490,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2490,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2490,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2490,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2523,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2523,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2490,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2490,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2509,
											"end": 2535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2509,
											"end": 2535,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2508,
											"end": 2535,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2500,
											"end": 2553,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2500,
											"end": 2553,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2500,
											"end": 2553,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2553,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4403,
											"end": 4405,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2500,
											"end": 2553,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2553,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4385,
											"end": 4406,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4442,
											"end": 4444,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 4422,
											"end": 4440,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4422,
											"end": 4440,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4422,
											"end": 4440,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4415,
											"end": 4445,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E481D9BDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4461,
											"end": 4479,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4461,
											"end": 4479,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4461,
											"end": 4479,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4454,
											"end": 4497,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4514,
											"end": 4532,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4514,
											"end": 4532,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2500,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 4201,
											"end": 4538,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2500,
											"end": 2553,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2500,
											"end": 2553,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2597,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2589,
											"end": 2605,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2605,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2571,
											"end": 2586,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 2571,
											"end": 2605,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 2563,
											"end": 2629,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2563,
											"end": 2629,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2563,
											"end": 2629,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2629,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4745,
											"end": 4747,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2563,
											"end": 2629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2563,
											"end": 2629,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2629,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4727,
											"end": 4748,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4784,
											"end": 4786,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 4764,
											"end": 4782,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4764,
											"end": 4782,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4764,
											"end": 4782,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4757,
											"end": 4787,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "159BDD1A5B99C81C195C9A5BD908195B991959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4803,
											"end": 4821,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4803,
											"end": 4821,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4803,
											"end": 4821,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4845,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4862,
											"end": 4880,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4862,
											"end": 4880,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 4543,
											"end": 4886,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2629,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 2563,
											"end": 2629,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2663,
											"end": 2700,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2663,
											"end": 2700,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2689,
											"end": 2699,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2663,
											"end": 2700,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3218,
											"end": 3269,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2640,
											"end": 2660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2640,
											"end": 2660,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2663,
											"end": 2678,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 2663,
											"end": 2688,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2700,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 2663,
											"end": 2700,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 2663,
											"end": 2700,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2640,
											"end": 2700,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2640,
											"end": 2700,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2718,
											"end": 2730,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2718,
											"end": 2734,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2774,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 2710,
											"end": 2774,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2774,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2710,
											"end": 2774,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2774,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5328,
											"end": 5330,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2710,
											"end": 2774,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2774,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5310,
											"end": 5331,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5367,
											"end": 5369,
											"name": "PUSH",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 5347,
											"end": 5365,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5347,
											"end": 5365,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5347,
											"end": 5365,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5340,
											"end": 5370,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5406,
											"end": 5440,
											"name": "PUSH",
											"source": 10,
											"value": "4D75737420686F6C6420676F7665726E616E636520746F6B656E7320746F2076"
										},
										{
											"begin": 5386,
											"end": 5404,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5386,
											"end": 5404,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5386,
											"end": 5404,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5379,
											"end": 5441,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F7465"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5450,
											"end": 5483,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5500,
											"end": 5519,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 5500,
											"end": 5519,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2774,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 5126,
											"end": 5525,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2774,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 2710,
											"end": 2774,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2803,
											"end": 2815,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2785,
											"end": 2793,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2785,
											"end": 2799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2785,
											"end": 2799,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2785,
											"end": 2799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2785,
											"end": 2815,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2785,
											"end": 2815,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2785,
											"end": 2815,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2785,
											"end": 2815,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 2785,
											"end": 2815,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2785,
											"end": 2815,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2785,
											"end": 2815,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 2785,
											"end": 2815,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2785,
											"end": 2815,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 2785,
											"end": 2815,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2785,
											"end": 2815,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2785,
											"end": 2815,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2785,
											"end": 2815,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2840,
											"end": 2850,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2825,
											"end": 2851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2825,
											"end": 2839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2825,
											"end": 2839,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2825,
											"end": 2839,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2825,
											"end": 2851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2825,
											"end": 2858,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2825,
											"end": 2858,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2825,
											"end": 2858,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2825,
											"end": 2858,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2825,
											"end": 2858,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2825,
											"end": 2858,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2917,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2917,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5994,
											"end": 6019,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6019,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6019,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6035,
											"end": 6053,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6035,
											"end": 6053,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6035,
											"end": 6053,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6028,
											"end": 6088,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6028,
											"end": 6088,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6028,
											"end": 6088,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6028,
											"end": 6088,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6104,
											"end": 6122,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6104,
											"end": 6122,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6097,
											"end": 6131,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6097,
											"end": 6131,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6097,
											"end": 6131,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2874,
											"end": 2917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1ABE610CF2BF87E57DCC1181FCF5AC0934E843D8344AB9EED6E86C799F62585E"
										},
										{
											"begin": 2874,
											"end": 2917,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5982,
											"end": 5984,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5967,
											"end": 5985,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2874,
											"end": 2917,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 2874,
											"end": 2917,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2874,
											"end": 2917,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2917,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2917,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2917,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2917,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2917,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 2431,
											"end": 2924,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2431,
											"end": 2924,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2382,
											"end": 2924,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2382,
											"end": 2924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 752,
											"end": 779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 752,
											"end": 779,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 752,
											"end": 779,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 779,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 752,
											"end": 779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 779,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 752,
											"end": 779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 752,
											"end": 779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 752,
											"end": 779,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 752,
											"end": 779,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 752,
											"end": 779,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 752,
											"end": 779,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 752,
											"end": 779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 752,
											"end": 779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 752,
											"end": 779,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 752,
											"end": 779,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 752,
											"end": 779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 3405,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2930,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2989,
											"end": 3014,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3017,
											"end": 3026,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3027,
											"end": 3037,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3017,
											"end": 3038,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3017,
											"end": 3038,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3017,
											"end": 3038,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3017,
											"end": 3038,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3017,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 3017,
											"end": 3038,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3017,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 3017,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 3017,
											"end": 3038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3017,
											"end": 3038,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 3017,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3017,
											"end": 3038,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3017,
											"end": 3038,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3017,
											"end": 3038,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3017,
											"end": 3038,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3017,
											"end": 3038,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3017,
											"end": 3038,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3017,
											"end": 3038,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3017,
											"end": 3038,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3017,
											"end": 3038,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3017,
											"end": 3038,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2989,
											"end": 3038,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2989,
											"end": 3038,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3086,
											"name": "PUSH",
											"source": 9,
											"value": "1B1AE4D6E2EF500000"
										},
										{
											"begin": 3056,
											"end": 3064,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3056,
											"end": 3070,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3056,
											"end": 3070,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3056,
											"end": 3070,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3056,
											"end": 3086,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3056,
											"end": 3086,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 3048,
											"end": 3129,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3129,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3048,
											"end": 3129,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3048,
											"end": 3129,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3129,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6344,
											"end": 6346,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3048,
											"end": 3129,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3048,
											"end": 3129,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6326,
											"end": 6347,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6383,
											"end": 6385,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 6363,
											"end": 6381,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6363,
											"end": 6381,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6363,
											"end": 6381,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6356,
											"end": 6386,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6422,
											"end": 6456,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F7420656E6F75676820766F746573202835303020746F6B656E7320726571"
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6395,
											"end": 6457,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "756972656429"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6473,
											"end": 6491,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6473,
											"end": 6491,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6473,
											"end": 6491,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6466,
											"end": 6502,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6519,
											"end": 6538,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 6519,
											"end": 6538,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3048,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 6142,
											"end": 6544,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3048,
											"end": 3129,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 3048,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3165,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3148,
											"end": 3165,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3165,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3165,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3165,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3148,
											"end": 3165,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3147,
											"end": 3165,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3139,
											"end": 3186,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 3139,
											"end": 3186,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3139,
											"end": 3186,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3139,
											"end": 3186,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3139,
											"end": 3186,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3139,
											"end": 3186,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6751,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3139,
											"end": 3186,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3139,
											"end": 3186,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3139,
											"end": 3186,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6754,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6790,
											"end": 6792,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6763,
											"end": 6793,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E48195E1958DD5D1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6809,
											"end": 6827,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6809,
											"end": 6827,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6809,
											"end": 6827,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6802,
											"end": 6848,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3139,
											"end": 3186,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 6549,
											"end": 6889,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3139,
											"end": 3186,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 3139,
											"end": 3186,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3231,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3242,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3223,
											"end": 3242,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3242,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3204,
											"end": 3219,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 3204,
											"end": 3242,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3204,
											"end": 3242,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 3196,
											"end": 3265,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3265,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3196,
											"end": 3265,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3196,
											"end": 3265,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3265,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7096,
											"end": 7098,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3196,
											"end": 3265,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3196,
											"end": 3265,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3265,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7078,
											"end": 7099,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7135,
											"end": 7137,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 7115,
											"end": 7133,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7115,
											"end": 7133,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7115,
											"end": 7133,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7108,
											"end": 7138,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "119D5B991CC81CDD1A5B1B081B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7154,
											"end": 7172,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7154,
											"end": 7172,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7154,
											"end": 7172,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7147,
											"end": 7195,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7212,
											"end": 7230,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7212,
											"end": 7230,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 6894,
											"end": 7236,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3265,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 3196,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3293,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3276,
											"end": 3293,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3293,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3300,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3300,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3276,
											"end": 3300,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3296,
											"end": 3300,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3276,
											"end": 3300,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3300,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3300,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3300,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3300,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3300,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3328,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3328,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3338,
											"end": 3353,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3338,
											"end": 3353,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3338,
											"end": 3353,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3338,
											"end": 3353,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3310,
											"end": 3328,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3328,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3328,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3328,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "PUSH",
											"source": 9,
											"value": "8FC"
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3338,
											"end": 3353,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3293,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3293,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3338,
											"end": 3353,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3328,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3310,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3370,
											"end": 3398,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3370,
											"end": 3398,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1588,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1588,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1588,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3370,
											"end": 3398,
											"name": "PUSH",
											"source": 9,
											"value": "712AE1383F79AC853F8D882153778E0260EF8F03B504E2866E0593E04D2B291F"
										},
										{
											"begin": 3370,
											"end": 3398,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1551,
											"end": 1553,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1536,
											"end": 1554,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3370,
											"end": 3398,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3370,
											"end": 3398,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3370,
											"end": 3398,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3370,
											"end": 3398,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3370,
											"end": 3398,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3370,
											"end": 3398,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3370,
											"end": 3398,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 3405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 3405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1666,
											"end": 2376,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1666,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1513,
											"end": 1523,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1505,
											"end": 1512,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 3928,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 3929,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3965,
											"end": 3967,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 3945,
											"end": 3963,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3945,
											"end": 3963,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3945,
											"end": 3963,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3938,
											"end": 3968,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA1030902220A79036B2B6B132B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3984,
											"end": 4002,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3984,
											"end": 4002,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 4002,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3977,
											"end": 4023,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4040,
											"end": 4058,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4040,
											"end": 4058,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 3724,
											"end": 4064,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 1497,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1794,
											"end": 1800,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1769,
											"end": 1790,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 1769,
											"end": 1800,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1769,
											"end": 1800,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1761,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 1761,
											"end": 1834,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1761,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1761,
											"end": 1834,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1761,
											"end": 1834,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1761,
											"end": 1834,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7443,
											"end": 7445,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1761,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1761,
											"end": 1834,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1761,
											"end": 1834,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7425,
											"end": 7446,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7482,
											"end": 7484,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 7462,
											"end": 7480,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7462,
											"end": 7480,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7462,
											"end": 7480,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7455,
											"end": 7485,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7552,
											"name": "PUSH",
											"source": 10,
											"value": "496E73756666696369656E742074726561737572792062616C616E6365000000"
										},
										{
											"begin": 7501,
											"end": 7519,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7501,
											"end": 7519,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7501,
											"end": 7519,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7553,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7570,
											"end": 7588,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7570,
											"end": 7588,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 7241,
											"end": 7594,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1834,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 1761,
											"end": 1834,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1868,
											"end": 1872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5DC"
										},
										{
											"begin": 1852,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 1852,
											"end": 1863,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1852,
											"end": 1865,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1852,
											"end": 1865,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 1852,
											"end": 1865,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1852,
											"end": 1872,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1844,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1844,
											"end": 1894,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1844,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1844,
											"end": 1894,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1844,
											"end": 1894,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1844,
											"end": 1894,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7801,
											"end": 7803,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1844,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1844,
											"end": 1894,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1844,
											"end": 1894,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7783,
											"end": 7804,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7840,
											"end": 7842,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 7820,
											"end": 7838,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7820,
											"end": 7838,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7820,
											"end": 7838,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7813,
											"end": 7843,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "45544820707269636520746F6F206C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7859,
											"end": 7877,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7859,
											"end": 7877,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7859,
											"end": 7877,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 7899,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1844,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 7599,
											"end": 7940,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1844,
											"end": 1894,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1844,
											"end": 1894,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1905,
											"end": 1914,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1905,
											"end": 1921,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1905,
											"end": 1921,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1905,
											"end": 1921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1905,
											"end": 1921,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1905,
											"end": 1921,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1905,
											"end": 1921,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1905,
											"end": 1921,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1905,
											"end": 1921,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1905,
											"end": 1921,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1921,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1905,
											"end": 1921,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1905,
											"end": 1921,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1905,
											"end": 1914,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1972,
											"end": 1992,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 1972,
											"end": 1992,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1972,
											"end": 1992,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 1972,
											"end": 1992,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1972,
											"end": 1992,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 1972,
											"end": 1992,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 1993,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 1993,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 1993,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 1993,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 1993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1962,
											"end": 1993,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 1993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1962,
											"end": 1993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 1962,
											"end": 1993,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 1993,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1962,
											"end": 1993,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 1993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 1993,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 1993,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 1993,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 1993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1993,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 1993,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 1993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1962,
											"end": 1993,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 1993,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 1993,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 1993,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 1993,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2036,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2003,
											"end": 2036,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2003,
											"end": 2036,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2036,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2036,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2036,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2036,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2046,
											"end": 2064,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2046,
											"end": 2064,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2046,
											"end": 2073,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2046,
											"end": 2073,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2046,
											"end": 2073,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2083,
											"end": 2100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2083,
											"end": 2100,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2083,
											"end": 2100,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2083,
											"end": 2104,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2083,
											"end": 2104,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2083,
											"end": 2104,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2083,
											"end": 2104,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2154,
											"end": 2169,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 1993,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 1993,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2136,
											"end": 2169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 2136,
											"end": 2169,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2151,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 2136,
											"end": 2169,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2169,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 2136,
											"end": 2169,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2114,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2114,
											"end": 2133,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2114,
											"end": 2133,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2114,
											"end": 2169,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2204,
											"end": 2230,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 2204,
											"end": 2219,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2A300"
										},
										{
											"begin": 2204,
											"end": 2230,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 2204,
											"end": 2230,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2204,
											"end": 2230,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 2204,
											"end": 2230,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2179,
											"end": 2201,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2201,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2269,
											"end": 2289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2269,
											"end": 2289,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2269,
											"end": 2289,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2269,
											"end": 2297,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2269,
											"end": 2297,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2269,
											"end": 2297,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2269,
											"end": 2297,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2269,
											"end": 2297,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2338,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2329,
											"end": 2345,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2313,
											"end": 2369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3417B456FAD6209C73445D5EFD446D686E75E4560F0F50C13B5A5CDE976447B4"
										},
										{
											"begin": 2313,
											"end": 2369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 2329,
											"end": 2349,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2269,
											"end": 2297,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2269,
											"end": 2297,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 2329,
											"end": 2349,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2349,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 2329,
											"end": 2349,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2313,
											"end": 2369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2313,
											"end": 2369,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2313,
											"end": 2369,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5994,
											"end": 6019,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6019,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6019,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6055,
											"end": 6087,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6055,
											"end": 6087,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6050,
											"end": 6052,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6035,
											"end": 6053,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6035,
											"end": 6053,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6028,
											"end": 6088,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6104,
											"end": 6122,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6104,
											"end": 6122,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6097,
											"end": 6131,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6097,
											"end": 6131,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6097,
											"end": 6131,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5982,
											"end": 5984,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5967,
											"end": 5985,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2313,
											"end": 2369,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 5792,
											"end": 6137,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3997,
											"end": 4169,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3997,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4076,
											"end": 4091,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4094,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 4094,
											"end": 4125,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4094,
											"end": 4125,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4094,
											"end": 4125,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4105,
											"end": 4116,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4094,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 4094,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4094,
											"end": 4125,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 4094,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4076,
											"end": 4125,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4076,
											"end": 4125,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4135,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 4151,
											"end": 4161,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4135,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 4135,
											"end": 4162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4135,
											"end": 4162,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 4135,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4066,
											"end": 4169,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4169,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4169,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4452,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4316,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4387,
											"end": 4398,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4387,
											"end": 4445,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A4CA37B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4387,
											"end": 4445,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4416,
											"end": 4420,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4387,
											"end": 4445,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8638,
											"end": 8689,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8638,
											"end": 8689,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8638,
											"end": 8689,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8705,
											"end": 8723,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8705,
											"end": 8723,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8705,
											"end": 8723,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8698,
											"end": 8732,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8698,
											"end": 8732,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8698,
											"end": 8732,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8748,
											"end": 8766,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8748,
											"end": 8766,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8748,
											"end": 8766,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 8801,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4387,
											"end": 4398,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4398,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4398,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4398,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "69328DEC"
										},
										{
											"begin": 4387,
											"end": 4407,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8611,
											"end": 8629,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8611,
											"end": 8629,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4387,
											"end": 4445,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 4387,
											"end": 4445,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4445,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4452,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4175,
											"end": 4310,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 4175,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4243,
											"end": 4254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4243,
											"end": 4254,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4243,
											"end": 4303,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8EDA9DF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4243,
											"end": 4303,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4275,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4243,
											"end": 4303,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9050,
											"end": 9101,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9050,
											"end": 9101,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9050,
											"end": 9101,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9117,
											"end": 9135,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9117,
											"end": 9135,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9117,
											"end": 9135,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9110,
											"end": 9144,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9110,
											"end": 9144,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9110,
											"end": 9144,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9160,
											"end": 9178,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9160,
											"end": 9178,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9160,
											"end": 9178,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9153,
											"end": 9213,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4243,
											"end": 4254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9229,
											"end": 9247,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9229,
											"end": 9247,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9229,
											"end": 9247,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9222,
											"end": 9269,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4243,
											"end": 4254,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4254,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4254,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4254,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E8EDA9DF"
										},
										{
											"begin": 4243,
											"end": 4262,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9022,
											"end": 9041,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 9022,
											"end": 9041,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4303,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4303,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4303,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4175,
											"end": 4310,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4175,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3655,
											"end": 3672,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3674,
											"end": 3686,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3721,
											"end": 3727,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3716,
											"end": 3957,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 3716,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3737,
											"end": 3746,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3737,
											"end": 3753,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3733,
											"end": 3753,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3733,
											"end": 3753,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3716,
											"end": 3957,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3716,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 3716,
											"end": 3957,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3788,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3789,
											"end": 3790,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3791,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3791,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3791,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3791,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 3779,
											"end": 3791,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 3779,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 3779,
											"end": 3791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3791,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 3779,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3791,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3779,
											"end": 3791,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3791,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3791,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3791,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3779,
											"end": 3791,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3791,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3791,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3800,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3779,
											"end": 3791,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3779,
											"end": 3791,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3791,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3791,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3791,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3800,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3800,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3800,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3779,
											"end": 3800,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3800,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3838,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3838,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 3778,
											"end": 3838,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3826,
											"end": 3838,
											"name": "PUSH",
											"source": 9,
											"value": "1B1AE4D6E2EF500000"
										},
										{
											"begin": 3804,
											"end": 3813,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3814,
											"end": 3815,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3816,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3816,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3816,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3816,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 3804,
											"end": 3816,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 3804,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 3804,
											"end": 3816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3816,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 3804,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3816,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3816,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3804,
											"end": 3816,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3816,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3804,
											"end": 3816,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3804,
											"end": 3816,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3816,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3816,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3804,
											"end": 3816,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3816,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3822,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3804,
											"end": 3822,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3822,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3838,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3838,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3838,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 3778,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3884,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3884,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 3778,
											"end": 3884,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3884,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3861,
											"end": 3870,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3871,
											"end": 3872,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3861,
											"end": 3873,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3861,
											"end": 3873,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3861,
											"end": 3873,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3861,
											"end": 3873,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3861,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 3861,
											"end": 3873,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3861,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 3861,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 3861,
											"end": 3873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3861,
											"end": 3873,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 3861,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3861,
											"end": 3873,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3861,
											"end": 3873,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3861,
											"end": 3873,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3861,
											"end": 3873,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3861,
											"end": 3873,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3861,
											"end": 3873,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3861,
											"end": 3873,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3861,
											"end": 3873,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3861,
											"end": 3873,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3861,
											"end": 3873,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3861,
											"end": 3884,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3861,
											"end": 3884,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3861,
											"end": 3884,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3842,
											"end": 3857,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 3842,
											"end": 3884,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3842,
											"end": 3884,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3884,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 3778,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3774,
											"end": 3947,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3774,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 3774,
											"end": 3947,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3912,
											"end": 3916,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3929,
											"end": 3930,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3931,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3918,
											"end": 3931,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3931,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3918,
											"end": 3931,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 3918,
											"end": 3931,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1588,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1588,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1551,
											"end": 1553,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1536,
											"end": 1554,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1536,
											"end": 1554,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1417,
											"end": 1594,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3918,
											"end": 3931,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 3918,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3931,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3918,
											"end": 3931,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3931,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3918,
											"end": 3931,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3931,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3931,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3931,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3931,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3931,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3931,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3931,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3918,
											"end": 3931,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3904,
											"end": 3932,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3904,
											"end": 3932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3904,
											"end": 3932,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3904,
											"end": 3932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3904,
											"end": 3932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3904,
											"end": 3932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 3904,
											"end": 3932,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3774,
											"end": 3947,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 3774,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3755,
											"end": 3758,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3755,
											"end": 3758,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3716,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 3716,
											"end": 3957,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3716,
											"end": 3957,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 3716,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3966,
											"end": 3984,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3966,
											"end": 3984,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3966,
											"end": 3984,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3966,
											"end": 3984,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3966,
											"end": 3984,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3966,
											"end": 3984,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3966,
											"end": 3984,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3966,
											"end": 3984,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3966,
											"end": 3984,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3974,
											"end": 3979,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3984,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3966,
											"end": 3984,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3966,
											"end": 3984,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3974,
											"end": 3979,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3411,
											"end": 3564,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 3411,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3505,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3496,
											"end": 3505,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3505,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3FABE5A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3455,
											"end": 3462,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3455,
											"end": 3462,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3455,
											"end": 3462,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3455,
											"end": 3462,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3496,
											"end": 3505,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3505,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3521,
											"name": "PUSH",
											"source": 9,
											"value": "FEAF968C"
										},
										{
											"begin": 3496,
											"end": 3521,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3505,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 3496,
											"end": 3523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3474,
											"end": 3523,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3474,
											"end": 3523,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3474,
											"end": 3523,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3474,
											"end": 3523,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3474,
											"end": 3523,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3474,
											"end": 3523,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3554,
											"end": 3557,
											"name": "PUSH",
											"source": 9,
											"value": "5F5E100"
										},
										{
											"begin": 3545,
											"end": 3550,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 3540,
											"end": 3557,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3557,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 3540,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3557,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 3540,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3411,
											"end": 3564,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3411,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1660,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 1569,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1631,
											"end": 1646,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1631,
											"end": 1646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1646,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1631,
											"end": 1646,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1631,
											"end": 1646,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1649,
											"end": 1653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1631,
											"end": 1646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1631,
											"end": 1646,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1631,
											"end": 1646,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1631,
											"end": 1646,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1631,
											"end": 1646,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1631,
											"end": 1646,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1631,
											"end": 1646,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1631,
											"end": 1646,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1631,
											"end": 1653,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1631,
											"end": 1653,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1631,
											"end": 1653,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1631,
											"end": 1653,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1631,
											"end": 1653,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1631,
											"end": 1653,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1631,
											"end": 1653,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1631,
											"end": 1653,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3218,
											"end": 3269,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3072,
											"end": 3275,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3218,
											"end": 3269,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3072,
											"end": 3275,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 6,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 240,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 14,
											"end": 240,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 187,
											"end": 210,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 187,
											"end": 210,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14,
											"end": 240,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 837,
											"end": 968,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 837,
											"end": 968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 912,
											"end": 943,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 912,
											"end": 943,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 902,
											"end": 944,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 902,
											"end": 944,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 892,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 892,
											"end": 962,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 958,
											"end": 959,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 955,
											"end": 956,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 948,
											"end": 960,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1220,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 973,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1038,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 1087,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1064,
											"end": 1071,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1083,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1088,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1053,
											"end": 1105,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1053,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 1053,
											"end": 1105,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1101,
											"end": 1102,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1099,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1103,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1053,
											"end": 1105,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 1053,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1140,
											"end": 1149,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1127,
											"end": 1150,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 1184,
											"end": 1189,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 1159,
											"end": 1190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1190,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 1159,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1209,
											"end": 1214,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1220,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 973,
											"end": 1220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1599,
											"end": 1974,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 1599,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1675,
											"end": 1681,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1689,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1736,
											"end": 1738,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1711,
											"end": 1734,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1707,
											"end": 1739,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1756,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 1704,
											"end": 1756,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1752,
											"end": 1753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 1750,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1742,
											"end": 1754,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1756,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 1704,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1791,
											"end": 1800,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1801,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1810,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1835,
											"end": 1840,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1810,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 1810,
											"end": 1841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1810,
											"end": 1841,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1810,
											"end": 1841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1865,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1938,
											"end": 1940,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 1942,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 1942,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1599,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 2565,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1979,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2057,
											"end": 2063,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2110,
											"end": 2112,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2098,
											"end": 2107,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2089,
											"end": 2096,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2108,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2081,
											"end": 2113,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2130,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 2078,
											"end": 2130,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2126,
											"end": 2127,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2123,
											"end": 2124,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2116,
											"end": 2128,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2130,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 2078,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2176,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2199,
											"end": 2217,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2191,
											"end": 2197,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2188,
											"end": 2218,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2185,
											"end": 2235,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2185,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 2185,
											"end": 2235,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2231,
											"end": 2232,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2228,
											"end": 2229,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2233,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2185,
											"end": 2235,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 2185,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2254,
											"end": 2276,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2254,
											"end": 2276,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2311,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2299,
											"end": 2312,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2299,
											"end": 2312,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2295,
											"end": 2322,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 2285,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 2285,
											"end": 2340,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2336,
											"end": 2337,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2333,
											"end": 2334,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2340,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 2285,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2376,
											"end": 2378,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2363,
											"end": 2379,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2402,
											"end": 2420,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2394,
											"end": 2400,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2391,
											"end": 2421,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2438,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 2388,
											"end": 2438,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2434,
											"end": 2435,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2431,
											"end": 2432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2424,
											"end": 2436,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2438,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 2388,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2479,
											"end": 2486,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2474,
											"end": 2476,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2465,
											"end": 2471,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2461,
											"end": 2463,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2472,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2453,
											"end": 2477,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2450,
											"end": 2487,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2447,
											"end": 2504,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2447,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 2447,
											"end": 2504,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2500,
											"end": 2501,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2498,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2502,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2447,
											"end": 2504,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 2447,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2533,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2523,
											"end": 2534,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2534,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2534,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2534,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2534,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2553,
											"end": 2559,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2553,
											"end": 2559,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1979,
											"end": 2565,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1979,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2570,
											"end": 3067,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 2570,
											"end": 3067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2753,
											"end": 2759,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2760,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2739,
											"end": 2761,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2737,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2721,
											"end": 2762,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2798,
											"end": 2800,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2793,
											"end": 2795,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2782,
											"end": 2791,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2778,
											"end": 2796,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2771,
											"end": 2801,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2702,
											"end": 2706,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2836,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 2837,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 2879,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 2870,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2857,
											"end": 2866,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2853,
											"end": 2871,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2880,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2932,
											"end": 2938,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2929,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2919,
											"end": 2925,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2915,
											"end": 2930,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2910,
											"end": 2912,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2899,
											"end": 2908,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2895,
											"end": 2913,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2889,
											"end": 2939,
											"name": "MCOPY",
											"source": 10
										},
										{
											"begin": 2988,
											"end": 2989,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2983,
											"end": 2985,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2974,
											"end": 2980,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 2972,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2959,
											"end": 2981,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2955,
											"end": 2986,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2948,
											"end": 2990,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3058,
											"end": 3060,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3051,
											"end": 3053,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3047,
											"end": 3054,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3042,
											"end": 3044,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3034,
											"end": 3040,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3045,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3015,
											"end": 3024,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3011,
											"end": 3056,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3061,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2999,
											"end": 3061,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2999,
											"end": 3061,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2999,
											"end": 3061,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2570,
											"end": 3067,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2570,
											"end": 3067,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2570,
											"end": 3067,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2570,
											"end": 3067,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2570,
											"end": 3067,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2570,
											"end": 3067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4069,
											"end": 4196,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 4069,
											"end": 4196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4130,
											"end": 4140,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 4125,
											"end": 4128,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4121,
											"end": 4141,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4118,
											"end": 4119,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4142,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 4158,
											"end": 4159,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4151,
											"end": 4166,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4185,
											"end": 4189,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4182,
											"end": 4183,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4175,
											"end": 4190,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4891,
											"end": 5121,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 4891,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4961,
											"end": 4967,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5014,
											"end": 5016,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5002,
											"end": 5011,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4993,
											"end": 5000,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4989,
											"end": 5012,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4985,
											"end": 5017,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4982,
											"end": 5034,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4982,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 4982,
											"end": 5034,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5030,
											"end": 5031,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5027,
											"end": 5028,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5020,
											"end": 5032,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4982,
											"end": 5034,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 4982,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5075,
											"end": 5091,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5075,
											"end": 5091,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4891,
											"end": 5121,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4891,
											"end": 5121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5530,
											"end": 5657,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 5530,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5591,
											"end": 5601,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 5586,
											"end": 5589,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5582,
											"end": 5602,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5579,
											"end": 5580,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5572,
											"end": 5603,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5622,
											"end": 5626,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 5619,
											"end": 5620,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5612,
											"end": 5627,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5646,
											"end": 5650,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5643,
											"end": 5644,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5636,
											"end": 5651,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5662,
											"end": 5787,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 5662,
											"end": 5787,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5727,
											"end": 5736,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5727,
											"end": 5736,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5727,
											"end": 5736,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5748,
											"end": 5758,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5748,
											"end": 5758,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5748,
											"end": 5758,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5745,
											"end": 5781,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5745,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 5745,
											"end": 5781,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5761,
											"end": 5779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 5761,
											"end": 5779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 5761,
											"end": 5779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5761,
											"end": 5779,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 5761,
											"end": 5779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5662,
											"end": 5787,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5662,
											"end": 5787,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5662,
											"end": 5787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5662,
											"end": 5787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5662,
											"end": 5787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7945,
											"end": 8073,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 7945,
											"end": 8073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8012,
											"end": 8021,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8012,
											"end": 8021,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8012,
											"end": 8021,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8033,
											"end": 8044,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8033,
											"end": 8044,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8033,
											"end": 8044,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8030,
											"end": 8067,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8030,
											"end": 8067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 8030,
											"end": 8067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8047,
											"end": 8065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 8047,
											"end": 8065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 8047,
											"end": 8065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9280,
											"end": 9459,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 9280,
											"end": 9459,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9358,
											"end": 9371,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9358,
											"end": 9371,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9411,
											"end": 9433,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9400,
											"end": 9434,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9400,
											"end": 9434,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9390,
											"end": 9435,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9390,
											"end": 9435,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 9380,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 9380,
											"end": 9453,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9449,
											"end": 9450,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9446,
											"end": 9447,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9439,
											"end": 9451,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9380,
											"end": 9453,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 9380,
											"end": 9453,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9280,
											"end": 9459,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9280,
											"end": 9459,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9280,
											"end": 9459,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9280,
											"end": 9459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9464,
											"end": 10035,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 9464,
											"end": 10035,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9567,
											"end": 9573,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9575,
											"end": 9581,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9583,
											"end": 9589,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9591,
											"end": 9597,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9599,
											"end": 9605,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9652,
											"end": 9655,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 9640,
											"end": 9649,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9631,
											"end": 9638,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9627,
											"end": 9650,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9623,
											"end": 9656,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 9620,
											"end": 9673,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9620,
											"end": 9673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 9620,
											"end": 9673,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9669,
											"end": 9670,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9666,
											"end": 9667,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9659,
											"end": 9671,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9620,
											"end": 9673,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 9620,
											"end": 9673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9692,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 9721,
											"end": 9730,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9692,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 9692,
											"end": 9731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9692,
											"end": 9731,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 9692,
											"end": 9731,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9771,
											"end": 9773,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9756,
											"end": 9774,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 9756,
											"end": 9774,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9750,
											"end": 9775,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9837,
											"end": 9839,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9822,
											"end": 9840,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9822,
											"end": 9840,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9816,
											"end": 9841,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9931,
											"end": 9933,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9916,
											"end": 9934,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 9916,
											"end": 9934,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9910,
											"end": 9935,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9682,
											"end": 9731,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9682,
											"end": 9731,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9750,
											"end": 9775,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9750,
											"end": 9775,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9816,
											"end": 9841,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9910,
											"end": 9935,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9980,
											"end": 10029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 10024,
											"end": 10027,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 10009,
											"end": 10028,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 10009,
											"end": 10028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9980,
											"end": 10029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 9980,
											"end": 10029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9980,
											"end": 10029,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 9980,
											"end": 10029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9970,
											"end": 10029,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9970,
											"end": 10029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9464,
											"end": 10035,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9464,
											"end": 10035,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 9464,
											"end": 10035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9464,
											"end": 10035,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9464,
											"end": 10035,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 9464,
											"end": 10035,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9464,
											"end": 10035,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9464,
											"end": 10035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9464,
											"end": 10035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10040,
											"end": 10257,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 10040,
											"end": 10257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10080,
											"end": 10081,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10106,
											"end": 10107,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10096,
											"end": 10228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 10096,
											"end": 10228,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10150,
											"end": 10160,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 10145,
											"end": 10148,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 10141,
											"end": 10161,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 10138,
											"end": 10139,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10131,
											"end": 10162,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10185,
											"end": 10189,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 10182,
											"end": 10183,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10175,
											"end": 10190,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10213,
											"end": 10217,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10210,
											"end": 10211,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10218,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10096,
											"end": 10228,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 10096,
											"end": 10228,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10242,
											"end": 10251,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10242,
											"end": 10251,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10040,
											"end": 10257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@aave/core-v3/contracts/interfaces/IPool.sol",
								"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol",
								"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol",
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/TreasuryDAO.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addMember(address)": "ca6d56dc",
							"checkUpkeep(bytes)": "6e04ff0d",
							"deposit()": "d0e30db0",
							"depositToAave(uint256)": "68fd2d80",
							"executeProposal(uint256)": "0d61b519",
							"getBalance()": "12065fe0",
							"getETHPrice()": "a607a8d9",
							"governanceToken()": "f96dae0a",
							"lendingPool()": "a59a9973",
							"members(address)": "08ae4b0c",
							"minVoteDuration()": "c00d2a8c",
							"owner()": "8da5cb5b",
							"performUpkeep(bytes)": "4585e33b",
							"proposals(uint256)": "013cf08b",
							"proposeFunding(address,uint256)": "237af348",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"vote(uint256)": "0121b93f",
							"withdrawFromAave(uint256)": "688f237b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aavePool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"addMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositToAave\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getETHPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lendingPool\",\"outputs\":[{\"internalType\":\"contract IPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"members\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minVoteDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"proposeFunding\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFromAave\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TreasuryDAO.sol\":\"TreasuryDAO\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6\",\"dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX\"]},\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a\",\"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa\"]},\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0x771cb99fd8519c974f7e12130387c4d9a997a6e8d0ac10e4303b842fe53efa88\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0f41689d1d58bc13678c749bae8830f5a8b19b89cd135e962bf07d483350f828\",\"dweb:/ipfs/QmQSNGDxjYGqT1GU2CZzsWUTNcAtcfkg1jDGTH516nCAfN\"]},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b738dba680a6fbc4afc85819743f13f5b7f4790ec8634c9894e1160327b11b6e\",\"dweb:/ipfs/Qmbv3euvQppeBm2g61khcJSRMZWi78xUWzbnjKAvDBnka4\"]},\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"keccak256\":\"0xac76a31c20c6d66196247376d113a0f19229569ab8c123989649d50be3333e0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5400532a5132536ba3d1172604291298f1595f15d7a7f66c95bf89a5823b80be\",\"dweb:/ipfs/QmTvDMmt73kZEGjD9WVgpaN8xLsgGpoXmr2yVUQoQuv8GW\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/TreasuryDAO.sol\":{\"keccak256\":\"0xb3f7575a2603ba26cee92b6e25eb4265df83f6fec24baced987b8884b9513dba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95835b850326cbf71f40aeee341bda703165c98a30ee26919d47077e5be6b29b\",\"dweb:/ipfs/QmNtntwhcAP64fZyYKqfxHQApxTTusKK2w8m8ivgoKPK9z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1277,
								"contract": "contracts/TreasuryDAO.sol:TreasuryDAO",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1556,
								"contract": "contracts/TreasuryDAO.sol:TreasuryDAO",
								"label": "members",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1560,
								"contract": "contracts/TreasuryDAO.sol:TreasuryDAO",
								"label": "proposals",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_struct(Proposal)1552_storage)dyn_storage"
							},
							{
								"astId": 1563,
								"contract": "contracts/TreasuryDAO.sol:TreasuryDAO",
								"label": "governanceToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)1494"
							},
							{
								"astId": 1566,
								"contract": "contracts/TreasuryDAO.sol:TreasuryDAO",
								"label": "priceFeed",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(AggregatorV3Interface)1245"
							},
							{
								"astId": 1569,
								"contract": "contracts/TreasuryDAO.sol:TreasuryDAO",
								"label": "lendingPool",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IPool)638"
							},
							{
								"astId": 1572,
								"contract": "contracts/TreasuryDAO.sol:TreasuryDAO",
								"label": "minVoteDuration",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Proposal)1552_storage)dyn_storage": {
								"base": "t_struct(Proposal)1552_storage",
								"encoding": "dynamic_array",
								"label": "struct TreasuryDAO.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(AggregatorV3Interface)1245": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)1494": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IPool)638": {
								"encoding": "inplace",
								"label": "contract IPool",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_struct(Proposal)1552_storage": {
								"encoding": "inplace",
								"label": "struct TreasuryDAO.Proposal",
								"members": [
									{
										"astId": 1537,
										"contract": "contracts/TreasuryDAO.sol:TreasuryDAO",
										"label": "recipient",
										"offset": 0,
										"slot": "0",
										"type": "t_address_payable"
									},
									{
										"astId": 1539,
										"contract": "contracts/TreasuryDAO.sol:TreasuryDAO",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1541,
										"contract": "contracts/TreasuryDAO.sol:TreasuryDAO",
										"label": "votes",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1543,
										"contract": "contracts/TreasuryDAO.sol:TreasuryDAO",
										"label": "endTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1545,
										"contract": "contracts/TreasuryDAO.sol:TreasuryDAO",
										"label": "unlockTime",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1547,
										"contract": "contracts/TreasuryDAO.sol:TreasuryDAO",
										"label": "executed",
										"offset": 0,
										"slot": "5",
										"type": "t_bool"
									},
									{
										"astId": 1551,
										"contract": "contracts/TreasuryDAO.sol:TreasuryDAO",
										"label": "voted",
										"offset": 0,
										"slot": "6",
										"type": "t_mapping(t_address,t_bool)"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"performUpkeep(bytes)": {
								"notice": "method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@aave/core-v3/contracts/interfaces/IPool.sol": {
				"ast": {
					"absolutePath": "@aave/core-v3/contracts/interfaces/IPool.sol",
					"exportedSymbols": {
						"DataTypes": [
							1199
						],
						"IPool": [
							638
						],
						"IPoolAddressesProvider": [
							847
						]
					},
					"id": 639,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:0"
						},
						{
							"absolutePath": "@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol",
							"file": "./IPoolAddressesProvider.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 639,
							"sourceUnit": 848,
							"src": "62:68:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IPoolAddressesProvider",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 847,
										"src": "70:22:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol",
							"file": "../protocol/libraries/types/DataTypes.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 639,
							"sourceUnit": 1200,
							"src": "131:68:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "DataTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1199,
										"src": "139:9:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPool",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "201:96:0",
								"text": " @title IPool\n @author Aave\n @notice Defines the basic interface for an Aave Pool."
							},
							"fullyImplemented": false,
							"id": 638,
							"linearizedBaseContracts": [
								638
							],
							"name": "IPool",
							"nameLocation": "308:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "318:349:0",
										"text": " @dev Emitted on mintUnbacked()\n @param reserve The address of the underlying asset of the reserve\n @param user The address initiating the supply\n @param onBehalfOf The beneficiary of the supplied assets, receiving the aTokens\n @param amount The amount of supplied assets\n @param referralCode The referral code used"
									},
									"eventSelector": "f25af37b3d3ec226063dc9bdc103ece7eb110a50f340fe854bb7bc1b0676d7d0",
									"id": 19,
									"name": "MintUnbacked",
									"nameLocation": "676:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "710:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "694:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "731:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "723:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "723:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"indexed": true,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "757:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "741:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "781:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "773:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "808:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "793:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 16,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "793:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "688:136:0"
									},
									"src": "670:155:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "829:257:0",
										"text": " @dev Emitted on backUnbacked()\n @param reserve The address of the underlying asset of the reserve\n @param backer The address paying for the backing\n @param amount The amount added as backing\n @param fee The amount paid in fees"
									},
									"eventSelector": "281596e92b2d974beb7d4f124df30a0b39067b096893e95011ce4bdad798b759",
									"id": 30,
									"name": "BackUnbacked",
									"nameLocation": "1095:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "1124:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1108:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"indexed": true,
												"mutability": "mutable",
												"name": "backer",
												"nameLocation": "1149:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1133:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1165:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1157:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1181:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1173:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1173:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1107:78:0"
									},
									"src": "1089:97:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1190:324:0",
										"text": " @dev Emitted on supply()\n @param reserve The address of the underlying asset of the reserve\n @param user The address initiating the supply\n @param onBehalfOf The beneficiary of the supply, receiving the aTokens\n @param amount The amount supplied\n @param referralCode The referral code used"
									},
									"eventSelector": "2b627736bca15cd5381dcf80b0bf11fd197d01a037c52b927a881a10fb73ba61",
									"id": 43,
									"name": "Supply",
									"nameLocation": "1523:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "1551:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1535:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1535:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1572:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1564:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "1598:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1582:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1622:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1614:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"indexed": true,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "1649:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1634:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 40,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1529:136:0"
									},
									"src": "1517:149:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "1670:292:0",
										"text": " @dev Emitted on withdraw()\n @param reserve The address of the underlying asset being withdrawn\n @param user The address initiating the withdrawal, owner of aTokens\n @param to The address that will receive the underlying\n @param amount The amount to be withdrawn"
									},
									"eventSelector": "3115d1449a7b732c986cba18244e897a450f61e1bb8d589cd2e69e6c8924f9f7",
									"id": 54,
									"name": "Withdraw",
									"nameLocation": "1971:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "1996:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1980:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1980:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2021:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2005:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2005:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2043:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2027:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2027:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2055:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2047:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2047:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1979:83:0"
									},
									"src": "1965:98:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "2067:628:0",
										"text": " @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n @param reserve The address of the underlying asset being borrowed\n @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n initiator of the transaction on flashLoan()\n @param onBehalfOf The address that will be getting the debt\n @param amount The amount borrowed out\n @param interestRateMode The rate mode: 1 for Stable, 2 for Variable\n @param borrowRate The numeric rate at which the user has borrowed, expressed in ray\n @param referralCode The referral code used"
									},
									"eventSelector": "b3d084820fb1a9decffb176436bd02558d15fac9b0ddfed8c465bc7359d7dce0",
									"id": 72,
									"name": "Borrow",
									"nameLocation": "2704:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "2732:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2716:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2716:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2753:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2745:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "2779:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2763:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2803:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2795:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2795:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"indexed": false,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "2842:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2815:43:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_InterestRateMode_$903",
													"typeString": "enum DataTypes.InterestRateMode"
												},
												"typeName": {
													"id": 65,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 64,
														"name": "DataTypes.InterestRateMode",
														"nameLocations": [
															"2815:9:0",
															"2825:16:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 903,
														"src": "2815:26:0"
													},
													"referencedDeclaration": 903,
													"src": "2815:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_InterestRateMode_$903",
														"typeString": "enum DataTypes.InterestRateMode"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"indexed": false,
												"mutability": "mutable",
												"name": "borrowRate",
												"nameLocation": "2872:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2864:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "2903:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2888:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 69,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2888:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:209:0"
									},
									"src": "2698:222:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "2924:425:0",
										"text": " @dev Emitted on repay()\n @param reserve The address of the underlying asset of the reserve\n @param user The beneficiary of the repayment, getting his debt reduced\n @param repayer The address of the user initiating the repay(), providing the funds\n @param amount The amount repaid\n @param useATokens True if the repayment is done using aTokens, `false` if done with underlying asset directly"
									},
									"eventSelector": "a534c8dbe71f871f9f3530e97a74601fea17b426cae02e1c5aee42c96c784051",
									"id": 85,
									"name": "Repay",
									"nameLocation": "3358:5:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "3385:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "3369:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3369:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3414:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "3398:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3398:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"indexed": true,
												"mutability": "mutable",
												"name": "repayer",
												"nameLocation": "3440:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "3424:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3424:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3461:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "3453:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 80,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": false,
												"mutability": "mutable",
												"name": "useATokens",
												"nameLocation": "3478:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "3473:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 82,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3473:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:129:0"
									},
									"src": "3352:141:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "3497:306:0",
										"text": " @dev Emitted on swapBorrowRateMode()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user swapping his rate mode\n @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable"
									},
									"eventSelector": "7962b394d85a534033ba2efcf43cd36de57b7ebeb3de0ca4428965d9b3ddc481",
									"id": 95,
									"name": "SwapBorrowRateMode",
									"nameLocation": "3812:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "3852:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "3836:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3836:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3881:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "3865:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"indexed": false,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "3918:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "3891:43:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_InterestRateMode_$903",
													"typeString": "enum DataTypes.InterestRateMode"
												},
												"typeName": {
													"id": 92,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 91,
														"name": "DataTypes.InterestRateMode",
														"nameLocations": [
															"3891:9:0",
															"3901:16:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 903,
														"src": "3891:26:0"
													},
													"referencedDeclaration": 903,
													"src": "3891:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_InterestRateMode_$903",
														"typeString": "enum DataTypes.InterestRateMode"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3830:108:0"
									},
									"src": "3806:133:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "3943:234:0",
										"text": " @dev Emitted on borrow(), repay() and liquidationCall() when using isolated assets\n @param asset The address of the underlying asset of the reserve\n @param totalDebt The total isolation mode debt for the reserve"
									},
									"eventSelector": "aef84d3b40895fd58c561f3998000f0583abb992a52fbdc99ace8e8de4d676a5",
									"id": 102,
									"name": "IsolationModeTotalDebtUpdated",
									"nameLocation": "4186:29:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "4232:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "4216:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4216:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalDebt",
												"nameLocation": "4247:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "4239:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4215:42:0"
									},
									"src": "4180:78:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "4262:164:0",
										"text": " @dev Emitted when the user selects a certain asset category for eMode\n @param user The address of the user\n @param categoryId The category id"
									},
									"eventSelector": "d728da875fc88944cbf17638bcbe4af0eedaef63becd1d1c57cc097eb4608d84",
									"id": 109,
									"name": "UserEModeSet",
									"nameLocation": "4435:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4464:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4448:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4448:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"indexed": false,
												"mutability": "mutable",
												"name": "categoryId",
												"nameLocation": "4476:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4470:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 106,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4470:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4447:40:0"
									},
									"src": "4429:59:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "4492:207:0",
										"text": " @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral"
									},
									"eventSelector": "00058a56ea94653cdf4f152d227ace22d4c00ad99e2a43f58cb7d9e3feb295f2",
									"id": 116,
									"name": "ReserveUsedAsCollateralEnabled",
									"nameLocation": "4708:30:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "4755:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "4739:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4780:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "4764:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4764:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4738:47:0"
									},
									"src": "4702:84:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "4790:207:0",
										"text": " @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral"
									},
									"eventSelector": "44c58d81365b66dd4b1a7f36c25aa97b8c71c361ee4937adc1a00000227db5dd",
									"id": 123,
									"name": "ReserveUsedAsCollateralDisabled",
									"nameLocation": "5006:31:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "5054:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5038:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5038:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5079:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5063:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5063:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5037:47:0"
									},
									"src": "5000:85:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5089:212:0",
										"text": " @dev Emitted on rebalanceStableBorrowRate()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user for which the rebalance has been executed"
									},
									"eventSelector": "9f439ae0c81e41a04d3fdfe07aed54e6a179fb0db15be7702eb66fa8ef6f5300",
									"id": 130,
									"name": "RebalanceStableBorrowRate",
									"nameLocation": "5310:25:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "5352:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "5336:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5377:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "5361:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5361:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5335:47:0"
									},
									"src": "5304:79:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "5387:482:0",
										"text": " @dev Emitted on flashLoan()\n @param target The address of the flash loan receiver contract\n @param initiator The address initiating the flash loan\n @param asset The address of the asset being flash borrowed\n @param amount The amount flash borrowed\n @param interestRateMode The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\n @param premium The fee flash borrowed\n @param referralCode The referral code used"
									},
									"eventSelector": "efefaba5e921573100900a3ad9cf29f222d995fb3b6045797eaea7521bd8d6f0",
									"id": 148,
									"name": "FlashLoan",
									"nameLocation": "5878:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"indexed": true,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5909:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "5893:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5893:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"indexed": false,
												"mutability": "mutable",
												"name": "initiator",
												"nameLocation": "5929:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "5921:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5921:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "5960:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "5944:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5979:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "5971:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"indexed": false,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "6018:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "5991:43:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_InterestRateMode_$903",
													"typeString": "enum DataTypes.InterestRateMode"
												},
												"typeName": {
													"id": 141,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 140,
														"name": "DataTypes.InterestRateMode",
														"nameLocations": [
															"5991:9:0",
															"6001:16:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 903,
														"src": "5991:26:0"
													},
													"referencedDeclaration": 903,
													"src": "5991:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_InterestRateMode_$903",
														"typeString": "enum DataTypes.InterestRateMode"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"indexed": false,
												"mutability": "mutable",
												"name": "premium",
												"nameLocation": "6048:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "6040:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6040:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"indexed": true,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "6076:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "6061:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 145,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6061:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5887:205:0"
									},
									"src": "5872:221:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "6097:749:0",
										"text": " @dev Emitted when a borrower is liquidated.\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param liquidatedCollateralAmount The amount of collateral received by the liquidator\n @param liquidator The address of the liquidator\n @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly"
									},
									"eventSelector": "e413a321e8681d831f4dbccbca790d2952b56f977908e45be37335533e005286",
									"id": 165,
									"name": "LiquidationCall",
									"nameLocation": "6855:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"indexed": true,
												"mutability": "mutable",
												"name": "collateralAsset",
												"nameLocation": "6892:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "6876:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6876:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "debtAsset",
												"nameLocation": "6929:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "6913:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6913:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6960:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "6944:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6944:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "debtToCover",
												"nameLocation": "6978:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "6970:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidatedCollateralAmount",
												"nameLocation": "7003:26:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "6995:34:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6995:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidator",
												"nameLocation": "7043:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "7035:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"indexed": false,
												"mutability": "mutable",
												"name": "receiveAToken",
												"nameLocation": "7064:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "7059:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 162,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7059:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6870:211:0"
									},
									"src": "6849:233:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "7086:421:0",
										"text": " @dev Emitted when the state of a reserve is updated.\n @param reserve The address of the underlying asset of the reserve\n @param liquidityRate The next liquidity rate\n @param stableBorrowRate The next stable borrow rate\n @param variableBorrowRate The next variable borrow rate\n @param liquidityIndex The next liquidity index\n @param variableBorrowIndex The next variable borrow index"
									},
									"eventSelector": "804c9b842b2748a22bb64b345453a3de7ca54a6ca45ce00d415894979e22897a",
									"id": 180,
									"name": "ReserveDataUpdated",
									"nameLocation": "7516:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "7556:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "7540:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7540:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityRate",
												"nameLocation": "7577:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "7569:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": false,
												"mutability": "mutable",
												"name": "stableBorrowRate",
												"nameLocation": "7604:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "7596:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7596:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"indexed": false,
												"mutability": "mutable",
												"name": "variableBorrowRate",
												"nameLocation": "7634:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "7626:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7626:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityIndex",
												"nameLocation": "7666:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "7658:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7658:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"indexed": false,
												"mutability": "mutable",
												"name": "variableBorrowIndex",
												"nameLocation": "7694:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "7686:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7534:183:0"
									},
									"src": "7510:208:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "7722:211:0",
										"text": " @dev Emitted when the protocol treasury receives minted aTokens from the accrued interest.\n @param reserve The address of the reserve\n @param amountMinted The amount minted to the treasury"
									},
									"eventSelector": "bfa21aa5d5f9a1f0120a95e7c0749f389863cbdbfff531aa7339077a5bc919de",
									"id": 187,
									"name": "MintedToTreasury",
									"nameLocation": "7942:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "7975:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "7959:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7959:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountMinted",
												"nameLocation": "7992:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "7984:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7984:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7958:47:0"
									},
									"src": "7936:70:0"
								},
								{
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "8010:428:0",
										"text": " @notice Mints an `amount` of aTokens to the `onBehalfOf`\n @param asset The address of the underlying asset to mint\n @param amount The amount to mint\n @param onBehalfOf The address that will receive the aTokens\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"
									},
									"functionSelector": "69a933a5",
									"id": 199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintUnbacked",
									"nameLocation": "8450:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "8476:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "8468:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8468:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8495:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "8487:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8487:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "8515:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "8507:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8507:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "8538:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "8531:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 195,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "8531:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8462:92:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8563:0:0"
									},
									"scope": 638,
									"src": "8441:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "8568:259:0",
										"text": " @notice Back the current unbacked underlying with `amount` and pay `fee`.\n @param asset The address of the underlying asset to back\n @param amount The amount to back\n @param fee The amount paid in fees\n @return The backed amount"
									},
									"functionSelector": "d65dc7a1",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "backUnbacked",
									"nameLocation": "8839:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "8860:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "8852:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8852:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8875:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "8867:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "8891:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "8883:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8883:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8851:44:0"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "8914:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8914:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8913:9:0"
									},
									"scope": 638,
									"src": "8830:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "8927:712:0",
										"text": " @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n @param asset The address of the underlying asset to supply\n @param amount The amount to be supplied\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"
									},
									"functionSelector": "617ba037",
									"id": 223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supply",
									"nameLocation": "9651:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "9666:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "9658:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9681:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "9673:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9673:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "9697:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "9689:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9689:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "9716:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "9709:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 219,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9709:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9657:72:0"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9738:0:0"
									},
									"scope": 638,
									"src": "9642:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "9743:962:0",
										"text": " @notice Supply with transfer approval of asset to be supplied done via permit function\n see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n @param asset The address of the underlying asset to supply\n @param amount The amount to be supplied\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param deadline The deadline timestamp that the permit is valid\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man\n @param permitV The V parameter of ERC712 permit sig\n @param permitR The R parameter of ERC712 permit sig\n @param permitS The S parameter of ERC712 permit sig"
									},
									"functionSelector": "02c205f0",
									"id": 243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supplyWithPermit",
									"nameLocation": "10717:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "10747:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "10739:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10766:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "10758:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "10786:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "10778:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10778:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "10809:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "10802:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 231,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "10802:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "10835:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "10827:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "permitV",
												"nameLocation": "10855:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "10849:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 235,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "10849:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "permitR",
												"nameLocation": "10876:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "10868:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 237,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "permitS",
												"nameLocation": "10897:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "10889:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 239,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10889:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10733:175:0"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10917:0:0"
									},
									"scope": 638,
									"src": "10708:210:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "10922:671:0",
										"text": " @notice Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n @param asset The address of the underlying asset to withdraw\n @param amount The underlying amount to be withdrawn\n   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n @param to The address that will receive the underlying, same as msg.sender if the user\n   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   different wallet\n @return The final amount withdrawn"
									},
									"functionSelector": "69328dec",
									"id": 255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "11605:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "11622:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "11614:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11614:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11637:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "11629:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11653:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "11645:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11613:43:0"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "11675:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11674:9:0"
									},
									"scope": 638,
									"src": "11596:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "11688:1198:0",
										"text": " @notice Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n already supplied enough collateral, or he was given enough allowance by a credit delegator on the\n corresponding debt token (StableDebtToken or VariableDebtToken)\n - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n @param asset The address of the underlying asset to borrow\n @param amount The amount to be borrowed\n @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man\n @param onBehalfOf The address of the user who will receive the debt. Should be the address of the borrower itself\n calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n if he has been given credit delegation allowance"
									},
									"functionSelector": "a415bcad",
									"id": 269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "borrow",
									"nameLocation": "12898:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "12918:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "12910:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12910:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12937:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "12929:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12929:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "12957:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "12949:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12949:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "12986:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "12979:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 263,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "12979:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "13012:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "13004:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12904:122:0"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13035:0:0"
									},
									"scope": 638,
									"src": "12889:147:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "13040:873:0",
										"text": " @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @param onBehalfOf The address of the user who will get his debt reduced/removed. Should be the address of the\n user calling the function if he wants to reduce/remove his own debt, or the address of any other\n other borrower whose debt should be removed\n @return The final amount repaid"
									},
									"functionSelector": "573ade81",
									"id": 283,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "repay",
									"nameLocation": "13925:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "13944:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "13936:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13936:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13963:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "13955:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13955:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "13983:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "13975:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13975:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "14013:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "14005:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14005:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13930:97:0"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "14046:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14046:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14045:9:0"
									},
									"scope": 638,
									"src": "13916:139:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "14059:1085:0",
										"text": " @notice Repay with transfer approval of asset to be repaid done via permit function\n see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n user calling the function if he wants to reduce/remove his own debt, or the address of any other\n other borrower whose debt should be removed\n @param deadline The deadline timestamp that the permit is valid\n @param permitV The V parameter of ERC712 permit sig\n @param permitR The R parameter of ERC712 permit sig\n @param permitS The S parameter of ERC712 permit sig\n @return The final amount repaid"
									},
									"functionSelector": "ee3e210b",
									"id": 305,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "repayWithPermit",
									"nameLocation": "15156:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "15185:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "15177:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15177:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15204:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "15196:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15196:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "15224:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "15216:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "15254:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "15246:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15246:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "15278:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "15270:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "permitV",
												"nameLocation": "15298:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "15292:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 295,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "15292:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "permitR",
												"nameLocation": "15319:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "15311:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 297,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15311:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "permitS",
												"nameLocation": "15340:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "15332:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 299,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15171:180:0"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "15370:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15369:9:0"
									},
									"scope": 638,
									"src": "15147:232:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "15383:779:0",
										"text": " @notice Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the\n equivalent debt tokens\n - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\n @dev  Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken\n balance is not enough to cover the whole debt\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @return The final amount repaid"
									},
									"functionSelector": "2dad97d4",
									"id": 317,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "repayWithATokens",
									"nameLocation": "16174:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "16204:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "16196:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16196:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16223:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "16215:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16215:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "16243:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "16235:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16235:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16190:73:0"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "16282:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16282:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16281:9:0"
									},
									"scope": 638,
									"src": "16165:126:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "16295:288:0",
										"text": " @notice Allows a borrower to swap his debt between stable and variable mode, or vice versa\n @param asset The address of the underlying asset borrowed\n @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable"
									},
									"functionSelector": "94ba89a2",
									"id": 325,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapBorrowRateMode",
									"nameLocation": "16595:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "16622:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "16614:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16614:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "16637:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "16629:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16613:41:0"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16663:0:0"
									},
									"scope": 638,
									"src": "16586:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "16668:553:0",
										"text": " @notice Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n - Users can be rebalanced if the following conditions are satisfied:\n     1. Usage ratio is above 95%\n     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too\n        much has been borrowed at a stable rate and suppliers are not earning enough\n @param asset The address of the underlying asset borrowed\n @param user The address of the user to be rebalanced"
									},
									"functionSelector": "cd112382",
									"id": 333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rebalanceStableBorrowRate",
									"nameLocation": "17233:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "17267:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "17259:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "17282:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "17274:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17274:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17258:29:0"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17296:0:0"
									},
									"scope": 638,
									"src": "17224:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 334,
										"nodeType": "StructuredDocumentation",
										"src": "17301:260:0",
										"text": " @notice Allows suppliers to enable/disable a specific supplied asset as collateral\n @param asset The address of the underlying asset supplied\n @param useAsCollateral True if the user wants to use the supply as collateral, false otherwise"
									},
									"functionSelector": "5a3b74b9",
									"id": 341,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setUserUseReserveAsCollateral",
									"nameLocation": "17573:29:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "17611:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "17603:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17603:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "useAsCollateral",
												"nameLocation": "17623:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "17618:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 337,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17618:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17602:37:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17648:0:0"
									},
									"scope": 638,
									"src": "17564:85:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "17653:860:0",
										"text": " @notice Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly"
									},
									"functionSelector": "00a718a9",
									"id": 355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidationCall",
									"nameLocation": "18525:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "collateralAsset",
												"nameLocation": "18554:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "18546:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18546:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "debtAsset",
												"nameLocation": "18583:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "18575:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18575:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "18606:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "18598:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "debtToCover",
												"nameLocation": "18624:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "18616:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18616:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "receiveAToken",
												"nameLocation": "18646:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "18641:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 351,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18641:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18540:123:0"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18672:0:0"
									},
									"scope": 638,
									"src": "18516:157:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "18677:1407:0",
										"text": " @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n as long as the amount taken plus a fee is returned.\n @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n into consideration. For further details please visit https://docs.aave.com/developers/\n @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\n @param assets The addresses of the assets being flash-borrowed\n @param amounts The amounts of the assets being flash-borrowed\n @param interestRateModes Types of the debt to open if the flash loan is not returned:\n   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n @param params Variadic packed params to pass to the receiver as extra information\n @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"
									},
									"functionSelector": "ab9c4b5d",
									"id": 376,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flashLoan",
									"nameLocation": "20096:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "receiverAddress",
												"nameLocation": "20119:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "20111:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20111:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "20159:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "20140:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 359,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "20140:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 360,
													"nodeType": "ArrayTypeName",
													"src": "20140:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "20190:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "20171:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 362,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "20171:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 363,
													"nodeType": "ArrayTypeName",
													"src": "20171:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "interestRateModes",
												"nameLocation": "20222:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "20203:36:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 365,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "20203:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 366,
													"nodeType": "ArrayTypeName",
													"src": "20203:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "20253:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "20245:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20245:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "20284:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "20269:21:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 370,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20269:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "20303:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "20296:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 372,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "20296:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20105:214:0"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20328:0:0"
									},
									"scope": 638,
									"src": "20087:242:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "20333:902:0",
										"text": " @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n as long as the amount taken plus a fee is returned.\n @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n into consideration. For further details please visit https://docs.aave.com/developers/\n @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\n @param asset The address of the asset being flash-borrowed\n @param amount The amount of the asset being flash-borrowed\n @param params Variadic packed params to pass to the receiver as extra information\n @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"
									},
									"functionSelector": "42b0b77c",
									"id": 390,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flashLoanSimple",
									"nameLocation": "21247:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "receiverAddress",
												"nameLocation": "21276:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "21268:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21268:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "21305:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "21297:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21297:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "21324:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "21316:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21316:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "21351:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "21336:21:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 384,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21336:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "21370:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "21363:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 386,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "21363:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21262:124:0"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21395:0:0"
									},
									"scope": 638,
									"src": "21238:158:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "21400:630:0",
										"text": " @notice Returns the user account data across all the reserves\n @param user The address of the user\n @return totalCollateralBase The total collateral of the user in the base currency used by the price feed\n @return totalDebtBase The total debt of the user in the base currency used by the price feed\n @return availableBorrowsBase The borrowing power left of the user in the base currency used by the price feed\n @return currentLiquidationThreshold The liquidation threshold of the user\n @return ltv The loan to value of The user\n @return healthFactor The current health factor of the user"
									},
									"functionSelector": "bf92857c",
									"id": 408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserAccountData",
									"nameLocation": "22042:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "22074:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "22066:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22066:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22060:22:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "totalCollateralBase",
												"nameLocation": "22133:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "22125:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "totalDebtBase",
												"nameLocation": "22168:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "22160:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22160:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "availableBorrowsBase",
												"nameLocation": "22197:20:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "22189:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "currentLiquidationThreshold",
												"nameLocation": "22233:27:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "22225:35:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "ltv",
												"nameLocation": "22276:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "22268:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22268:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "healthFactor",
												"nameLocation": "22295:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "22287:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22287:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22117:196:0"
									},
									"scope": 638,
									"src": "22033:281:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "22318:645:0",
										"text": " @notice Initializes a reserve, activating it, assigning an aToken and debt tokens and an\n interest rate strategy\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param aTokenAddress The address of the aToken that will be assigned to the reserve\n @param stableDebtAddress The address of the StableDebtToken that will be assigned to the reserve\n @param variableDebtAddress The address of the VariableDebtToken that will be assigned to the reserve\n @param interestRateStrategyAddress The address of the interest rate strategy contract"
									},
									"functionSelector": "7a708e92",
									"id": 422,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initReserve",
									"nameLocation": "22975:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "23000:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "22992:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22992:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "aTokenAddress",
												"nameLocation": "23019:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "23011:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23011:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "stableDebtAddress",
												"nameLocation": "23046:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "23038:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23038:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "variableDebtAddress",
												"nameLocation": "23077:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "23069:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23069:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "interestRateStrategyAddress",
												"nameLocation": "23110:27:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "23102:35:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22986:155:0"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23150:0:0"
									},
									"scope": 638,
									"src": "22966:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "23155:163:0",
										"text": " @notice Drop a reserve\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve"
									},
									"functionSelector": "63c9b860",
									"id": 428,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "dropReserve",
									"nameLocation": "23330:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "23350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "23342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23342:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23341:15:0"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23365:0:0"
									},
									"scope": 638,
									"src": "23321:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "23370:290:0",
										"text": " @notice Updates the address of the interest rate strategy contract\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param rateStrategyAddress The address of the interest rate strategy contract"
									},
									"functionSelector": "1d2118f9",
									"id": 436,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setReserveInterestRateStrategyAddress",
									"nameLocation": "23672:37:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "23723:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "23715:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "rateStrategyAddress",
												"nameLocation": "23742:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "23734:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23734:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23709:56:0"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23774:0:0"
									},
									"scope": 638,
									"src": "23663:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "23779:259:0",
										"text": " @notice Sets the configuration bitmap of the reserve as a whole\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param configuration The new configuration bitmap"
									},
									"functionSelector": "f51e435b",
									"id": 445,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setConfiguration",
									"nameLocation": "24050:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "24080:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "24072:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24072:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "configuration",
												"nameLocation": "24134:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "24091:56:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$884_calldata_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"id": 441,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 440,
														"name": "DataTypes.ReserveConfigurationMap",
														"nameLocations": [
															"24091:9:0",
															"24101:23:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 884,
														"src": "24091:33:0"
													},
													"referencedDeclaration": 884,
													"src": "24091:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$884_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24066:85:0"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24160:0:0"
									},
									"scope": 638,
									"src": "24041:120:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "24165:178:0",
										"text": " @notice Returns the configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The configuration of the reserve"
									},
									"functionSelector": "c44b11f7",
									"id": 454,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getConfiguration",
									"nameLocation": "24355:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "24385:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "24377:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24377:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24371:23:0"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "24418:40:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$884_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"id": 451,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 450,
														"name": "DataTypes.ReserveConfigurationMap",
														"nameLocations": [
															"24418:9:0",
															"24428:23:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 884,
														"src": "24418:33:0"
													},
													"referencedDeclaration": 884,
													"src": "24418:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$884_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24417:42:0"
									},
									"scope": 638,
									"src": "24346:114:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "24464:161:0",
										"text": " @notice Returns the configuration of the user across all the reserves\n @param user The user address\n @return The configuration of the user"
									},
									"functionSelector": "4417a583",
									"id": 463,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserConfiguration",
									"nameLocation": "24637:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "24671:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "24663:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24657:22:0"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "24703:37:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserConfigurationMap_$888_memory_ptr",
													"typeString": "struct DataTypes.UserConfigurationMap"
												},
												"typeName": {
													"id": 460,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 459,
														"name": "DataTypes.UserConfigurationMap",
														"nameLocations": [
															"24703:9:0",
															"24713:20:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 888,
														"src": "24703:30:0"
													},
													"referencedDeclaration": 888,
													"src": "24703:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserConfigurationMap_$888_storage_ptr",
														"typeString": "struct DataTypes.UserConfigurationMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24702:39:0"
									},
									"scope": 638,
									"src": "24628:114:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "24746:181:0",
										"text": " @notice Returns the normalized income of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The reserve's normalized income"
									},
									"functionSelector": "d15e0053",
									"id": 471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveNormalizedIncome",
									"nameLocation": "24939:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "24974:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "24966:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24966:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24965:15:0"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "25004:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25003:9:0"
									},
									"scope": 638,
									"src": "24930:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "25017:805:0",
										"text": " @notice Returns the normalized variable debt per unit of asset\n @dev WARNING: This function is intended to be used primarily by the protocol itself to get a\n \"dynamic\" variable index based on time, current stored index and virtual rate at the current\n moment (approx. a borrower would get if opening a position). This means that is always used in\n combination with variable debt supply/balances.\n If using this function externally, consider that is possible to have an increasing normalized\n variable debt that is not equivalent to how the variable debt index would be updated in storage\n (e.g. only updates with non-zero variable debt supply)\n @param asset The address of the underlying asset of the reserve\n @return The reserve normalized variable debt"
									},
									"functionSelector": "386497fd",
									"id": 479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveNormalizedVariableDebt",
									"nameLocation": "25834:32:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "25875:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "25867:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25867:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25866:15:0"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "25905:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25905:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25904:9:0"
									},
									"scope": 638,
									"src": "25825:89:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 480,
										"nodeType": "StructuredDocumentation",
										"src": "25918:203:0",
										"text": " @notice Returns the state and configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The state and configuration data of the reserve"
									},
									"functionSelector": "35ea6a75",
									"id": 488,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveData",
									"nameLocation": "26133:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "26156:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "26148:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26148:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26147:15:0"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "26186:28:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveData_$881_memory_ptr",
													"typeString": "struct DataTypes.ReserveData"
												},
												"typeName": {
													"id": 485,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 484,
														"name": "DataTypes.ReserveData",
														"nameLocations": [
															"26186:9:0",
															"26196:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "26186:21:0"
													},
													"referencedDeclaration": 881,
													"src": "26186:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveData_$881_storage_ptr",
														"typeString": "struct DataTypes.ReserveData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26185:30:0"
									},
									"scope": 638,
									"src": "26124:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "26220:537:0",
										"text": " @notice Validates and finalizes an aToken transfer\n @dev Only callable by the overlying aToken of the `asset`\n @param asset The address of the underlying asset of the aToken\n @param from The user from which the aTokens are transferred\n @param to The user receiving the aTokens\n @param amount The amount being transferred/withdrawn\n @param balanceFromBefore The aToken balance of the `from` user before the transfer\n @param balanceToBefore The aToken balance of the `to` user before the transfer"
									},
									"functionSelector": "d5ed3933",
									"id": 504,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "finalizeTransfer",
									"nameLocation": "26769:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "26799:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "26791:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26818:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "26810:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26836:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "26828:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26828:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "26852:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "26844:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26844:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "balanceFromBefore",
												"nameLocation": "26872:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "26864:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "balanceToBefore",
												"nameLocation": "26903:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "26895:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26895:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26785:137:0"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26931:0:0"
									},
									"scope": 638,
									"src": "26760:172:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "26936:223:0",
										"text": " @notice Returns the list of the underlying assets of all the initialized reserves\n @dev It does not include dropped reserves\n @return The addresses of the underlying assets of the initialized reserves"
									},
									"functionSelector": "d1946dbc",
									"id": 511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReservesList",
									"nameLocation": "27171:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27186:2:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "27212:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 507,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "27212:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 508,
													"nodeType": "ArrayTypeName",
													"src": "27212:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27211:18:0"
									},
									"scope": 638,
									"src": "27162:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "27234:285:0",
										"text": " @notice Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct\n @param id The id of the reserve as stored in the DataTypes.ReserveData struct\n @return The address of the reserve associated with id"
									},
									"functionSelector": "52751797",
									"id": 519,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveAddressById",
									"nameLocation": "27531:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "27560:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "27553:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 513,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "27553:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27552:11:0"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "27587:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27587:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27586:9:0"
									},
									"scope": 638,
									"src": "27522:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "27600:137:0",
										"text": " @notice Returns the PoolAddressesProvider connected to this contract\n @return The address of the PoolAddressesProvider"
									},
									"functionSelector": "0542975c",
									"id": 526,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ADDRESSES_PROVIDER",
									"nameLocation": "27749:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27767:2:0"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "27793:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPoolAddressesProvider_$847",
													"typeString": "contract IPoolAddressesProvider"
												},
												"typeName": {
													"id": 523,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 522,
														"name": "IPoolAddressesProvider",
														"nameLocations": [
															"27793:22:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 847,
														"src": "27793:22:0"
													},
													"referencedDeclaration": 847,
													"src": "27793:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolAddressesProvider_$847",
														"typeString": "contract IPoolAddressesProvider"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27792:24:0"
									},
									"scope": 638,
									"src": "27740:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "27821:147:0",
										"text": " @notice Updates the protocol fee on the bridging\n @param bridgeProtocolFee The part of the premium sent to the protocol treasury"
									},
									"functionSelector": "3036b439",
									"id": 532,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateBridgeProtocolFee",
									"nameLocation": "27980:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "bridgeProtocolFee",
												"nameLocation": "28012:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "28004:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28003:27:0"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28039:0:0"
									},
									"scope": 638,
									"src": "27971:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "28044:650:0",
										"text": " @notice Updates flash loan premiums. Flash loan premium consists of two parts:\n - A part is sent to aToken holders as extra, one time accumulated interest\n - A part is collected by the protocol treasury\n @dev The total premium is calculated on the total borrowed amount\n @dev The premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`\n @dev Only callable by the PoolConfigurator contract\n @param flashLoanPremiumTotal The total premium, expressed in bps\n @param flashLoanPremiumToProtocol The part of the premium sent to the protocol treasury, expressed in bps"
									},
									"functionSelector": "bcb6e522",
									"id": 540,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateFlashloanPremiums",
									"nameLocation": "28706:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "flashLoanPremiumTotal",
												"nameLocation": "28743:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "28735:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 534,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "28735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "flashLoanPremiumToProtocol",
												"nameLocation": "28778:26:0",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "28770:34:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 536,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "28770:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28729:79:0"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28817:0:0"
									},
									"scope": 638,
									"src": "28697:121:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "28822:331:0",
										"text": " @notice Configures a new category for the eMode.\n @dev In eMode, the protocol allows very high borrowing power to borrow assets of the same category.\n The category 0 is reserved as it's the default for volatile assets\n @param id The id of the category\n @param config The configuration of the category"
									},
									"functionSelector": "d579ea7d",
									"id": 549,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "configureEModeCategory",
									"nameLocation": "29165:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "29194:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "29188:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 542,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "29188:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "config",
												"nameLocation": "29229:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "29198:37:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_EModeCategory_$899_memory_ptr",
													"typeString": "struct DataTypes.EModeCategory"
												},
												"typeName": {
													"id": 545,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 544,
														"name": "DataTypes.EModeCategory",
														"nameLocations": [
															"29198:9:0",
															"29208:13:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 899,
														"src": "29198:23:0"
													},
													"referencedDeclaration": 899,
													"src": "29198:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EModeCategory_$899_storage_ptr",
														"typeString": "struct DataTypes.EModeCategory"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29187:49:0"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29245:0:0"
									},
									"scope": 638,
									"src": "29156:90:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "29250:150:0",
										"text": " @notice Returns the data of an eMode category\n @param id The id of the category\n @return The configuration data of the category"
									},
									"functionSelector": "6c6f6ae1",
									"id": 558,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getEModeCategoryData",
									"nameLocation": "29412:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "29439:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "29433:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 551,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "29433:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29432:10:0"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "29466:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_EModeCategory_$899_memory_ptr",
													"typeString": "struct DataTypes.EModeCategory"
												},
												"typeName": {
													"id": 555,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 554,
														"name": "DataTypes.EModeCategory",
														"nameLocations": [
															"29466:9:0",
															"29476:13:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 899,
														"src": "29466:23:0"
													},
													"referencedDeclaration": 899,
													"src": "29466:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EModeCategory_$899_storage_ptr",
														"typeString": "struct DataTypes.EModeCategory"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29465:32:0"
									},
									"scope": 638,
									"src": "29403:95:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "29502:111:0",
										"text": " @notice Allows a user to use the protocol in eMode\n @param categoryId The id of the category"
									},
									"functionSelector": "28530a47",
									"id": 564,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setUserEMode",
									"nameLocation": "29625:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "categoryId",
												"nameLocation": "29644:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "29638:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 560,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "29638:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29637:18:0"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29664:0:0"
									},
									"scope": 638,
									"src": "29616:49:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "29669:125:0",
										"text": " @notice Returns the eMode the user is using\n @param user The address of the user\n @return The eMode id"
									},
									"functionSelector": "eddf1b79",
									"id": 572,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserEMode",
									"nameLocation": "29806:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "29827:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "29819:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29819:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29818:14:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "29856:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29856:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29855:9:0"
									},
									"scope": 638,
									"src": "29797:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "29869:236:0",
										"text": " @notice Resets the isolation mode total debt of the given asset to zero\n @dev It requires the given asset has zero debt ceiling\n @param asset The address of the underlying asset to reset the isolationModeTotalDebt"
									},
									"functionSelector": "e43e88a1",
									"id": 578,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "resetIsolationModeTotalDebt",
									"nameLocation": "30117:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "30153:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "30145:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30145:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30144:15:0"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30168:0:0"
									},
									"scope": 638,
									"src": "30108:61:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "30173:191:0",
										"text": " @notice Returns the percentage of available liquidity that can be borrowed at once at stable rate\n @return The percentage of available liquidity to borrow, expressed in bps"
									},
									"functionSelector": "e82fec2f",
									"id": 584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MAX_STABLE_RATE_BORROW_SIZE_PERCENT",
									"nameLocation": "30376:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30411:2:0"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "30437:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30437:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30436:9:0"
									},
									"scope": 638,
									"src": "30367:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "30450:100:0",
										"text": " @notice Returns the total fee on flash loans\n @return The total fee on flashloans"
									},
									"functionSelector": "074b2e43",
									"id": 590,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "FLASHLOAN_PREMIUM_TOTAL",
									"nameLocation": "30562:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30585:2:0"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "30611:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 587,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "30611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30610:9:0"
									},
									"scope": 638,
									"src": "30553:67:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "30624:133:0",
										"text": " @notice Returns the part of the bridge fees sent to protocol\n @return The bridge fee sent to the protocol treasury"
									},
									"functionSelector": "272d9072",
									"id": 596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "BRIDGE_PROTOCOL_FEE",
									"nameLocation": "30769:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30788:2:0"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "30814:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30814:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30813:9:0"
									},
									"scope": 638,
									"src": "30760:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "30827:139:0",
										"text": " @notice Returns the part of the flashloan fees sent to protocol\n @return The flashloan fee sent to the protocol treasury"
									},
									"functionSelector": "6a99c036",
									"id": 602,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "FLASHLOAN_PREMIUM_TO_PROTOCOL",
									"nameLocation": "30978:29:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31007:2:0"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "31033:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 599,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "31033:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31032:9:0"
									},
									"scope": 638,
									"src": "30969:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "31046:151:0",
										"text": " @notice Returns the maximum number of reserves supported to be listed in this Pool\n @return The maximum number of reserves supported"
									},
									"functionSelector": "f8119d51",
									"id": 608,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MAX_NUMBER_RESERVES",
									"nameLocation": "31209:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31228:2:0"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "31254:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 605,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "31254:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31253:8:0"
									},
									"scope": 638,
									"src": "31200:62:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "31266:196:0",
										"text": " @notice Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\n @param assets The list of reserves for which the minting needs to be executed"
									},
									"functionSelector": "9cd19996",
									"id": 615,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintToTreasury",
									"nameLocation": "31474:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "31508:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "31489:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 610,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "31489:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 611,
													"nodeType": "ArrayTypeName",
													"src": "31489:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31488:27:0"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31524:0:0"
									},
									"scope": 638,
									"src": "31465:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "31529:211:0",
										"text": " @notice Rescue and transfer tokens locked in this contract\n @param token The address of the token\n @param to The address of the recipient\n @param amount The amount of token to transfer"
									},
									"functionSelector": "cea9d26f",
									"id": 625,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rescueTokens",
									"nameLocation": "31752:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "31773:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "31765:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31788:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "31780:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31780:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "31800:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "31792:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31792:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31764:43:0"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31816:0:0"
									},
									"scope": 638,
									"src": "31743:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "31821:768:0",
										"text": " @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n @dev Deprecated: Use the `supply` function instead\n @param asset The address of the underlying asset to supply\n @param amount The amount to be supplied\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"
									},
									"functionSelector": "e8eda9df",
									"id": 637,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "32601:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "32617:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "32609:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "32632:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "32624:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "32648:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "32640:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32640:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "32667:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "32660:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 633,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "32660:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32608:72:0"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32689:0:0"
									},
									"scope": 638,
									"src": "32592:98:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 639,
							"src": "298:32394:0",
							"usedErrors": [],
							"usedEvents": [
								19,
								30,
								43,
								54,
								72,
								85,
								95,
								102,
								109,
								116,
								123,
								130,
								148,
								165,
								180,
								187
							]
						}
					],
					"src": "37:32656:0"
				},
				"id": 0
			},
			"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol": {
				"ast": {
					"absolutePath": "@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol",
					"exportedSymbols": {
						"IPoolAddressesProvider": [
							847
						]
					},
					"id": 848,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 640,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPoolAddressesProvider",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 641,
								"nodeType": "StructuredDocumentation",
								"src": "62:126:1",
								"text": " @title IPoolAddressesProvider\n @author Aave\n @notice Defines the basic interface for a Pool Addresses Provider."
							},
							"fullyImplemented": false,
							"id": 847,
							"linearizedBaseContracts": [
								847
							],
							"name": "IPoolAddressesProvider",
							"nameLocation": "199:22:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "226:164:1",
										"text": " @dev Emitted when the market identifier is updated.\n @param oldMarketId The old id of the market\n @param newMarketId The new id of the market"
									},
									"eventSelector": "e685c8cdecc6030c45030fd54778812cb84ed8e4467c38294403d68ba7860823",
									"id": 648,
									"name": "MarketIdSet",
									"nameLocation": "399:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldMarketId",
												"nameLocation": "426:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "411:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 643,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "411:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"indexed": true,
												"mutability": "mutable",
												"name": "newMarketId",
												"nameLocation": "454:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "439:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 645,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "439:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "410:56:1"
									},
									"src": "393:74:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "471:155:1",
										"text": " @dev Emitted when the pool is updated.\n @param oldAddress The old address of the Pool\n @param newAddress The new address of the Pool"
									},
									"eventSelector": "90affc163f1a2dfedcd36aa02ed992eeeba8100a4014f0b4cdc20ea265a66627",
									"id": 655,
									"name": "PoolUpdated",
									"nameLocation": "635:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "663:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "647:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "691:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "675:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:56:1"
									},
									"src": "629:74:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "707:192:1",
										"text": " @dev Emitted when the pool configurator is updated.\n @param oldAddress The old address of the PoolConfigurator\n @param newAddress The new address of the PoolConfigurator"
									},
									"eventSelector": "8932892569eba59c8382a089d9b732d1f49272878775235761a2a6b0309cd465",
									"id": 662,
									"name": "PoolConfiguratorUpdated",
									"nameLocation": "908:23:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "948:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "932:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "976:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "960:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "960:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:56:1"
									},
									"src": "902:86:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "992:177:1",
										"text": " @dev Emitted when the price oracle is updated.\n @param oldAddress The old address of the PriceOracle\n @param newAddress The new address of the PriceOracle"
									},
									"eventSelector": "56b5f80d8cac1479698aa7d01605fd6111e90b15fc4d2b377417f46034876cbd",
									"id": 669,
									"name": "PriceOracleUpdated",
									"nameLocation": "1178:18:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "1213:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "1197:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1197:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "1241:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "1225:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1225:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1196:56:1"
									},
									"src": "1172:81:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "1257:174:1",
										"text": " @dev Emitted when the ACL manager is updated.\n @param oldAddress The old address of the ACLManager\n @param newAddress The new address of the ACLManager"
									},
									"eventSelector": "b30efa04327bb8a537d61cc1e5c48095345ad18ef7cc04e6bacf7dfb6caaf507",
									"id": 676,
									"name": "ACLManagerUpdated",
									"nameLocation": "1440:17:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "1474:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "1458:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1458:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "1502:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "1486:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1457:56:1"
									},
									"src": "1434:80:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "1518:168:1",
										"text": " @dev Emitted when the ACL admin is updated.\n @param oldAddress The old address of the ACLAdmin\n @param newAddress The new address of the ACLAdmin"
									},
									"eventSelector": "e9cf53972264dc95304fd424458745019ddfca0e37ae8f703d74772c41ad115b",
									"id": 683,
									"name": "ACLAdminUpdated",
									"nameLocation": "1695:15:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "1727:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1711:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "1755:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1739:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1710:56:1"
									},
									"src": "1689:78:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "1771:202:1",
										"text": " @dev Emitted when the price oracle sentinel is updated.\n @param oldAddress The old address of the PriceOracleSentinel\n @param newAddress The new address of the PriceOracleSentinel"
									},
									"eventSelector": "5326514eeca90494a14bedabcff812a0e683029ee85d1e23824d44fd14cd6ae7",
									"id": 690,
									"name": "PriceOracleSentinelUpdated",
									"nameLocation": "1982:26:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "2025:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "2009:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "2053:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "2037:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2037:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:56:1"
									},
									"src": "1976:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "2069:193:1",
										"text": " @dev Emitted when the pool data provider is updated.\n @param oldAddress The old address of the PoolDataProvider\n @param newAddress The new address of the PoolDataProvider"
									},
									"eventSelector": "c853974cfbf81487a14a23565917bee63f527853bcb5fa54f2ae1cdf8a38356d",
									"id": 697,
									"name": "PoolDataProviderUpdated",
									"nameLocation": "2271:23:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "2311:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "2295:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2295:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "2339:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "2323:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2323:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2294:56:1"
									},
									"src": "2265:86:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "2355:243:1",
										"text": " @dev Emitted when a new proxy is created.\n @param id The identifier of the proxy\n @param proxyAddress The address of the created proxy contract\n @param implementationAddress The address of the implementation contract"
									},
									"eventSelector": "4a465a9bd819d9662563c1e11ae958f8109e437e7f4bf1c6ef0b9a7b3f35d478",
									"id": 706,
									"name": "ProxyCreated",
									"nameLocation": "2607:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2641:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "2625:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 699,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2625:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"indexed": true,
												"mutability": "mutable",
												"name": "proxyAddress",
												"nameLocation": "2665:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "2649:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2649:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementationAddress",
												"nameLocation": "2699:21:1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "2683:37:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2619:105:1"
									},
									"src": "2601:124:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "2729:238:1",
										"text": " @dev Emitted when a new non-proxied contract address is registered.\n @param id The identifier of the contract\n @param oldAddress The address of the old contract\n @param newAddress The address of the new contract"
									},
									"eventSelector": "9ef0e8c8e52743bb38b83b17d9429141d494b8041ca6d616a6c77cebae9cd8b7",
									"id": 715,
									"name": "AddressSet",
									"nameLocation": "2976:10:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3003:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "2987:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 708,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2987:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "3023:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "3007:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "3051:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "3035:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3035:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2986:76:1"
									},
									"src": "2970:93:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "3067:367:1",
										"text": " @dev Emitted when the implementation of the proxy registered with id is updated\n @param id The identifier of the contract\n @param proxyAddress The address of the proxy contract\n @param oldImplementationAddress The address of the old implementation contract\n @param newImplementationAddress The address of the new implementation contract"
									},
									"eventSelector": "3bbd45b5429b385e3fb37ad5cd1cd1435a3c8ec32196c7937597365a3fd3e99c",
									"id": 726,
									"name": "AddressSetAsProxy",
									"nameLocation": "3443:17:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3482:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "3466:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 717,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"indexed": true,
												"mutability": "mutable",
												"name": "proxyAddress",
												"nameLocation": "3506:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "3490:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3490:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldImplementationAddress",
												"nameLocation": "3532:24:1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "3524:32:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3524:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"indexed": true,
												"mutability": "mutable",
												"name": "newImplementationAddress",
												"nameLocation": "3578:24:1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "3562:40:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3460:146:1"
									},
									"src": "3437:170:1"
								},
								{
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "3611:117:1",
										"text": " @notice Returns the id of the Aave market to which this contract points to.\n @return The market id"
									},
									"functionSelector": "568ef470",
									"id": 732,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMarketId",
									"nameLocation": "3740:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3751:2:1"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "3777:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 729,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3777:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:15:1"
									},
									"scope": 847,
									"src": "3731:61:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "3796:252:1",
										"text": " @notice Associates an id with a specific PoolAddressesProvider.\n @dev This can be used to create an onchain registry of PoolAddressesProviders to\n identify and validate multiple Aave markets.\n @param newMarketId The market id"
									},
									"functionSelector": "f67b1847",
									"id": 738,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMarketId",
									"nameLocation": "4060:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "newMarketId",
												"nameLocation": "4088:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "4072:27:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 734,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4072:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4071:29:1"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4109:0:1"
									},
									"scope": 847,
									"src": "4051:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 739,
										"nodeType": "StructuredDocumentation",
										"src": "4114:306:1",
										"text": " @notice Returns an address by its identifier.\n @dev The returned address might be an EOA or a contract, potentially proxied\n @dev It returns ZERO if there is no registered address with the given id\n @param id The id\n @return The address of the registered for the specified id"
									},
									"functionSelector": "21f8a721",
									"id": 746,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAddress",
									"nameLocation": "4432:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "4451:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "4443:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 740,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:12:1"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "4478:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4477:9:1"
									},
									"scope": 847,
									"src": "4423:64:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "4491:485:1",
										"text": " @notice General function to update the implementation of a proxy registered with\n certain `id`. If there is no proxy registered, it will instantiate one and\n set as implementation the `newImplementationAddress`.\n @dev IMPORTANT Use this function carefully, only for ids that don't have an explicit\n setter function, in order to avoid unexpected consequences\n @param id The id\n @param newImplementationAddress The address of the new implementation"
									},
									"functionSelector": "5dcc528c",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddressAsProxy",
									"nameLocation": "4988:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5014:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "5006:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 748,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5006:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "newImplementationAddress",
												"nameLocation": "5026:24:1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "5018:32:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5018:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5005:46:1"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5060:0:1"
									},
									"scope": 847,
									"src": "4979:82:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "5065:244:1",
										"text": " @notice Sets an address for an id replacing the address saved in the addresses map.\n @dev IMPORTANT Use this function carefully, as it will do a hard replacement\n @param id The id\n @param newAddress The address to set"
									},
									"functionSelector": "ca446dd9",
									"id": 762,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddress",
									"nameLocation": "5321:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5340:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "5332:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 756,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5332:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "5352:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "5344:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5344:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5331:32:1"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5372:0:1"
									},
									"scope": 847,
									"src": "5312:61:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "5377:97:1",
										"text": " @notice Returns the address of the Pool proxy.\n @return The Pool proxy address"
									},
									"functionSelector": "026b1d5f",
									"id": 768,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nameLocation": "5486:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5493:2:1"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "5519:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5519:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5518:9:1"
									},
									"scope": 847,
									"src": "5477:51:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 769,
										"nodeType": "StructuredDocumentation",
										"src": "5532:224:1",
										"text": " @notice Updates the implementation of the Pool, or creates a proxy\n setting the new `pool` implementation when the function is called for the first time.\n @param newPoolImpl The new Pool implementation"
									},
									"functionSelector": "a1564406",
									"id": 774,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPoolImpl",
									"nameLocation": "5768:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "newPoolImpl",
												"nameLocation": "5788:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "5780:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5780:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5779:21:1"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5809:0:1"
									},
									"scope": 847,
									"src": "5759:51:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "5814:121:1",
										"text": " @notice Returns the address of the PoolConfigurator proxy.\n @return The PoolConfigurator proxy address"
									},
									"functionSelector": "631adfca",
									"id": 780,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolConfigurator",
									"nameLocation": "5947:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5966:2:1"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "5992:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5992:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:9:1"
									},
									"scope": 847,
									"src": "5938:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "6005:272:1",
										"text": " @notice Updates the implementation of the PoolConfigurator, or creates a proxy\n setting the new `PoolConfigurator` implementation when the function is called for the first time.\n @param newPoolConfiguratorImpl The new PoolConfigurator implementation"
									},
									"functionSelector": "e4ca28b7",
									"id": 786,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPoolConfiguratorImpl",
									"nameLocation": "6289:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "newPoolConfiguratorImpl",
												"nameLocation": "6321:23:1",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "6313:31:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6313:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:33:1"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6354:0:1"
									},
									"scope": 847,
									"src": "6280:75:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "6359:107:1",
										"text": " @notice Returns the address of the price oracle.\n @return The address of the PriceOracle"
									},
									"functionSelector": "fca513a8",
									"id": 792,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceOracle",
									"nameLocation": "6478:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6492:2:1"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "6518:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6518:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:9:1"
									},
									"scope": 847,
									"src": "6469:58:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "6531:125:1",
										"text": " @notice Updates the address of the price oracle.\n @param newPriceOracle The address of the new PriceOracle"
									},
									"functionSelector": "530e784f",
									"id": 798,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPriceOracle",
									"nameLocation": "6668:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "newPriceOracle",
												"nameLocation": "6691:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "6683:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6683:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6682:24:1"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6715:0:1"
									},
									"scope": 847,
									"src": "6659:57:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "6720:105:1",
										"text": " @notice Returns the address of the ACL manager.\n @return The address of the ACLManager"
									},
									"functionSelector": "707cd716",
									"id": 804,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getACLManager",
									"nameLocation": "6837:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6850:2:1"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "6876:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6876:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6875:9:1"
									},
									"scope": 847,
									"src": "6828:57:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "6889:122:1",
										"text": " @notice Updates the address of the ACL manager.\n @param newAclManager The address of the new ACLManager"
									},
									"functionSelector": "ed301ca9",
									"id": 810,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setACLManager",
									"nameLocation": "7023:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "newAclManager",
												"nameLocation": "7045:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "7037:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7037:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7036:23:1"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7068:0:1"
									},
									"scope": 847,
									"src": "7014:55:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "7073:102:1",
										"text": " @notice Returns the address of the ACL admin.\n @return The address of the ACL admin"
									},
									"functionSelector": "0e67178c",
									"id": 816,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getACLAdmin",
									"nameLocation": "7187:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7198:2:1"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "7224:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7224:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7223:9:1"
									},
									"scope": 847,
									"src": "7178:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 817,
										"nodeType": "StructuredDocumentation",
										"src": "7237:117:1",
										"text": " @notice Updates the address of the ACL admin.\n @param newAclAdmin The address of the new ACL admin"
									},
									"functionSelector": "76d84ffc",
									"id": 822,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setACLAdmin",
									"nameLocation": "7366:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "newAclAdmin",
												"nameLocation": "7386:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "7378:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7378:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7377:21:1"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7407:0:1"
									},
									"scope": 847,
									"src": "7357:51:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "7412:124:1",
										"text": " @notice Returns the address of the price oracle sentinel.\n @return The address of the PriceOracleSentinel"
									},
									"functionSelector": "5eb88d3d",
									"id": 828,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceOracleSentinel",
									"nameLocation": "7548:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7570:2:1"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "7596:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7596:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7595:9:1"
									},
									"scope": 847,
									"src": "7539:66:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "7609:150:1",
										"text": " @notice Updates the address of the price oracle sentinel.\n @param newPriceOracleSentinel The address of the new PriceOracleSentinel"
									},
									"functionSelector": "74944cec",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPriceOracleSentinel",
									"nameLocation": "7771:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "newPriceOracleSentinel",
												"nameLocation": "7802:22:1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "7794:30:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7794:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7793:32:1"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7834:0:1"
									},
									"scope": 847,
									"src": "7762:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "7839:109:1",
										"text": " @notice Returns the address of the data provider.\n @return The address of the DataProvider"
									},
									"functionSelector": "e860accb",
									"id": 840,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolDataProvider",
									"nameLocation": "7960:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7979:2:1"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "8005:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8005:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8004:9:1"
									},
									"scope": 847,
									"src": "7951:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "8018:128:1",
										"text": " @notice Updates the address of the data provider.\n @param newDataProvider The address of the new DataProvider"
									},
									"functionSelector": "e44e9ed1",
									"id": 846,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPoolDataProvider",
									"nameLocation": "8158:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "newDataProvider",
												"nameLocation": "8186:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "8178:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8178:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8177:25:1"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8211:0:1"
									},
									"scope": 847,
									"src": "8149:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 848,
							"src": "189:8025:1",
							"usedErrors": [],
							"usedEvents": [
								648,
								655,
								662,
								669,
								676,
								683,
								690,
								697,
								706,
								715,
								726
							]
						}
					],
					"src": "37:8178:1"
				},
				"id": 1
			},
			"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol": {
				"ast": {
					"absolutePath": "@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol",
					"exportedSymbols": {
						"DataTypes": [
							1199
						]
					},
					"id": 1200,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 849,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DataTypes",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1199,
							"linearizedBaseContracts": [
								1199
							],
							"name": "DataTypes",
							"nameLocation": "70:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DataTypes.ReserveData",
									"id": 881,
									"members": [
										{
											"constant": false,
											"id": 852,
											"mutability": "mutable",
											"name": "configuration",
											"nameLocation": "172:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "148:37:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ReserveConfigurationMap_$884_storage_ptr",
												"typeString": "struct DataTypes.ReserveConfigurationMap"
											},
											"typeName": {
												"id": 851,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 850,
													"name": "ReserveConfigurationMap",
													"nameLocations": [
														"148:23:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 884,
													"src": "148:23:2"
												},
												"referencedDeclaration": 884,
												"src": "148:23:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$884_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 854,
											"mutability": "mutable",
											"name": "liquidityIndex",
											"nameLocation": "243:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "235:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 853,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "235:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 856,
											"mutability": "mutable",
											"name": "currentLiquidityRate",
											"nameLocation": "319:20:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "311:28:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 855,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "311:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 858,
											"mutability": "mutable",
											"name": "variableBorrowIndex",
											"nameLocation": "399:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "391:27:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 857,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "391:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 860,
											"mutability": "mutable",
											"name": "currentVariableBorrowRate",
											"nameLocation": "489:25:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "481:33:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 859,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "481:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 862,
											"mutability": "mutable",
											"name": "currentStableBorrowRate",
											"nameLocation": "583:23:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "575:31:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 861,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 864,
											"mutability": "mutable",
											"name": "lastUpdateTimestamp",
											"nameLocation": "650:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "643:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint40",
												"typeString": "uint40"
											},
											"typeName": {
												"id": 863,
												"name": "uint40",
												"nodeType": "ElementaryTypeName",
												"src": "643:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 866,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "770:2:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "763:9:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 865,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "763:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 868,
											"mutability": "mutable",
											"name": "aTokenAddress",
											"nameLocation": "807:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "799:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 867,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "799:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 870,
											"mutability": "mutable",
											"name": "stableDebtTokenAddress",
											"nameLocation": "864:22:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "856:30:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 869,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "856:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 872,
											"mutability": "mutable",
											"name": "variableDebtTokenAddress",
											"nameLocation": "932:24:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "924:32:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 871,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "924:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 874,
											"mutability": "mutable",
											"name": "interestRateStrategyAddress",
											"nameLocation": "1014:27:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "1006:35:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 873,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1006:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 876,
											"mutability": "mutable",
											"name": "accruedToTreasury",
											"nameLocation": "1098:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "1090:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 875,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1090:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 878,
											"mutability": "mutable",
											"name": "unbacked",
											"nameLocation": "1204:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "1196:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 877,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1196:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 880,
											"mutability": "mutable",
											"name": "isolationModeTotalDebt",
											"nameLocation": "1299:22:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "1291:30:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 879,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1291:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReserveData",
									"nameLocation": "91:11:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "84:1242:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ReserveConfigurationMap",
									"id": 884,
									"members": [
										{
											"constant": false,
											"id": 883,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "2260:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 884,
											"src": "2252:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 882,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2252:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReserveConfigurationMap",
									"nameLocation": "1337:23:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "1330:939:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.UserConfigurationMap",
									"id": 888,
									"members": [
										{
											"constant": false,
											"id": 887,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "2578:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 888,
											"src": "2570:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 886,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2570:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserConfigurationMap",
									"nameLocation": "2280:20:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "2273:314:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.EModeCategory",
									"id": 899,
									"members": [
										{
											"constant": false,
											"id": 890,
											"mutability": "mutable",
											"name": "ltv",
											"nameLocation": "2695:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 899,
											"src": "2688:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 889,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "2688:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 892,
											"mutability": "mutable",
											"name": "liquidationThreshold",
											"nameLocation": "2711:20:2",
											"nodeType": "VariableDeclaration",
											"scope": 899,
											"src": "2704:27:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 891,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "2704:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 894,
											"mutability": "mutable",
											"name": "liquidationBonus",
											"nameLocation": "2744:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 899,
											"src": "2737:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 893,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "2737:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 896,
											"mutability": "mutable",
											"name": "priceSource",
											"nameLocation": "2885:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 899,
											"src": "2877:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 895,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2877:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 898,
											"mutability": "mutable",
											"name": "label",
											"nameLocation": "2909:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 899,
											"src": "2902:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 897,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2902:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "EModeCategory",
									"nameLocation": "2598:13:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "2591:328:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.InterestRateMode",
									"id": 903,
									"members": [
										{
											"id": 900,
											"name": "NONE",
											"nameLocation": "2946:4:2",
											"nodeType": "EnumValue",
											"src": "2946:4:2"
										},
										{
											"id": 901,
											"name": "STABLE",
											"nameLocation": "2952:6:2",
											"nodeType": "EnumValue",
											"src": "2952:6:2"
										},
										{
											"id": 902,
											"name": "VARIABLE",
											"nameLocation": "2960:8:2",
											"nodeType": "EnumValue",
											"src": "2960:8:2"
										}
									],
									"name": "InterestRateMode",
									"nameLocation": "2928:16:2",
									"nodeType": "EnumDefinition",
									"src": "2923:46:2"
								},
								{
									"canonicalName": "DataTypes.ReserveCache",
									"id": 945,
									"members": [
										{
											"constant": false,
											"id": 905,
											"mutability": "mutable",
											"name": "currScaledVariableDebt",
											"nameLocation": "3007:22:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "2999:30:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 904,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2999:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 907,
											"mutability": "mutable",
											"name": "nextScaledVariableDebt",
											"nameLocation": "3043:22:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3035:30:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 906,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3035:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 909,
											"mutability": "mutable",
											"name": "currPrincipalStableDebt",
											"nameLocation": "3079:23:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3071:31:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 908,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3071:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 911,
											"mutability": "mutable",
											"name": "currAvgStableBorrowRate",
											"nameLocation": "3116:23:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3108:31:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 910,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3108:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 913,
											"mutability": "mutable",
											"name": "currTotalStableDebt",
											"nameLocation": "3153:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3145:27:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 912,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3145:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 915,
											"mutability": "mutable",
											"name": "nextAvgStableBorrowRate",
											"nameLocation": "3186:23:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3178:31:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 914,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3178:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 917,
											"mutability": "mutable",
											"name": "nextTotalStableDebt",
											"nameLocation": "3223:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3215:27:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 916,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3215:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 919,
											"mutability": "mutable",
											"name": "currLiquidityIndex",
											"nameLocation": "3256:18:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3248:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 918,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3248:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 921,
											"mutability": "mutable",
											"name": "nextLiquidityIndex",
											"nameLocation": "3288:18:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3280:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 920,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 923,
											"mutability": "mutable",
											"name": "currVariableBorrowIndex",
											"nameLocation": "3320:23:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3312:31:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 922,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3312:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 925,
											"mutability": "mutable",
											"name": "nextVariableBorrowIndex",
											"nameLocation": "3357:23:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3349:31:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 924,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3349:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 927,
											"mutability": "mutable",
											"name": "currLiquidityRate",
											"nameLocation": "3394:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3386:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 926,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3386:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 929,
											"mutability": "mutable",
											"name": "currVariableBorrowRate",
											"nameLocation": "3425:22:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3417:30:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 928,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3417:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 931,
											"mutability": "mutable",
											"name": "reserveFactor",
											"nameLocation": "3461:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3453:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 930,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3453:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 934,
											"mutability": "mutable",
											"name": "reserveConfiguration",
											"nameLocation": "3504:20:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3480:44:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ReserveConfigurationMap_$884_storage_ptr",
												"typeString": "struct DataTypes.ReserveConfigurationMap"
											},
											"typeName": {
												"id": 933,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 932,
													"name": "ReserveConfigurationMap",
													"nameLocations": [
														"3480:23:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 884,
													"src": "3480:23:2"
												},
												"referencedDeclaration": 884,
												"src": "3480:23:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$884_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 936,
											"mutability": "mutable",
											"name": "aTokenAddress",
											"nameLocation": "3538:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3530:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 935,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3530:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 938,
											"mutability": "mutable",
											"name": "stableDebtTokenAddress",
											"nameLocation": "3565:22:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3557:30:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 937,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3557:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 940,
											"mutability": "mutable",
											"name": "variableDebtTokenAddress",
											"nameLocation": "3601:24:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3593:32:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 939,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3593:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 942,
											"mutability": "mutable",
											"name": "reserveLastUpdateTimestamp",
											"nameLocation": "3638:26:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3631:33:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint40",
												"typeString": "uint40"
											},
											"typeName": {
												"id": 941,
												"name": "uint40",
												"nodeType": "ElementaryTypeName",
												"src": "3631:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 944,
											"mutability": "mutable",
											"name": "stableDebtLastUpdateTimestamp",
											"nameLocation": "3677:29:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3670:36:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint40",
												"typeString": "uint40"
											},
											"typeName": {
												"id": 943,
												"name": "uint40",
												"nodeType": "ElementaryTypeName",
												"src": "3670:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReserveCache",
									"nameLocation": "2980:12:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "2973:738:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ExecuteLiquidationCallParams",
									"id": 964,
									"members": [
										{
											"constant": false,
											"id": 947,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "3765:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "3757:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 946,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3757:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 949,
											"mutability": "mutable",
											"name": "debtToCover",
											"nameLocation": "3792:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "3784:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 948,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3784:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 951,
											"mutability": "mutable",
											"name": "collateralAsset",
											"nameLocation": "3817:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "3809:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 950,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3809:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 953,
											"mutability": "mutable",
											"name": "debtAsset",
											"nameLocation": "3846:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "3838:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 952,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3838:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 955,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "3869:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "3861:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 954,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3861:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 957,
											"mutability": "mutable",
											"name": "receiveAToken",
											"nameLocation": "3884:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "3879:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 956,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3879:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 959,
											"mutability": "mutable",
											"name": "priceOracle",
											"nameLocation": "3911:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "3903:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 958,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3903:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 961,
											"mutability": "mutable",
											"name": "userEModeCategory",
											"nameLocation": "3934:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "3928:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 960,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "3928:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 963,
											"mutability": "mutable",
											"name": "priceOracleSentinel",
											"nameLocation": "3965:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "3957:27:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 962,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3957:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExecuteLiquidationCallParams",
									"nameLocation": "3722:28:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "3715:274:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ExecuteSupplyParams",
									"id": 973,
									"members": [
										{
											"constant": false,
											"id": 966,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "4034:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 973,
											"src": "4026:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 965,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4026:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 968,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "4053:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 973,
											"src": "4045:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 967,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4045:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 970,
											"mutability": "mutable",
											"name": "onBehalfOf",
											"nameLocation": "4073:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 973,
											"src": "4065:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 969,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4065:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 972,
											"mutability": "mutable",
											"name": "referralCode",
											"nameLocation": "4096:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 973,
											"src": "4089:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 971,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "4089:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExecuteSupplyParams",
									"nameLocation": "4000:19:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "3993:120:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ExecuteBorrowParams",
									"id": 999,
									"members": [
										{
											"constant": false,
											"id": 975,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "4158:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 999,
											"src": "4150:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 974,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4150:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 977,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "4177:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 999,
											"src": "4169:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 976,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4169:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 979,
											"mutability": "mutable",
											"name": "onBehalfOf",
											"nameLocation": "4195:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 999,
											"src": "4187:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 978,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4187:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 981,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "4219:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 999,
											"src": "4211:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 980,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4211:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 984,
											"mutability": "mutable",
											"name": "interestRateMode",
											"nameLocation": "4248:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 999,
											"src": "4231:33:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_InterestRateMode_$903",
												"typeString": "enum DataTypes.InterestRateMode"
											},
											"typeName": {
												"id": 983,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 982,
													"name": "InterestRateMode",
													"nameLocations": [
														"4231:16:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 903,
													"src": "4231:16:2"
												},
												"referencedDeclaration": 903,
												"src": "4231:16:2",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_InterestRateMode_$903",
													"typeString": "enum DataTypes.InterestRateMode"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 986,
											"mutability": "mutable",
											"name": "referralCode",
											"nameLocation": "4277:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 999,
											"src": "4270:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 985,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "4270:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 988,
											"mutability": "mutable",
											"name": "releaseUnderlying",
											"nameLocation": "4300:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 999,
											"src": "4295:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 987,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4295:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 990,
											"mutability": "mutable",
											"name": "maxStableRateBorrowSizePercent",
											"nameLocation": "4331:30:2",
											"nodeType": "VariableDeclaration",
											"scope": 999,
											"src": "4323:38:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 989,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4323:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 992,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "4375:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 999,
											"src": "4367:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 991,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4367:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 994,
											"mutability": "mutable",
											"name": "oracle",
											"nameLocation": "4402:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 999,
											"src": "4394:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 993,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4394:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 996,
											"mutability": "mutable",
											"name": "userEModeCategory",
											"nameLocation": "4420:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 999,
											"src": "4414:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 995,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "4414:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 998,
											"mutability": "mutable",
											"name": "priceOracleSentinel",
											"nameLocation": "4451:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 999,
											"src": "4443:27:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 997,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4443:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExecuteBorrowParams",
									"nameLocation": "4124:19:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "4117:358:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ExecuteRepayParams",
									"id": 1011,
									"members": [
										{
											"constant": false,
											"id": 1001,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "4519:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 1011,
											"src": "4511:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1000,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4511:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1003,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "4538:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1011,
											"src": "4530:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1002,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4530:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1006,
											"mutability": "mutable",
											"name": "interestRateMode",
											"nameLocation": "4567:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 1011,
											"src": "4550:33:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_InterestRateMode_$903",
												"typeString": "enum DataTypes.InterestRateMode"
											},
											"typeName": {
												"id": 1005,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1004,
													"name": "InterestRateMode",
													"nameLocations": [
														"4550:16:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 903,
													"src": "4550:16:2"
												},
												"referencedDeclaration": 903,
												"src": "4550:16:2",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_InterestRateMode_$903",
													"typeString": "enum DataTypes.InterestRateMode"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1008,
											"mutability": "mutable",
											"name": "onBehalfOf",
											"nameLocation": "4597:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 1011,
											"src": "4589:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1007,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4589:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1010,
											"mutability": "mutable",
											"name": "useATokens",
											"nameLocation": "4618:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 1011,
											"src": "4613:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1009,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4613:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExecuteRepayParams",
									"nameLocation": "4486:18:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "4479:154:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ExecuteWithdrawParams",
									"id": 1024,
									"members": [
										{
											"constant": false,
											"id": 1013,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "4680:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 1024,
											"src": "4672:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1012,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4672:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1015,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "4699:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1024,
											"src": "4691:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1014,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4691:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1017,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "4719:2:2",
											"nodeType": "VariableDeclaration",
											"scope": 1024,
											"src": "4711:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1016,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4711:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1019,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "4735:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 1024,
											"src": "4727:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1018,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4727:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1021,
											"mutability": "mutable",
											"name": "oracle",
											"nameLocation": "4762:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1024,
											"src": "4754:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1020,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4754:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1023,
											"mutability": "mutable",
											"name": "userEModeCategory",
											"nameLocation": "4780:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 1024,
											"src": "4774:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1022,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "4774:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExecuteWithdrawParams",
									"nameLocation": "4644:21:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "4637:165:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ExecuteSetUserEModeParams",
									"id": 1031,
									"members": [
										{
											"constant": false,
											"id": 1026,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "4853:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 1031,
											"src": "4845:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1025,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4845:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1028,
											"mutability": "mutable",
											"name": "oracle",
											"nameLocation": "4880:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1031,
											"src": "4872:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1027,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4872:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1030,
											"mutability": "mutable",
											"name": "categoryId",
											"nameLocation": "4898:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 1031,
											"src": "4892:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1029,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "4892:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExecuteSetUserEModeParams",
									"nameLocation": "4813:25:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "4806:107:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.FinalizeTransferParams",
									"id": 1050,
									"members": [
										{
											"constant": false,
											"id": 1033,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "4961:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 1050,
											"src": "4953:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1032,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4953:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1035,
											"mutability": "mutable",
											"name": "from",
											"nameLocation": "4980:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 1050,
											"src": "4972:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1034,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4972:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1037,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "4998:2:2",
											"nodeType": "VariableDeclaration",
											"scope": 1050,
											"src": "4990:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1036,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4990:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1039,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "5014:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1050,
											"src": "5006:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1038,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5006:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1041,
											"mutability": "mutable",
											"name": "balanceFromBefore",
											"nameLocation": "5034:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 1050,
											"src": "5026:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1040,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5026:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1043,
											"mutability": "mutable",
											"name": "balanceToBefore",
											"nameLocation": "5065:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 1050,
											"src": "5057:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1042,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5057:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1045,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "5094:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 1050,
											"src": "5086:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1044,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5086:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1047,
											"mutability": "mutable",
											"name": "oracle",
											"nameLocation": "5121:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1050,
											"src": "5113:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1046,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5113:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1049,
											"mutability": "mutable",
											"name": "fromEModeCategory",
											"nameLocation": "5139:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 1050,
											"src": "5133:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1048,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "5133:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FinalizeTransferParams",
									"nameLocation": "4924:22:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "4917:244:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.FlashloanParams",
									"id": 1082,
									"members": [
										{
											"constant": false,
											"id": 1052,
											"mutability": "mutable",
											"name": "receiverAddress",
											"nameLocation": "5202:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "5194:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1051,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5194:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1055,
											"mutability": "mutable",
											"name": "assets",
											"nameLocation": "5233:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "5223:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5223:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1054,
												"nodeType": "ArrayTypeName",
												"src": "5223:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1058,
											"mutability": "mutable",
											"name": "amounts",
											"nameLocation": "5255:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "5245:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5245:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1057,
												"nodeType": "ArrayTypeName",
												"src": "5245:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1061,
											"mutability": "mutable",
											"name": "interestRateModes",
											"nameLocation": "5278:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "5268:27:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5268:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1060,
												"nodeType": "ArrayTypeName",
												"src": "5268:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1063,
											"mutability": "mutable",
											"name": "onBehalfOf",
											"nameLocation": "5309:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "5301:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1062,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5301:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1065,
											"mutability": "mutable",
											"name": "params",
											"nameLocation": "5331:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "5325:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1064,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "5325:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1067,
											"mutability": "mutable",
											"name": "referralCode",
											"nameLocation": "5350:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "5343:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1066,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "5343:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1069,
											"mutability": "mutable",
											"name": "flashLoanPremiumToProtocol",
											"nameLocation": "5376:26:2",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "5368:34:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1068,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5368:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1071,
											"mutability": "mutable",
											"name": "flashLoanPremiumTotal",
											"nameLocation": "5416:21:2",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "5408:29:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1070,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5408:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1073,
											"mutability": "mutable",
											"name": "maxStableRateBorrowSizePercent",
											"nameLocation": "5451:30:2",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "5443:38:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1072,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5443:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1075,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "5495:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "5487:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1074,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5487:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1077,
											"mutability": "mutable",
											"name": "addressesProvider",
											"nameLocation": "5522:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "5514:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1076,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5514:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1079,
											"mutability": "mutable",
											"name": "userEModeCategory",
											"nameLocation": "5551:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "5545:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1078,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "5545:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1081,
											"mutability": "mutable",
											"name": "isAuthorizedFlashBorrower",
											"nameLocation": "5579:25:2",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "5574:30:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1080,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "5574:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FlashloanParams",
									"nameLocation": "5172:15:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "5165:444:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.FlashloanSimpleParams",
									"id": 1097,
									"members": [
										{
											"constant": false,
											"id": 1084,
											"mutability": "mutable",
											"name": "receiverAddress",
											"nameLocation": "5656:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 1097,
											"src": "5648:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1083,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5648:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1086,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "5685:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 1097,
											"src": "5677:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1085,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5677:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1088,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "5704:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1097,
											"src": "5696:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1087,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5696:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1090,
											"mutability": "mutable",
											"name": "params",
											"nameLocation": "5722:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1097,
											"src": "5716:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1089,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "5716:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1092,
											"mutability": "mutable",
											"name": "referralCode",
											"nameLocation": "5741:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 1097,
											"src": "5734:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1091,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "5734:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1094,
											"mutability": "mutable",
											"name": "flashLoanPremiumToProtocol",
											"nameLocation": "5767:26:2",
											"nodeType": "VariableDeclaration",
											"scope": 1097,
											"src": "5759:34:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1093,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5759:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1096,
											"mutability": "mutable",
											"name": "flashLoanPremiumTotal",
											"nameLocation": "5807:21:2",
											"nodeType": "VariableDeclaration",
											"scope": 1097,
											"src": "5799:29:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1095,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5799:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FlashloanSimpleParams",
									"nameLocation": "5620:21:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "5613:220:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.FlashLoanRepaymentParams",
									"id": 1110,
									"members": [
										{
											"constant": false,
											"id": 1099,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "5883:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1110,
											"src": "5875:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1098,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5875:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1101,
											"mutability": "mutable",
											"name": "totalPremium",
											"nameLocation": "5903:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 1110,
											"src": "5895:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1100,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5895:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1103,
											"mutability": "mutable",
											"name": "flashLoanPremiumToProtocol",
											"nameLocation": "5929:26:2",
											"nodeType": "VariableDeclaration",
											"scope": 1110,
											"src": "5921:34:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1102,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5921:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1105,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "5969:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 1110,
											"src": "5961:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1104,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5961:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1107,
											"mutability": "mutable",
											"name": "receiverAddress",
											"nameLocation": "5988:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 1110,
											"src": "5980:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1106,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5980:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1109,
											"mutability": "mutable",
											"name": "referralCode",
											"nameLocation": "6016:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 1110,
											"src": "6009:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1108,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "6009:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FlashLoanRepaymentParams",
									"nameLocation": "5844:24:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "5837:196:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.CalculateUserAccountDataParams",
									"id": 1122,
									"members": [
										{
											"constant": false,
											"id": 1113,
											"mutability": "mutable",
											"name": "userConfig",
											"nameLocation": "6102:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 1122,
											"src": "6081:31:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserConfigurationMap_$888_storage_ptr",
												"typeString": "struct DataTypes.UserConfigurationMap"
											},
											"typeName": {
												"id": 1112,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1111,
													"name": "UserConfigurationMap",
													"nameLocations": [
														"6081:20:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 888,
													"src": "6081:20:2"
												},
												"referencedDeclaration": 888,
												"src": "6081:20:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserConfigurationMap_$888_storage_ptr",
													"typeString": "struct DataTypes.UserConfigurationMap"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1115,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "6126:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 1122,
											"src": "6118:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1114,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6118:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1117,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "6153:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 1122,
											"src": "6145:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1116,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6145:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1119,
											"mutability": "mutable",
											"name": "oracle",
											"nameLocation": "6171:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1122,
											"src": "6163:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1118,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6163:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1121,
											"mutability": "mutable",
											"name": "userEModeCategory",
											"nameLocation": "6189:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 1122,
											"src": "6183:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1120,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "6183:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CalculateUserAccountDataParams",
									"nameLocation": "6044:30:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "6037:174:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ValidateBorrowParams",
									"id": 1154,
									"members": [
										{
											"constant": false,
											"id": 1125,
											"mutability": "mutable",
											"name": "reserveCache",
											"nameLocation": "6262:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 1154,
											"src": "6249:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ReserveCache_$945_storage_ptr",
												"typeString": "struct DataTypes.ReserveCache"
											},
											"typeName": {
												"id": 1124,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1123,
													"name": "ReserveCache",
													"nameLocations": [
														"6249:12:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 945,
													"src": "6249:12:2"
												},
												"referencedDeclaration": 945,
												"src": "6249:12:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveCache_$945_storage_ptr",
													"typeString": "struct DataTypes.ReserveCache"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1128,
											"mutability": "mutable",
											"name": "userConfig",
											"nameLocation": "6301:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 1154,
											"src": "6280:31:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserConfigurationMap_$888_storage_ptr",
												"typeString": "struct DataTypes.UserConfigurationMap"
											},
											"typeName": {
												"id": 1127,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1126,
													"name": "UserConfigurationMap",
													"nameLocations": [
														"6280:20:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 888,
													"src": "6280:20:2"
												},
												"referencedDeclaration": 888,
												"src": "6280:20:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserConfigurationMap_$888_storage_ptr",
													"typeString": "struct DataTypes.UserConfigurationMap"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1130,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "6325:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 1154,
											"src": "6317:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1129,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6317:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1132,
											"mutability": "mutable",
											"name": "userAddress",
											"nameLocation": "6344:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 1154,
											"src": "6336:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1131,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6336:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1134,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "6369:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1154,
											"src": "6361:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1133,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6361:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1137,
											"mutability": "mutable",
											"name": "interestRateMode",
											"nameLocation": "6398:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 1154,
											"src": "6381:33:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_InterestRateMode_$903",
												"typeString": "enum DataTypes.InterestRateMode"
											},
											"typeName": {
												"id": 1136,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1135,
													"name": "InterestRateMode",
													"nameLocations": [
														"6381:16:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 903,
													"src": "6381:16:2"
												},
												"referencedDeclaration": 903,
												"src": "6381:16:2",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_InterestRateMode_$903",
													"typeString": "enum DataTypes.InterestRateMode"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1139,
											"mutability": "mutable",
											"name": "maxStableLoanPercent",
											"nameLocation": "6428:20:2",
											"nodeType": "VariableDeclaration",
											"scope": 1154,
											"src": "6420:28:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1138,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6420:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1141,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "6462:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 1154,
											"src": "6454:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1140,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6454:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1143,
											"mutability": "mutable",
											"name": "oracle",
											"nameLocation": "6489:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1154,
											"src": "6481:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1142,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6481:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1145,
											"mutability": "mutable",
											"name": "userEModeCategory",
											"nameLocation": "6507:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 1154,
											"src": "6501:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1144,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "6501:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1147,
											"mutability": "mutable",
											"name": "priceOracleSentinel",
											"nameLocation": "6538:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 1154,
											"src": "6530:27:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1146,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6530:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1149,
											"mutability": "mutable",
											"name": "isolationModeActive",
											"nameLocation": "6568:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 1154,
											"src": "6563:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1148,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "6563:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1151,
											"mutability": "mutable",
											"name": "isolationModeCollateralAddress",
											"nameLocation": "6601:30:2",
											"nodeType": "VariableDeclaration",
											"scope": 1154,
											"src": "6593:38:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1150,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6593:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1153,
											"mutability": "mutable",
											"name": "isolationModeDebtCeiling",
											"nameLocation": "6645:24:2",
											"nodeType": "VariableDeclaration",
											"scope": 1154,
											"src": "6637:32:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1152,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6637:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ValidateBorrowParams",
									"nameLocation": "6222:20:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "6215:459:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ValidateLiquidationCallParams",
									"id": 1164,
									"members": [
										{
											"constant": false,
											"id": 1157,
											"mutability": "mutable",
											"name": "debtReserveCache",
											"nameLocation": "6734:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 1164,
											"src": "6721:29:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ReserveCache_$945_storage_ptr",
												"typeString": "struct DataTypes.ReserveCache"
											},
											"typeName": {
												"id": 1156,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1155,
													"name": "ReserveCache",
													"nameLocations": [
														"6721:12:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 945,
													"src": "6721:12:2"
												},
												"referencedDeclaration": 945,
												"src": "6721:12:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveCache_$945_storage_ptr",
													"typeString": "struct DataTypes.ReserveCache"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1159,
											"mutability": "mutable",
											"name": "totalDebt",
											"nameLocation": "6764:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 1164,
											"src": "6756:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1158,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6756:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1161,
											"mutability": "mutable",
											"name": "healthFactor",
											"nameLocation": "6787:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 1164,
											"src": "6779:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1160,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6779:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1163,
											"mutability": "mutable",
											"name": "priceOracleSentinel",
											"nameLocation": "6813:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 1164,
											"src": "6805:27:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1162,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6805:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ValidateLiquidationCallParams",
									"nameLocation": "6685:29:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "6678:159:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.CalculateInterestRatesParams",
									"id": 1183,
									"members": [
										{
											"constant": false,
											"id": 1166,
											"mutability": "mutable",
											"name": "unbacked",
											"nameLocation": "6891:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 1183,
											"src": "6883:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1165,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6883:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1168,
											"mutability": "mutable",
											"name": "liquidityAdded",
											"nameLocation": "6913:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 1183,
											"src": "6905:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1167,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6905:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1170,
											"mutability": "mutable",
											"name": "liquidityTaken",
											"nameLocation": "6941:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 1183,
											"src": "6933:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1169,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6933:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1172,
											"mutability": "mutable",
											"name": "totalStableDebt",
											"nameLocation": "6969:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 1183,
											"src": "6961:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1171,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6961:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1174,
											"mutability": "mutable",
											"name": "totalVariableDebt",
											"nameLocation": "6998:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 1183,
											"src": "6990:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1173,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6990:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1176,
											"mutability": "mutable",
											"name": "averageStableBorrowRate",
											"nameLocation": "7029:23:2",
											"nodeType": "VariableDeclaration",
											"scope": 1183,
											"src": "7021:31:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7021:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1178,
											"mutability": "mutable",
											"name": "reserveFactor",
											"nameLocation": "7066:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 1183,
											"src": "7058:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1177,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7058:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1180,
											"mutability": "mutable",
											"name": "reserve",
											"nameLocation": "7093:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 1183,
											"src": "7085:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1179,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7085:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1182,
											"mutability": "mutable",
											"name": "aToken",
											"nameLocation": "7114:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1183,
											"src": "7106:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1181,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7106:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CalculateInterestRatesParams",
									"nameLocation": "6848:28:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "6841:284:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.InitReserveParams",
									"id": 1198,
									"members": [
										{
											"constant": false,
											"id": 1185,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "7168:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 1198,
											"src": "7160:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1184,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7160:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1187,
											"mutability": "mutable",
											"name": "aTokenAddress",
											"nameLocation": "7187:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 1198,
											"src": "7179:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1186,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7179:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1189,
											"mutability": "mutable",
											"name": "stableDebtAddress",
											"nameLocation": "7214:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 1198,
											"src": "7206:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1188,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7206:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1191,
											"mutability": "mutable",
											"name": "variableDebtAddress",
											"nameLocation": "7245:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 1198,
											"src": "7237:27:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1190,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7237:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1193,
											"mutability": "mutable",
											"name": "interestRateStrategyAddress",
											"nameLocation": "7278:27:2",
											"nodeType": "VariableDeclaration",
											"scope": 1198,
											"src": "7270:35:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1192,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7270:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1195,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "7318:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 1198,
											"src": "7311:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1194,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "7311:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1197,
											"mutability": "mutable",
											"name": "maxNumberReserves",
											"nameLocation": "7344:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 1198,
											"src": "7337:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1196,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "7337:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitReserveParams",
									"nameLocation": "7136:17:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "7129:237:2",
									"visibility": "public"
								}
							],
							"scope": 1200,
							"src": "62:7306:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:7332:2"
				},
				"id": 2
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							1245
						]
					},
					"id": 1246,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1201,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1245,
							"linearizedBaseContracts": [
								1245
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 1206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:3"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "136:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1203,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:3"
									},
									"scope": 1245,
									"src": "93:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 1211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:3"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "193:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1208,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:3"
									},
									"scope": 1245,
									"src": "147:61:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 1216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:3"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "254:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:3"
									},
									"scope": 1245,
									"src": "212:51:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 1231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "301:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "294:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1217,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:25:3"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "344:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "337:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1220,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "360:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "353:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1222,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "376:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "368:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "395:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "387:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "413:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "406:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1228,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:93:3"
									},
									"scope": 1245,
									"src": "267:163:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 1244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "443:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:3"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "503:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "496:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1233,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "519:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "512:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1235,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "512:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "535:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "527:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "554:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "546:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "572:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "565:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1241,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:93:3"
									},
									"scope": 1245,
									"src": "434:155:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1246,
							"src": "57:534:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:560:3"
				},
				"id": 3
			},
			"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol",
					"exportedSymbols": {
						"AutomationCompatibleInterface": [
							1264
						]
					},
					"id": 1265,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1247,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AutomationCompatibleInterface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1264,
							"linearizedBaseContracts": [
								1264
							],
							"name": "AutomationCompatibleInterface",
							"nameLocation": "67:29:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1248,
										"nodeType": "StructuredDocumentation",
										"src": "101:985:4",
										"text": " @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."
									},
									"functionSelector": "6e04ff0d",
									"id": 1257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "checkUpkeep",
									"nameLocation": "1098:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "checkData",
												"nameLocation": "1125:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1110:24:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1249,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1110:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1109:26:4"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "upkeepNeeded",
												"nameLocation": "1159:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1154:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1252,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1154:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "1186:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1173:24:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1254,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1173:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1153:45:4"
									},
									"scope": 1264,
									"src": "1089:110:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "1203:1003:4",
										"text": " @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."
									},
									"functionSelector": "4585e33b",
									"id": 1263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "performUpkeep",
									"nameLocation": "2218:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "2247:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "2232:26:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1259,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2232:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2231:28:4"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2268:0:4"
									},
									"scope": 1264,
									"src": "2209:60:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1265,
							"src": "57:2214:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2240:4"
				},
				"id": 4
			},
			"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
					"exportedSymbols": {
						"KeeperCompatibleInterface": [
							1264
						]
					},
					"id": 1269,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "134:23:5"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol",
							"file": "./AutomationCompatibleInterface.sol",
							"id": 1268,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1269,
							"sourceUnit": 1265,
							"src": "158:111:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1267,
										"name": "AutomationCompatibleInterface",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1264,
										"src": "166:29:5",
										"typeDescriptions": {}
									},
									"local": "KeeperCompatibleInterface",
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "134:136:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1524
						],
						"Ownable": [
							1416
						]
					},
					"id": 1417,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1270,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1272,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1417,
							"sourceUnit": 1525,
							"src": "128:45:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1271,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1524,
										"src": "136:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1274,
										"name": "Context",
										"nameLocations": [
											"692:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1524,
										"src": "692:7:6"
									},
									"id": 1275,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:6"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1273,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:6",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1416,
							"linearizedBaseContracts": [
								1416,
								1524
							],
							"name": "Ownable",
							"nameLocation": "681:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1277,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1416,
									"src": "706:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1276,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1278,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:6",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 1282,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "858:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:6"
									},
									"src": "825:50:6"
								},
								{
									"documentation": {
										"id": 1283,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:6",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 1287,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "994:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:6"
									},
									"src": "968:41:6"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1293,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "1042:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "1073:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:6"
									},
									"src": "1015:84:6"
								},
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "1259:153:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1299,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "1273:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1300,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1303,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1313,
												"nodeType": "IfStatement",
												"src": "1269:95:6",
												"trueBody": {
													"id": 1312,
													"nodeType": "Block",
													"src": "1301:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1308,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1306,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1305,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1287,
																	"src": "1322:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1311,
															"nodeType": "RevertStatement",
															"src": "1315:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1315,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "1392:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1314,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "1373:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1317,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:6"
											}
										]
									},
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:6",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 1319,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "1237:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:6"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:6"
									},
									"scope": 1416,
									"src": "1225:187:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1326,
										"nodeType": "Block",
										"src": "1521:41:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1322,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "1531:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1324,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:6"
											},
											{
												"id": 1325,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:6"
											}
										]
									},
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:6",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1327,
									"name": "onlyOwner",
									"nameLocation": "1509:9:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:6"
									},
									"src": "1500:62:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1335,
										"nodeType": "Block",
										"src": "1693:30:6",
										"statements": [
											{
												"expression": {
													"id": 1333,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1277,
													"src": "1710:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1332,
												"id": 1334,
												"nodeType": "Return",
												"src": "1703:13:6"
											}
										]
									},
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:6",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:6"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "1684:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:6"
									},
									"scope": 1416,
									"src": "1638:85:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "1841:117:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1340,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "1855:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1342,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "1866:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1351,
												"nodeType": "IfStatement",
												"src": "1851:101:6",
												"trueBody": {
													"id": 1350,
													"nodeType": "Block",
													"src": "1880:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1346,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1506,
																			"src": "1928:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1345,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1282,
																	"src": "1901:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1349,
															"nodeType": "RevertStatement",
															"src": "1894:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1337,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:6",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 1353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:6"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:6"
									},
									"scope": 1416,
									"src": "1796:162:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1366,
										"nodeType": "Block",
										"src": "2347:47:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1360,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1359,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "2357:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1365,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:6"
											}
										]
									},
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:6",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1367,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1357,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1356,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1327,
												"src": "2337:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:6"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:6"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:6"
									},
									"scope": 1416,
									"src": "2293:101:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1394,
										"nodeType": "Block",
										"src": "2613:145:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1375,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1370,
														"src": "2627:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1376,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1379,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1389,
												"nodeType": "IfStatement",
												"src": "2623:91:6",
												"trueBody": {
													"id": 1388,
													"nodeType": "Block",
													"src": "2651:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1384,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1382,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1381,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1287,
																	"src": "2672:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1387,
															"nodeType": "RevertStatement",
															"src": "2665:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1391,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "2742:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1390,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "2723:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1393,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:6"
											}
										]
									},
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:6",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1395,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1373,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1372,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1327,
												"src": "2603:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:6"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "2570:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:6"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:6"
									},
									"scope": 1416,
									"src": "2543:215:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1414,
										"nodeType": "Block",
										"src": "2975:124:6",
										"statements": [
											{
												"assignments": [
													1402
												],
												"declarations": [
													{
														"constant": false,
														"id": 1402,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1414,
														"src": "2985:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1401,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1404,
												"initialValue": {
													"id": 1403,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1277,
													"src": "3004:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:6"
											},
											{
												"expression": {
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1405,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "3020:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1406,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1398,
														"src": "3029:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1410,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "3073:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1411,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "3083:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1409,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1293,
														"src": "3052:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1413,
												"nodeType": "EmitStatement",
												"src": "3047:45:6"
											}
										]
									},
									"documentation": {
										"id": 1396,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:6",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "2940:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:6"
									},
									"returnParameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:6"
									},
									"scope": 1416,
									"src": "2912:187:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1417,
							"src": "663:2438:6",
							"usedErrors": [
								1282,
								1287
							],
							"usedEvents": [
								1293
							]
						}
					],
					"src": "102:3000:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1494
						]
					},
					"id": 1495,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1418,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1419,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:7",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1494,
							"linearizedBaseContracts": [
								1494
							],
							"name": "IERC20",
							"nameLocation": "214:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:7",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1428,
									"name": "Transfer",
									"nameLocation": "396:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "405:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "427:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "447:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:7"
									},
									"src": "390:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1429,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:7",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1437,
									"name": "Approval",
									"nameLocation": "627:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "636:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "659:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "684:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:7"
									},
									"src": "621:78:7"
								},
								{
									"documentation": {
										"id": 1438,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:7",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:7"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "821:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:7"
									},
									"scope": 1494,
									"src": "775:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1444,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:7",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1451,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "931:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:7"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "971:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:7"
									},
									"scope": 1494,
									"src": "912:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1452,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:7",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1461,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "1222:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "1234:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:7"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "1267:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1458,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:7"
									},
									"scope": 1494,
									"src": "1204:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1462,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:7",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "1567:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "1582:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:7"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "1622:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:7"
									},
									"scope": 1494,
									"src": "1548:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1472,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:7",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1481,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "2326:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "2343:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:7"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "2376:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1478,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:7"
									},
									"scope": 1494,
									"src": "2309:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1482,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:7",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "2712:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "2726:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "2738:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:7"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "2771:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1490,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:7"
									},
									"scope": 1494,
									"src": "2690:87:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1495,
							"src": "204:2575:7",
							"usedErrors": [],
							"usedEvents": [
								1428,
								1437
							]
						}
					],
					"src": "106:2674:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1524
						]
					},
					"id": 1525,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1496,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1497,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1524,
							"linearizedBaseContracts": [
								1524
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1505,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1502,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1501,
												"id": 1504,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1524,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1514,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1511,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1510,
												"id": 1513,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1508,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1524,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1522,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1519,
												"id": 1521,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1524,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1525,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"contracts/TreasuryDAO.sol": {
				"ast": {
					"absolutePath": "contracts/TreasuryDAO.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							1245
						],
						"Context": [
							1524
						],
						"DataTypes": [
							1199
						],
						"IERC20": [
							1494
						],
						"IPool": [
							638
						],
						"IPoolAddressesProvider": [
							847
						],
						"KeeperCompatibleInterface": [
							1264
						],
						"Ownable": [
							1416
						],
						"TreasuryDAO": [
							2046
						]
					},
					"id": 2047,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1526,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1527,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2047,
							"sourceUnit": 1417,
							"src": "57:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1528,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2047,
							"sourceUnit": 1495,
							"src": "110:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 1529,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2047,
							"sourceUnit": 1246,
							"src": "167:76:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
							"id": 1530,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2047,
							"sourceUnit": 1269,
							"src": "244:80:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/core-v3/contracts/interfaces/IPool.sol",
							"file": "@aave/core-v3/contracts/interfaces/IPool.sol",
							"id": 1531,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2047,
							"sourceUnit": 639,
							"src": "325:54:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1532,
										"name": "Ownable",
										"nameLocations": [
											"405:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1416,
										"src": "405:7:9"
									},
									"id": 1533,
									"nodeType": "InheritanceSpecifier",
									"src": "405:7:9"
								},
								{
									"baseName": {
										"id": 1534,
										"name": "KeeperCompatibleInterface",
										"nameLocations": [
											"414:25:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1264,
										"src": "414:25:9"
									},
									"id": 1535,
									"nodeType": "InheritanceSpecifier",
									"src": "414:25:9"
								}
							],
							"canonicalName": "TreasuryDAO",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2046,
							"linearizedBaseContracts": [
								2046,
								1264,
								1416,
								1524
							],
							"name": "TreasuryDAO",
							"nameLocation": "390:11:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "TreasuryDAO.Proposal",
									"id": 1552,
									"members": [
										{
											"constant": false,
											"id": 1537,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "488:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1552,
											"src": "472:25:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 1536,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "472:15:9",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1539,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "515:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1552,
											"src": "507:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1538,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "507:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1541,
											"mutability": "mutable",
											"name": "votes",
											"nameLocation": "539:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1552,
											"src": "531:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1540,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "531:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1543,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "562:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1552,
											"src": "554:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1542,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "554:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1545,
											"mutability": "mutable",
											"name": "unlockTime",
											"nameLocation": "587:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 1552,
											"src": "579:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1544,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "579:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1547,
											"mutability": "mutable",
											"name": "executed",
											"nameLocation": "646:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 1552,
											"src": "641:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1546,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "641:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1551,
											"mutability": "mutable",
											"name": "voted",
											"nameLocation": "689:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1552,
											"src": "664:30:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 1550,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "664:24:9",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1549,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "683:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nameLocation": "453:8:9",
									"nodeType": "StructDefinition",
									"scope": 2046,
									"src": "446:255:9",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "08ae4b0c",
									"id": 1556,
									"mutability": "mutable",
									"name": "members",
									"nameLocation": "739:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 2046,
									"src": "707:39:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1555,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1553,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "715:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "707:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1554,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "726:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "013cf08b",
									"id": 1560,
									"mutability": "mutable",
									"name": "proposals",
									"nameLocation": "770:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 2046,
									"src": "752:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$1552_storage_$dyn_storage",
										"typeString": "struct TreasuryDAO.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"id": 1558,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1557,
												"name": "Proposal",
												"nameLocations": [
													"752:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1552,
												"src": "752:8:9"
											},
											"referencedDeclaration": 1552,
											"src": "752:8:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$1552_storage_ptr",
												"typeString": "struct TreasuryDAO.Proposal"
											}
										},
										"id": 1559,
										"nodeType": "ArrayTypeName",
										"src": "752:10:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$1552_storage_$dyn_storage_ptr",
											"typeString": "struct TreasuryDAO.Proposal[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f96dae0a",
									"id": 1563,
									"mutability": "mutable",
									"name": "governanceToken",
									"nameLocation": "799:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 2046,
									"src": "785:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1494",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1562,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1561,
											"name": "IERC20",
											"nameLocations": [
												"785:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1494,
											"src": "785:6:9"
										},
										"referencedDeclaration": 1494,
										"src": "785:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1494",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1566,
									"mutability": "mutable",
									"name": "priceFeed",
									"nameLocation": "851:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 2046,
									"src": "820:40:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$1245",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 1565,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1564,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"820:21:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1245,
											"src": "820:21:9"
										},
										"referencedDeclaration": 1245,
										"src": "820:21:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$1245",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "a59a9973",
									"id": 1569,
									"mutability": "mutable",
									"name": "lendingPool",
									"nameLocation": "879:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 2046,
									"src": "866:24:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IPool_$638",
										"typeString": "contract IPool"
									},
									"typeName": {
										"id": 1568,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1567,
											"name": "IPool",
											"nameLocations": [
												"866:5:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 638,
											"src": "866:5:9"
										},
										"referencedDeclaration": 638,
										"src": "866:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPool_$638",
											"typeString": "contract IPool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c00d2a8c",
									"id": 1572,
									"mutability": "mutable",
									"name": "minVoteDuration",
									"nameLocation": "911:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 2046,
									"src": "896:39:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1570,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "896:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1571,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "929:6:9",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "3417b456fad6209c73445d5efd446d686e75e4560f0f50c13b5a5cde976447b4",
									"id": 1580,
									"name": "ProposalCreated",
									"nameLocation": "948:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"indexed": false,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "969:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "964:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1573,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "964:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "989:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "981:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "981:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1008:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "1000:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1000:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:52:9"
									},
									"src": "942:74:9"
								},
								{
									"anonymous": false,
									"eventSelector": "1abe610cf2bf87e57dcc1181fcf5ac0934e843d8344ab9eed6e86c799f62585e",
									"id": 1588,
									"name": "Voted",
									"nameLocation": "1027:5:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"indexed": false,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "1038:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "1033:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1581,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1033:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"indexed": false,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "1058:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "1050:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1050:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"indexed": false,
												"mutability": "mutable",
												"name": "weight",
												"nameLocation": "1073:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "1065:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1065:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1032:48:9"
									},
									"src": "1021:60:9"
								},
								{
									"anonymous": false,
									"eventSelector": "712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f",
									"id": 1592,
									"name": "ProposalExecuted",
									"nameLocation": "1092:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"indexed": false,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "1114:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1109:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1109:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1108:17:9"
									},
									"src": "1086:40:9"
								},
								{
									"body": {
										"id": 1630,
										"nodeType": "Block",
										"src": "1244:215:9",
										"statements": [
											{
												"expression": {
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1606,
														"name": "governanceToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1563,
														"src": "1254:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1494",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1608,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1594,
																"src": "1279:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1607,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "1272:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$1494_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1272:20:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1494",
															"typeString": "contract IERC20"
														}
													},
													"src": "1254:38:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1494",
														"typeString": "contract IERC20"
													}
												},
												"id": 1611,
												"nodeType": "ExpressionStatement",
												"src": "1254:38:9"
											},
											{
												"expression": {
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1612,
														"name": "priceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "1302:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$1245",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1614,
																"name": "oracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "1336:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1613,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "1314:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1245_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1314:29:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$1245",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "1302:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$1245",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 1617,
												"nodeType": "ExpressionStatement",
												"src": "1302:41:9"
											},
											{
												"expression": {
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1618,
														"name": "lendingPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "1385:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPool_$638",
															"typeString": "contract IPool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1620,
																"name": "aavePool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1598,
																"src": "1405:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1619,
															"name": "IPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "1399:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IPool_$638_$",
																"typeString": "type(contract IPool)"
															}
														},
														"id": 1621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1399:15:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPool_$638",
															"typeString": "contract IPool"
														}
													},
													"src": "1385:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPool_$638",
														"typeString": "contract IPool"
													}
												},
												"id": 1623,
												"nodeType": "ExpressionStatement",
												"src": "1385:29:9"
											},
											{
												"expression": {
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1624,
															"name": "members",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1556,
															"src": "1424:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1626,
														"indexExpression": {
															"id": 1625,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1600,
															"src": "1432:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1424:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1627,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1448:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1424:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1629,
												"nodeType": "ExpressionStatement",
												"src": "1424:28:9"
											}
										]
									},
									"id": 1631,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1603,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1600,
													"src": "1230:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1604,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1602,
												"name": "Ownable",
												"nameLocations": [
													"1222:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1416,
												"src": "1222:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1222:21:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "1152:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "1144:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "oracle",
												"nameLocation": "1174:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "1166:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "aavePool",
												"nameLocation": "1190:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "1182:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1182:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1208:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "1200:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1200:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1143:78:9"
									},
									"returnParameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1244:0:9"
									},
									"scope": 2046,
									"src": "1132:327:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1642,
										"nodeType": "Block",
										"src": "1487:76:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1634,
																"name": "members",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1556,
																"src": "1505:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1637,
															"indexExpression": {
																"expression": {
																	"id": 1635,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1513:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1517:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1513:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1505:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420612044414f206d656d626572",
															"id": 1638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1526:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8fc0753689749684a9e551425bc1a5c3140528f7a45ea255ec00e51d97963b5",
																"typeString": "literal_string \"Not a DAO member\""
															},
															"value": "Not a DAO member"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8fc0753689749684a9e551425bc1a5c3140528f7a45ea255ec00e51d97963b5",
																"typeString": "literal_string \"Not a DAO member\""
															}
														],
														"id": 1633,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1497:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1497:48:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1640,
												"nodeType": "ExpressionStatement",
												"src": "1497:48:9"
											},
											{
												"id": 1641,
												"nodeType": "PlaceholderStatement",
												"src": "1555:1:9"
											}
										]
									},
									"id": 1643,
									"name": "onlyMember",
									"nameLocation": "1474:10:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1484:2:9"
									},
									"src": "1465:98:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1656,
										"nodeType": "Block",
										"src": "1621:39:9",
										"statements": [
											{
												"expression": {
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1650,
															"name": "members",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1556,
															"src": "1631:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1652,
														"indexExpression": {
															"id": 1651,
															"name": "member",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1645,
															"src": "1639:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1631:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1653,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1649:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1631:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1655,
												"nodeType": "ExpressionStatement",
												"src": "1631:22:9"
											}
										]
									},
									"functionSelector": "ca6d56dc",
									"id": 1657,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1648,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1647,
												"name": "onlyOwner",
												"nameLocations": [
													"1611:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1327,
												"src": "1611:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1611:9:9"
										}
									],
									"name": "addMember",
									"nameLocation": "1578:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "1596:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "1588:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1588:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:16:9"
									},
									"returnParameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1621:0:9"
									},
									"scope": 2046,
									"src": "1569:91:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1751,
										"nodeType": "Block",
										"src": "1751:625:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1669,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1777:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_TreasuryDAO_$2046",
																				"typeString": "contract TreasuryDAO"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_TreasuryDAO_$2046",
																				"typeString": "contract TreasuryDAO"
																			}
																		],
																		"id": 1668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1769:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1667,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1769:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1783:7:9",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "1769:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1672,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1661,
																"src": "1794:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1769:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742074726561737572792062616c616e6365",
															"id": 1674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1802:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_59eae394831db960eed2b1204907b57c5e1f65d6dfb40c9a41314d384a8055da",
																"typeString": "literal_string \"Insufficient treasury balance\""
															},
															"value": "Insufficient treasury balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_59eae394831db960eed2b1204907b57c5e1f65d6dfb40c9a41314d384a8055da",
																"typeString": "literal_string \"Insufficient treasury balance\""
															}
														],
														"id": 1666,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1761:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1761:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1676,
												"nodeType": "ExpressionStatement",
												"src": "1761:73:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1678,
																	"name": "getETHPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "1852:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1852:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "31353030",
																"id": 1680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1868:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1500_by_1",
																	"typeString": "int_const 1500"
																},
																"value": "1500"
															},
															"src": "1852:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45544820707269636520746f6f206c6f77",
															"id": 1682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1874:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_66d1585b1e27cc9397312cfc1f57a2ea0c14475d5f53f4e39e5c98660bad98b3",
																"typeString": "literal_string \"ETH price too low\""
															},
															"value": "ETH price too low"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_66d1585b1e27cc9397312cfc1f57a2ea0c14475d5f53f4e39e5c98660bad98b3",
																"typeString": "literal_string \"ETH price too low\""
															}
														],
														"id": 1677,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1844:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1844:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1684,
												"nodeType": "ExpressionStatement",
												"src": "1844:50:9"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1685,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "1905:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$1552_storage_$dyn_storage",
																"typeString": "struct TreasuryDAO.Proposal storage ref[] storage ref"
															}
														},
														"id": 1687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1915:4:9",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1905:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$1552_storage_$dyn_storage_ptr_$returns$_t_struct$_Proposal_$1552_storage_$attached_to$_t_array$_t_struct$_Proposal_$1552_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct TreasuryDAO.Proposal storage ref[] storage pointer) returns (struct TreasuryDAO.Proposal storage ref)"
														}
													},
													"id": 1688,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1905:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$1552_storage",
														"typeString": "struct TreasuryDAO.Proposal storage ref"
													}
												},
												"id": 1689,
												"nodeType": "ExpressionStatement",
												"src": "1905:16:9"
											},
											{
												"assignments": [
													1692
												],
												"declarations": [
													{
														"constant": false,
														"id": 1692,
														"mutability": "mutable",
														"name": "newProposal",
														"nameLocation": "1948:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1751,
														"src": "1931:28:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$1552_storage_ptr",
															"typeString": "struct TreasuryDAO.Proposal"
														},
														"typeName": {
															"id": 1691,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1690,
																"name": "Proposal",
																"nameLocations": [
																	"1931:8:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1552,
																"src": "1931:8:9"
															},
															"referencedDeclaration": 1552,
															"src": "1931:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$1552_storage_ptr",
																"typeString": "struct TreasuryDAO.Proposal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1699,
												"initialValue": {
													"baseExpression": {
														"id": 1693,
														"name": "proposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1560,
														"src": "1962:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Proposal_$1552_storage_$dyn_storage",
															"typeString": "struct TreasuryDAO.Proposal storage ref[] storage ref"
														}
													},
													"id": 1698,
													"indexExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1697,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1694,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1560,
																"src": "1972:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$1552_storage_$dyn_storage",
																	"typeString": "struct TreasuryDAO.Proposal storage ref[] storage ref"
																}
															},
															"id": 1695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1982:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1972:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 1696,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1991:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1972:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1962:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$1552_storage",
														"typeString": "struct TreasuryDAO.Proposal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1931:62:9"
											},
											{
												"expression": {
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1700,
															"name": "newProposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1692,
															"src": "2003:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$1552_storage_ptr",
																"typeString": "struct TreasuryDAO.Proposal storage pointer"
															}
														},
														"id": 1702,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2015:9:9",
														"memberName": "recipient",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1537,
														"src": "2003:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1703,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1659,
														"src": "2027:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2003:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1705,
												"nodeType": "ExpressionStatement",
												"src": "2003:33:9"
											},
											{
												"expression": {
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1706,
															"name": "newProposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1692,
															"src": "2046:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$1552_storage_ptr",
																"typeString": "struct TreasuryDAO.Proposal storage pointer"
															}
														},
														"id": 1708,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2058:6:9",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1539,
														"src": "2046:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1709,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1661,
														"src": "2067:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2046:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1711,
												"nodeType": "ExpressionStatement",
												"src": "2046:27:9"
											},
											{
												"expression": {
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1712,
															"name": "newProposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1692,
															"src": "2083:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$1552_storage_ptr",
																"typeString": "struct TreasuryDAO.Proposal storage pointer"
															}
														},
														"id": 1714,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2095:5:9",
														"memberName": "votes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1541,
														"src": "2083:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1715,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2103:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2083:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1717,
												"nodeType": "ExpressionStatement",
												"src": "2083:21:9"
											},
											{
												"expression": {
													"id": 1725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1718,
															"name": "newProposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1692,
															"src": "2114:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$1552_storage_ptr",
																"typeString": "struct TreasuryDAO.Proposal storage pointer"
															}
														},
														"id": 1720,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2126:7:9",
														"memberName": "endTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1543,
														"src": "2114:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1721,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2136:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2142:9:9",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2136:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1723,
															"name": "minVoteDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "2154:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2136:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2114:55:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1726,
												"nodeType": "ExpressionStatement",
												"src": "2114:55:9"
											},
											{
												"expression": {
													"id": 1734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1727,
															"name": "newProposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1692,
															"src": "2179:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$1552_storage_ptr",
																"typeString": "struct TreasuryDAO.Proposal storage pointer"
															}
														},
														"id": 1729,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2191:10:9",
														"memberName": "unlockTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1545,
														"src": "2179:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1730,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2204:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2210:9:9",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2204:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3438",
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2222:8:9",
															"subdenomination": "hours",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_172800_by_1",
																"typeString": "int_const 172800"
															},
															"value": "48"
														},
														"src": "2204:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2179:51:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1735,
												"nodeType": "ExpressionStatement",
												"src": "2179:51:9"
											},
											{
												"expression": {
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1736,
															"name": "newProposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1692,
															"src": "2269:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$1552_storage_ptr",
																"typeString": "struct TreasuryDAO.Proposal storage pointer"
															}
														},
														"id": 1738,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2281:8:9",
														"memberName": "executed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1547,
														"src": "2269:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1739,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2292:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2269:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1741,
												"nodeType": "ExpressionStatement",
												"src": "2269:28:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1743,
																	"name": "proposals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1560,
																	"src": "2329:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Proposal_$1552_storage_$dyn_storage",
																		"typeString": "struct TreasuryDAO.Proposal storage ref[] storage ref"
																	}
																},
																"id": 1744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2339:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2329:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2348:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2329:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1747,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1659,
															"src": "2351:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1748,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1661,
															"src": "2362:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1742,
														"name": "ProposalCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "2313:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2313:56:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1750,
												"nodeType": "EmitStatement",
												"src": "2308:61:9"
											}
										]
									},
									"functionSelector": "237af348",
									"id": 1752,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1664,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1663,
												"name": "onlyMember",
												"nameLocations": [
													"1740:10:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1643,
												"src": "1740:10:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1740:10:9"
										}
									],
									"name": "proposeFunding",
									"nameLocation": "1675:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1706:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "1690:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1690:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1725:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "1717:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1717:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1689:43:9"
									},
									"returnParameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1751:0:9"
									},
									"scope": 2046,
									"src": "1666:710:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1822,
										"nodeType": "Block",
										"src": "2431:493:9",
										"statements": [
											{
												"assignments": [
													1761
												],
												"declarations": [
													{
														"constant": false,
														"id": 1761,
														"mutability": "mutable",
														"name": "proposal",
														"nameLocation": "2458:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1822,
														"src": "2441:25:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$1552_storage_ptr",
															"typeString": "struct TreasuryDAO.Proposal"
														},
														"typeName": {
															"id": 1760,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1759,
																"name": "Proposal",
																"nameLocations": [
																	"2441:8:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1552,
																"src": "2441:8:9"
															},
															"referencedDeclaration": 1552,
															"src": "2441:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$1552_storage_ptr",
																"typeString": "struct TreasuryDAO.Proposal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1765,
												"initialValue": {
													"baseExpression": {
														"id": 1762,
														"name": "proposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1560,
														"src": "2469:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Proposal_$1552_storage_$dyn_storage",
															"typeString": "struct TreasuryDAO.Proposal storage ref[] storage ref"
														}
													},
													"id": 1764,
													"indexExpression": {
														"id": 1763,
														"name": "proposalId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1754,
														"src": "2479:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2469:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$1552_storage",
														"typeString": "struct TreasuryDAO.Proposal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2441:49:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2508:27:9",
															"subExpression": {
																"baseExpression": {
																	"expression": {
																		"id": 1767,
																		"name": "proposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1761,
																		"src": "2509:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$1552_storage_ptr",
																			"typeString": "struct TreasuryDAO.Proposal storage pointer"
																		}
																	},
																	"id": 1768,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2518:5:9",
																	"memberName": "voted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1551,
																	"src": "2509:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1771,
																"indexExpression": {
																	"expression": {
																		"id": 1769,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2524:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2528:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2524:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2509:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920766f746564",
															"id": 1773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2537:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6",
																"typeString": "literal_string \"Already voted\""
															},
															"value": "Already voted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6",
																"typeString": "literal_string \"Already voted\""
															}
														],
														"id": 1766,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2500:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2500:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1775,
												"nodeType": "ExpressionStatement",
												"src": "2500:53:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1777,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2571:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2577:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2571:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1779,
																	"name": "proposal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1761,
																	"src": "2589:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Proposal_$1552_storage_ptr",
																		"typeString": "struct TreasuryDAO.Proposal storage pointer"
																	}
																},
																"id": 1780,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2598:7:9",
																"memberName": "endTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1543,
																"src": "2589:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2571:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "566f74696e6720706572696f6420656e646564",
															"id": 1782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2607:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36ba02d776fd732ac627a72d2a4bcd896afdeadba8694171733d88c6775413e0",
																"typeString": "literal_string \"Voting period ended\""
															},
															"value": "Voting period ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36ba02d776fd732ac627a72d2a4bcd896afdeadba8694171733d88c6775413e0",
																"typeString": "literal_string \"Voting period ended\""
															}
														],
														"id": 1776,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2563:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2563:66:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1784,
												"nodeType": "ExpressionStatement",
												"src": "2563:66:9"
											},
											{
												"assignments": [
													1786
												],
												"declarations": [
													{
														"constant": false,
														"id": 1786,
														"mutability": "mutable",
														"name": "voterBalance",
														"nameLocation": "2648:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1822,
														"src": "2640:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1785,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2640:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1792,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1789,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2689:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2693:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2689:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1787,
															"name": "governanceToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "2663:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1494",
																"typeString": "contract IERC20"
															}
														},
														"id": 1788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2679:9:9",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1451,
														"src": "2663:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2663:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2640:60:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1794,
																"name": "voterBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1786,
																"src": "2718:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2733:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2718:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d75737420686f6c6420676f7665726e616e636520746f6b656e7320746f20766f7465",
															"id": 1797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2736:37:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_23dd702789a702d582f99b58a434cec47cd541852e1263083521a4179a192189",
																"typeString": "literal_string \"Must hold governance tokens to vote\""
															},
															"value": "Must hold governance tokens to vote"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_23dd702789a702d582f99b58a434cec47cd541852e1263083521a4179a192189",
																"typeString": "literal_string \"Must hold governance tokens to vote\""
															}
														],
														"id": 1793,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2710:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2710:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1799,
												"nodeType": "ExpressionStatement",
												"src": "2710:64:9"
											},
											{
												"expression": {
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1800,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1761,
															"src": "2785:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$1552_storage_ptr",
																"typeString": "struct TreasuryDAO.Proposal storage pointer"
															}
														},
														"id": 1802,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2794:5:9",
														"memberName": "votes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1541,
														"src": "2785:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1803,
														"name": "voterBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1786,
														"src": "2803:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2785:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1805,
												"nodeType": "ExpressionStatement",
												"src": "2785:30:9"
											},
											{
												"expression": {
													"id": 1813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 1806,
																"name": "proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1761,
																"src": "2825:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$1552_storage_ptr",
																	"typeString": "struct TreasuryDAO.Proposal storage pointer"
																}
															},
															"id": 1810,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2834:5:9",
															"memberName": "voted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1551,
															"src": "2825:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1811,
														"indexExpression": {
															"expression": {
																"id": 1808,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2840:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2844:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2840:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2825:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1812,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2854:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2825:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1814,
												"nodeType": "ExpressionStatement",
												"src": "2825:33:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1816,
															"name": "proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1754,
															"src": "2880:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1817,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2892:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2896:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2892:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1819,
															"name": "voterBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1786,
															"src": "2904:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1815,
														"name": "Voted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1588,
														"src": "2874:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1821,
												"nodeType": "EmitStatement",
												"src": "2869:48:9"
											}
										]
									},
									"functionSelector": "0121b93f",
									"id": 1823,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1757,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1756,
												"name": "onlyMember",
												"nameLocations": [
													"2420:10:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1643,
												"src": "2420:10:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2420:10:9"
										}
									],
									"name": "vote",
									"nameLocation": "2391:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "2401:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "2396:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2396:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2395:17:9"
									},
									"returnParameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2431:0:9"
									},
									"scope": 2046,
									"src": "2382:542:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1882,
										"nodeType": "Block",
										"src": "2979:426:9",
										"statements": [
											{
												"assignments": [
													1830
												],
												"declarations": [
													{
														"constant": false,
														"id": 1830,
														"mutability": "mutable",
														"name": "proposal",
														"nameLocation": "3006:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1882,
														"src": "2989:25:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$1552_storage_ptr",
															"typeString": "struct TreasuryDAO.Proposal"
														},
														"typeName": {
															"id": 1829,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1828,
																"name": "Proposal",
																"nameLocations": [
																	"2989:8:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1552,
																"src": "2989:8:9"
															},
															"referencedDeclaration": 1552,
															"src": "2989:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$1552_storage_ptr",
																"typeString": "struct TreasuryDAO.Proposal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1834,
												"initialValue": {
													"baseExpression": {
														"id": 1831,
														"name": "proposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1560,
														"src": "3017:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Proposal_$1552_storage_$dyn_storage",
															"typeString": "struct TreasuryDAO.Proposal storage ref[] storage ref"
														}
													},
													"id": 1833,
													"indexExpression": {
														"id": 1832,
														"name": "proposalId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1825,
														"src": "3027:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3017:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$1552_storage",
														"typeString": "struct TreasuryDAO.Proposal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2989:49:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1836,
																	"name": "proposal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1830,
																	"src": "3056:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Proposal_$1552_storage_ptr",
																		"typeString": "struct TreasuryDAO.Proposal storage pointer"
																	}
																},
																"id": 1837,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3065:5:9",
																"memberName": "votes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1541,
																"src": "3056:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_500000000000000000000_by_1",
																	"typeString": "int_const 500000000000000000000"
																},
																"id": 1842,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "353030",
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3074:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_500_by_1",
																		"typeString": "int_const 500"
																	},
																	"value": "500"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 1841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3080:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 1840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3084:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "3080:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "3074:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_500000000000000000000_by_1",
																	"typeString": "int_const 500000000000000000000"
																}
															},
															"src": "3056:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820766f746573202835303020746f6b656e7320726571756972656429",
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3088:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70781312560918a61d3b5e274a24dd70cd2d0901f970caf6cb5f94161f7cdb19",
																"typeString": "literal_string \"Not enough votes (500 tokens required)\""
															},
															"value": "Not enough votes (500 tokens required)"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70781312560918a61d3b5e274a24dd70cd2d0901f970caf6cb5f94161f7cdb19",
																"typeString": "literal_string \"Not enough votes (500 tokens required)\""
															}
														],
														"id": 1835,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3048:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3048:81:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1846,
												"nodeType": "ExpressionStatement",
												"src": "3048:81:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3147:18:9",
															"subExpression": {
																"expression": {
																	"id": 1848,
																	"name": "proposal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1830,
																	"src": "3148:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Proposal_$1552_storage_ptr",
																		"typeString": "struct TreasuryDAO.Proposal storage pointer"
																	}
																},
																"id": 1849,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3157:8:9",
																"memberName": "executed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1547,
																"src": "3148:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c7265616479206578656375746564",
															"id": 1851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3167:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_58f47ea4e737df2d9cc4764db26c111751884cf0a1856aca9f4c66cadc811e1b",
																"typeString": "literal_string \"Already executed\""
															},
															"value": "Already executed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_58f47ea4e737df2d9cc4764db26c111751884cf0a1856aca9f4c66cadc811e1b",
																"typeString": "literal_string \"Already executed\""
															}
														],
														"id": 1847,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3139:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1853,
												"nodeType": "ExpressionStatement",
												"src": "3139:47:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1855,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3204:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3210:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3204:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1857,
																	"name": "proposal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1830,
																	"src": "3223:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Proposal_$1552_storage_ptr",
																		"typeString": "struct TreasuryDAO.Proposal storage pointer"
																	}
																},
																"id": 1858,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3232:10:9",
																"memberName": "unlockTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1545,
																"src": "3223:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3204:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6473207374696c6c206c6f636b6564",
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3244:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_41c4e4fc25bbb0d8878d5705bd166f1c809d1260cb49444e3832f4736f0439e3",
																"typeString": "literal_string \"Funds still locked\""
															},
															"value": "Funds still locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_41c4e4fc25bbb0d8878d5705bd166f1c809d1260cb49444e3832f4736f0439e3",
																"typeString": "literal_string \"Funds still locked\""
															}
														],
														"id": 1854,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3196:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3196:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1862,
												"nodeType": "ExpressionStatement",
												"src": "3196:69:9"
											},
											{
												"expression": {
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1863,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "3276:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$1552_storage_ptr",
																"typeString": "struct TreasuryDAO.Proposal storage pointer"
															}
														},
														"id": 1865,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3285:8:9",
														"memberName": "executed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1547,
														"src": "3276:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3296:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3276:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1868,
												"nodeType": "ExpressionStatement",
												"src": "3276:24:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1874,
																"name": "proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1830,
																"src": "3338:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$1552_storage_ptr",
																	"typeString": "struct TreasuryDAO.Proposal storage pointer"
																}
															},
															"id": 1875,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3347:6:9",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1539,
															"src": "3338:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1869,
																"name": "proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1830,
																"src": "3310:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$1552_storage_ptr",
																	"typeString": "struct TreasuryDAO.Proposal storage pointer"
																}
															},
															"id": 1872,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3319:9:9",
															"memberName": "recipient",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1537,
															"src": "3310:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3329:8:9",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3310:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3310:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1877,
												"nodeType": "ExpressionStatement",
												"src": "3310:44:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1879,
															"name": "proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1825,
															"src": "3387:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1878,
														"name": "ProposalExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1592,
														"src": "3370:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3370:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1881,
												"nodeType": "EmitStatement",
												"src": "3365:33:9"
											}
										]
									},
									"functionSelector": "0d61b519",
									"id": 1883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "executeProposal",
									"nameLocation": "2939:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "2960:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "2955:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2955:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2954:17:9"
									},
									"returnParameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2979:0:9"
									},
									"scope": 2046,
									"src": "2930:475:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1901,
										"nodeType": "Block",
										"src": "3464:100:9",
										"statements": [
											{
												"assignments": [
													null,
													1889,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1889,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "3481:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1901,
														"src": "3477:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1888,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "3477:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1893,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1890,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "3496:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$1245",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3506:15:9",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1244,
														"src": "3496:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3496:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3474:49:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1896,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "3545:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3540:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1894,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3540:4:9",
																"typeDescriptions": {}
															}
														},
														"id": 1897,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3540:11:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "316538",
														"id": 1898,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3554:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000_by_1",
															"typeString": "int_const 100000000"
														},
														"value": "1e8"
													},
													"src": "3540:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1887,
												"id": 1900,
												"nodeType": "Return",
												"src": "3533:24:9"
											}
										]
									},
									"functionSelector": "a607a8d9",
									"id": 1902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getETHPrice",
									"nameLocation": "3420:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3431:2:9"
									},
									"returnParameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "3455:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:9:9"
									},
									"scope": 2046,
									"src": "3411:153:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1257
									],
									"body": {
										"id": 1962,
										"nodeType": "Block",
										"src": "3706:285:9",
										"statements": [
											{
												"body": {
													"id": 1956,
													"nodeType": "Block",
													"src": "3760:197:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "3778:22:9",
																		"subExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 1923,
																					"name": "proposals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1560,
																					"src": "3779:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Proposal_$1552_storage_$dyn_storage",
																						"typeString": "struct TreasuryDAO.Proposal storage ref[] storage ref"
																					}
																				},
																				"id": 1925,
																				"indexExpression": {
																					"id": 1924,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1913,
																					"src": "3789:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3779:12:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Proposal_$1552_storage",
																					"typeString": "struct TreasuryDAO.Proposal storage ref"
																				}
																			},
																			"id": 1926,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3792:8:9",
																			"memberName": "executed",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1547,
																			"src": "3779:21:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 1928,
																					"name": "proposals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1560,
																					"src": "3804:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Proposal_$1552_storage_$dyn_storage",
																						"typeString": "struct TreasuryDAO.Proposal storage ref[] storage ref"
																					}
																				},
																				"id": 1930,
																				"indexExpression": {
																					"id": 1929,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1913,
																					"src": "3814:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3804:12:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Proposal_$1552_storage",
																					"typeString": "struct TreasuryDAO.Proposal storage ref"
																				}
																			},
																			"id": 1931,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3817:5:9",
																			"memberName": "votes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1541,
																			"src": "3804:18:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_500000000000000000000_by_1",
																				"typeString": "int_const 500000000000000000000"
																			},
																			"id": 1936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "353030",
																				"id": 1932,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3826:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_500_by_1",
																					"typeString": "int_const 500"
																				},
																				"value": "500"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"id": 1935,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 1933,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3832:2:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"hexValue": "3138",
																					"id": 1934,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3836:2:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_18_by_1",
																						"typeString": "int_const 18"
																					},
																					"value": "18"
																				},
																				"src": "3832:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				}
																			},
																			"src": "3826:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_500000000000000000000_by_1",
																				"typeString": "int_const 500000000000000000000"
																			}
																		},
																		"src": "3804:34:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "3778:60:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1939,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "3842:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3848:9:9",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "3842:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1941,
																				"name": "proposals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1560,
																				"src": "3861:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Proposal_$1552_storage_$dyn_storage",
																					"typeString": "struct TreasuryDAO.Proposal storage ref[] storage ref"
																				}
																			},
																			"id": 1943,
																			"indexExpression": {
																				"id": 1942,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1913,
																				"src": "3871:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3861:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$1552_storage",
																				"typeString": "struct TreasuryDAO.Proposal storage ref"
																			}
																		},
																		"id": 1944,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3874:10:9",
																		"memberName": "unlockTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1545,
																		"src": "3861:23:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3842:42:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3778:106:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1955,
															"nodeType": "IfStatement",
															"src": "3774:173:9",
															"trueBody": {
																"id": 1954,
																"nodeType": "Block",
																"src": "3886:61:9",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"hexValue": "74727565",
																					"id": 1947,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3912:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				{
																					"arguments": [
																						{
																							"id": 1950,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1913,
																							"src": "3929:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 1948,
																							"name": "abi",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967295,
																							"src": "3918:3:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_abi",
																								"typeString": "abi"
																							}
																						},
																						"id": 1949,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "3922:6:9",
																						"memberName": "encode",
																						"nodeType": "MemberAccess",
																						"src": "3918:10:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																							"typeString": "function () pure returns (bytes memory)"
																						}
																					},
																					"id": 1951,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3918:13:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"id": 1952,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3911:21:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																				"typeString": "tuple(bool,bytes memory)"
																			}
																		},
																		"functionReturnParameters": 1911,
																		"id": 1953,
																		"nodeType": "Return",
																		"src": "3904:28:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1916,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1913,
														"src": "3733:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1917,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "3737:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$1552_storage_$dyn_storage",
																"typeString": "struct TreasuryDAO.Proposal storage ref[] storage ref"
															}
														},
														"id": 1918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3747:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3737:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3733:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1957,
												"initializationExpression": {
													"assignments": [
														1913
													],
													"declarations": [
														{
															"constant": false,
															"id": 1913,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3726:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1957,
															"src": "3721:6:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1912,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3721:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1915,
													"initialValue": {
														"hexValue": "30",
														"id": 1914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3730:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3721:10:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1921,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3755:3:9",
														"subExpression": {
															"id": 1920,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1913,
															"src": "3755:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1922,
													"nodeType": "ExpressionStatement",
													"src": "3755:3:9"
												},
												"nodeType": "ForStatement",
												"src": "3716:241:9"
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "66616c7365",
															"id": 1958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3974:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														{
															"hexValue": "",
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3981:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"id": 1960,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3973:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$",
														"typeString": "tuple(bool,literal_string \"\")"
													}
												},
												"functionReturnParameters": 1911,
												"id": 1961,
												"nodeType": "Return",
												"src": "3966:18:9"
											}
										]
									},
									"functionSelector": "6e04ff0d",
									"id": 1963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkUpkeep",
									"nameLocation": "3579:11:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1906,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3637:8:9"
									},
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "3591:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1903,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:32:9"
									},
									"returnParameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "upkeepNeeded",
												"nameLocation": "3660:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "3655:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1907,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3655:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "3674:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1909,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3674:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3654:51:9"
									},
									"scope": 2046,
									"src": "3570:421:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1263
									],
									"body": {
										"id": 1983,
										"nodeType": "Block",
										"src": "4066:103:9",
										"statements": [
											{
												"assignments": [
													1970
												],
												"declarations": [
													{
														"constant": false,
														"id": 1970,
														"mutability": "mutable",
														"name": "proposalId",
														"nameLocation": "4081:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1983,
														"src": "4076:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1969,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4076:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1978,
												"initialValue": {
													"arguments": [
														{
															"id": 1973,
															"name": "performData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1965,
															"src": "4105:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"components": [
																{
																	"id": 1975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4119:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1974,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "4119:4:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 1976,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4118:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															}
														],
														"expression": {
															"id": 1971,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4094:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1972,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4098:6:9",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "4094:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4094:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4076:49:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1980,
															"name": "proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1970,
															"src": "4151:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1979,
														"name": "executeProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1883,
														"src": "4135:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4135:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1982,
												"nodeType": "ExpressionStatement",
												"src": "4135:27:9"
											}
										]
									},
									"functionSelector": "4585e33b",
									"id": 1984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "performUpkeep",
									"nameLocation": "4006:13:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1967,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4057:8:9"
									},
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "4035:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "4020:26:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1964,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4020:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4019:28:9"
									},
									"returnParameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4066:0:9"
									},
									"scope": 2046,
									"src": "3997:172:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2006,
										"nodeType": "Block",
										"src": "4233:77:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1996,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4271:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TreasuryDAO_$2046",
																		"typeString": "contract TreasuryDAO"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TreasuryDAO_$2046",
																		"typeString": "contract TreasuryDAO"
																	}
																],
																"id": 1995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4263:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1994,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4263:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4263:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1998,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1986,
															"src": "4278:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 2001,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4294:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TreasuryDAO_$2046",
																		"typeString": "contract TreasuryDAO"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TreasuryDAO_$2046",
																		"typeString": "contract TreasuryDAO"
																	}
																],
																"id": 2000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4286:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1999,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4286:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4286:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 2003,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4301:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 1991,
															"name": "lendingPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "4243:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPool_$638",
																"typeString": "contract IPool"
															}
														},
														"id": 1993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4255:7:9",
														"memberName": "deposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 637,
														"src": "4243:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
															"typeString": "function (address,uint256,address,uint16) external"
														}
													},
													"id": 2004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4243:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2005,
												"nodeType": "ExpressionStatement",
												"src": "4243:60:9"
											}
										]
									},
									"functionSelector": "68fd2d80",
									"id": 2007,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1989,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1988,
												"name": "onlyOwner",
												"nameLocations": [
													"4223:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1327,
												"src": "4223:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4223:9:9"
										}
									],
									"name": "depositToAave",
									"nameLocation": "4184:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4206:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "4198:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4198:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4197:16:9"
									},
									"returnParameters": {
										"id": 1990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4233:0:9"
									},
									"scope": 2046,
									"src": "4175:135:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2028,
										"nodeType": "Block",
										"src": "4377:75:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2019,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4416:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TreasuryDAO_$2046",
																		"typeString": "contract TreasuryDAO"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TreasuryDAO_$2046",
																		"typeString": "contract TreasuryDAO"
																	}
																],
																"id": 2018,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4408:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2017,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4408:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4408:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2021,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2009,
															"src": "4423:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 2024,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4439:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TreasuryDAO_$2046",
																		"typeString": "contract TreasuryDAO"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TreasuryDAO_$2046",
																		"typeString": "contract TreasuryDAO"
																	}
																],
																"id": 2023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4431:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2022,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4431:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4431:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2014,
															"name": "lendingPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "4387:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPool_$638",
																"typeString": "contract IPool"
															}
														},
														"id": 2016,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4399:8:9",
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 255,
														"src": "4387:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,uint256,address) external returns (uint256)"
														}
													},
													"id": 2026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4387:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2027,
												"nodeType": "ExpressionStatement",
												"src": "4387:58:9"
											}
										]
									},
									"functionSelector": "688f237b",
									"id": 2029,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2012,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2011,
												"name": "onlyOwner",
												"nameLocations": [
													"4367:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1327,
												"src": "4367:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4367:9:9"
										}
									],
									"name": "withdrawFromAave",
									"nameLocation": "4325:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4350:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "4342:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4342:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4341:16:9"
									},
									"returnParameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4377:0:9"
									},
									"scope": 2046,
									"src": "4316:136:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2032,
										"nodeType": "Block",
										"src": "4492:2:9",
										"statements": []
									},
									"functionSelector": "d0e30db0",
									"id": 2033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "4467:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4474:2:9"
									},
									"returnParameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4492:0:9"
									},
									"scope": 2046,
									"src": "4458:36:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2044,
										"nodeType": "Block",
										"src": "4552:45:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 2040,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "4577:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_TreasuryDAO_$2046",
																	"typeString": "contract TreasuryDAO"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_TreasuryDAO_$2046",
																	"typeString": "contract TreasuryDAO"
																}
															],
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4569:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2038,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4569:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 2041,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4569:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4583:7:9",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "4569:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2037,
												"id": 2043,
												"nodeType": "Return",
												"src": "4562:28:9"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 2045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "4509:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4519:2:9"
									},
									"returnParameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "4543:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4543:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4542:9:9"
									},
									"scope": 2046,
									"src": "4500:97:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2047,
							"src": "381:4218:9",
							"usedErrors": [
								1282,
								1287
							],
							"usedEvents": [
								1293,
								1580,
								1588,
								1592
							]
						}
					],
					"src": "32:4570:9"
				},
				"id": 9
			}
		}
	}
}