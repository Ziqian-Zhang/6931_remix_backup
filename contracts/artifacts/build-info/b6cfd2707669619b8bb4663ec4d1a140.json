{
	"id": "b6cfd2707669619b8bb4663ec4d1a140",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/GovernanceToken_flattened.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: contracts/GovernanceToken.sol\n\n\npragma solidity ^0.8.0;\n\n\n\n\ncontract DAOToken is ERC20, Ownable {\n   constructor(address initialOwner)\n       ERC20(\"DAO Governance Token\", \"DAOG\")\n       Ownable(initialOwner)\n   {\n       _mint(initialOwner, 1000000 * 10**18); // Mint 1 million tokens to owner\n   }\n\n\n   function mint(address to, uint256 amount) public onlyOwner {\n       _mint(to, amount);\n   }\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/GovernanceToken_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GovernanceToken_flattened.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GovernanceToken_flattened.sol\":{\"keccak256\":\"0xb605fba13df8ddb1908ea065ac4437e288f080474fa678bf218e662ab1469aa6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e31b65aa218b901cba41bd46cdb66a558261063ee4cbc57c260997667c81f\",\"dweb:/ipfs/QmNd1KJFPitCDEarhrP69rAoKnvPbTukmTZVrUnhT8ahoB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"DAOToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/GovernanceToken_flattened.sol\":24938:25275  contract DAOToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/GovernanceToken_flattened.sol\":24979:25176  constructor(address initialOwner)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/GovernanceToken_flattened.sol\":25073:25085  initialOwner */\n  dup1\n    /* \"contracts/GovernanceToken_flattened.sol\":12497:12610  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x14\n  dup2\n  mstore\n  0x20\n  add\n  0x44414f20476f7665726e616e636520546f6b656e000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe0, 0x44414f47)\n  dup2\n  mstore\n  pop\n    /* \"contracts/GovernanceToken_flattened.sol\":12571:12576  name_ */\n  dup2\n    /* \"contracts/GovernanceToken_flattened.sol\":12563:12568  _name */\n  0x03\n    /* \"contracts/GovernanceToken_flattened.sol\":12563:12576  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/GovernanceToken_flattened.sol\":12586:12593  _symbol */\n  0x04\n    /* \"contracts/GovernanceToken_flattened.sol\":12586:12603  _symbol = symbol_ */\n  tag_10\n    /* \"contracts/GovernanceToken_flattened.sol\":12596:12603  symbol_ */\n  dup3\n    /* \"contracts/GovernanceToken_flattened.sol\":12586:12593  _symbol */\n  dup3\n    /* \"contracts/GovernanceToken_flattened.sol\":12586:12603  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/GovernanceToken_flattened.sol\":23039:23065  initialOwner == address(0) */\n  dup2\n  and\n    /* \"contracts/GovernanceToken_flattened.sol\":23035:23130  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"contracts/GovernanceToken_flattened.sol\":23088:23119  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"contracts/GovernanceToken_flattened.sol\":23116:23117  0 */\n  0x00\n    /* \"contracts/GovernanceToken_flattened.sol\":23088:23119  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3096:3147   */\n  mstore\n    /* \"#utility.yul\":3069:3087   */\n  0x24\n  add\n    /* \"contracts/GovernanceToken_flattened.sol\":23088:23119  OwnableInvalidOwner(address(0)) */\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/GovernanceToken_flattened.sol\":23035:23130  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"contracts/GovernanceToken_flattened.sol\":23139:23171  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"contracts/GovernanceToken_flattened.sol\":23158:23170  initialOwner */\n  dup2\n    /* \"contracts/GovernanceToken_flattened.sol\":23139:23157  _transferOwnership */\n  tag_16\n    /* \"contracts/GovernanceToken_flattened.sol\":23139:23171  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_15:\n  pop\n    /* \"contracts/GovernanceToken_flattened.sol\":25099:25136  _mint(initialOwner, 1000000 * 10**18) */\n  tag_18\n    /* \"contracts/GovernanceToken_flattened.sol\":25105:25117  initialOwner */\n  dup2\n    /* \"contracts/GovernanceToken_flattened.sol\":25119:25135  1000000 * 10**18 */\n  0xd3c21bcecceda1000000\n    /* \"contracts/GovernanceToken_flattened.sol\":25099:25104  _mint */\n  tag_19\n    /* \"contracts/GovernanceToken_flattened.sol\":25099:25136  _mint(initialOwner, 1000000 * 10**18) */\n  jump\t// in\ntag_18:\n    /* \"contracts/GovernanceToken_flattened.sol\":24979:25176  constructor(address initialOwner)... */\n  pop\n    /* \"contracts/GovernanceToken_flattened.sol\":24938:25275  contract DAOToken is ERC20, Ownable {... */\n  jump(tag_44)\n    /* \"contracts/GovernanceToken_flattened.sol\":24678:24865  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"contracts/GovernanceToken_flattened.sol\":24770:24776  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/GovernanceToken_flattened.sol\":24786:24803  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"contracts/GovernanceToken_flattened.sol\":24818:24858  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"contracts/GovernanceToken_flattened.sol\":24770:24776  _owner */\n  swap2\n  and\n  swap2\n    /* \"contracts/GovernanceToken_flattened.sol\":24786:24803  _owner = newOwner */\n  swap1\n    /* \"contracts/GovernanceToken_flattened.sol\":24770:24776  _owner */\n  dup3\n  swap1\n    /* \"contracts/GovernanceToken_flattened.sol\":24818:24858  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/GovernanceToken_flattened.sol\":24751:24767  address oldOwner */\n  0x00\n  swap1\n    /* \"contracts/GovernanceToken_flattened.sol\":24818:24858  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"contracts/GovernanceToken_flattened.sol\":24741:24865  {... */\n  pop\n    /* \"contracts/GovernanceToken_flattened.sol\":24678:24865  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/GovernanceToken_flattened.sol\":18354:18562  function _mint(address account, uint256 value) internal {... */\ntag_19:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/GovernanceToken_flattened.sol\":18424:18445  account == address(0) */\n  dup3\n  and\n    /* \"contracts/GovernanceToken_flattened.sol\":18420:18511  if (account == address(0)) {... */\n  tag_23\n  jumpi\n    /* \"contracts/GovernanceToken_flattened.sol\":18468:18500  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"contracts/GovernanceToken_flattened.sol\":18497:18498  0 */\n  0x00\n    /* \"contracts/GovernanceToken_flattened.sol\":18468:18500  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3096:3147   */\n  mstore\n    /* \"#utility.yul\":3069:3087   */\n  0x24\n  add\n    /* \"contracts/GovernanceToken_flattened.sol\":18468:18500  ERC20InvalidReceiver(address(0)) */\n  tag_13\n    /* \"#utility.yul\":2950:3153   */\n  jump\n    /* \"contracts/GovernanceToken_flattened.sol\":18420:18511  if (account == address(0)) {... */\ntag_23:\n    /* \"contracts/GovernanceToken_flattened.sol\":18520:18555  _update(address(0), account, value) */\n  tag_25\n    /* \"contracts/GovernanceToken_flattened.sol\":18536:18537  0 */\n  0x00\n    /* \"contracts/GovernanceToken_flattened.sol\":18540:18547  account */\n  dup4\n    /* \"contracts/GovernanceToken_flattened.sol\":18549:18554  value */\n  dup4\n    /* \"contracts/GovernanceToken_flattened.sol\":18520:18527  _update */\n  tag_26\n    /* \"contracts/GovernanceToken_flattened.sol\":18520:18555  _update(address(0), account, value) */\n  jump\t// in\ntag_25:\n    /* \"contracts/GovernanceToken_flattened.sol\":18354:18562  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/GovernanceToken_flattened.sol\":16904:18011  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_26:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/GovernanceToken_flattened.sol\":16993:17011  from == address(0) */\n  dup4\n  and\n    /* \"contracts/GovernanceToken_flattened.sol\":16989:17529  if (from == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"contracts/GovernanceToken_flattened.sol\":17145:17150  value */\n  dup1\n    /* \"contracts/GovernanceToken_flattened.sol\":17129:17141  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/GovernanceToken_flattened.sol\":17129:17150  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"contracts/GovernanceToken_flattened.sol\":16989:17529  if (from == address(0)) {... */\n  tag_31\n  swap1\n  pop\n  jump\ntag_28:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/GovernanceToken_flattened.sol\":17203:17218  _balances[from] */\n  dup4\n  and\n    /* \"contracts/GovernanceToken_flattened.sol\":17181:17200  uint256 fromBalance */\n  0x00\n    /* \"contracts/GovernanceToken_flattened.sol\":17203:17218  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"contracts/GovernanceToken_flattened.sol\":17236:17255  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"contracts/GovernanceToken_flattened.sol\":17232:17347  if (fromBalance < value) {... */\n  iszero\n  tag_32\n  jumpi\n    /* \"contracts/GovernanceToken_flattened.sol\":17282:17332  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3605:3637   */\n  dup6\n  and\n    /* \"contracts/GovernanceToken_flattened.sol\":17282:17332  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3587:3638   */\n  mstore\n    /* \"#utility.yul\":3654:3672   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":3647:3681   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":3697:3715   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":3690:3724   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":3560:3578   */\n  0x64\n  add\n    /* \"contracts/GovernanceToken_flattened.sol\":17282:17332  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_13\n    /* \"#utility.yul\":3385:3730   */\n  jump\n    /* \"contracts/GovernanceToken_flattened.sol\":17232:17347  if (fromBalance < value) {... */\ntag_32:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/GovernanceToken_flattened.sol\":17467:17482  _balances[from] */\n  dup5\n  and\n    /* \"contracts/GovernanceToken_flattened.sol\":17467:17476  _balances */\n  0x00\n    /* \"contracts/GovernanceToken_flattened.sol\":17467:17482  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"contracts/GovernanceToken_flattened.sol\":17485:17504  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"contracts/GovernanceToken_flattened.sol\":17467:17504  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"contracts/GovernanceToken_flattened.sol\":16989:17529  if (from == address(0)) {... */\ntag_31:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/GovernanceToken_flattened.sol\":17543:17559  to == address(0) */\n  dup3\n  and\n    /* \"contracts/GovernanceToken_flattened.sol\":17539:17964  if (to == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"contracts/GovernanceToken_flattened.sol\":17706:17718  _totalSupply */\n  0x02\n    /* \"contracts/GovernanceToken_flattened.sol\":17706:17727  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"contracts/GovernanceToken_flattened.sol\":17539:17964  if (to == address(0)) {... */\n  jump(tag_36)\ntag_35:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/GovernanceToken_flattened.sol\":17917:17930  _balances[to] */\n  dup3\n  and\n    /* \"contracts/GovernanceToken_flattened.sol\":17917:17926  _balances */\n  0x00\n    /* \"contracts/GovernanceToken_flattened.sol\":17917:17930  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"contracts/GovernanceToken_flattened.sol\":17917:17939  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"contracts/GovernanceToken_flattened.sol\":17539:17964  if (to == address(0)) {... */\ntag_36:\n    /* \"contracts/GovernanceToken_flattened.sol\":17994:17996  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/GovernanceToken_flattened.sol\":17979:18004  Transfer(from, to, value) */\n  and\n    /* \"contracts/GovernanceToken_flattened.sol\":17988:17992  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/GovernanceToken_flattened.sol\":17979:18004  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/GovernanceToken_flattened.sol\":17998:18003  value */\n  dup4\n    /* \"contracts/GovernanceToken_flattened.sol\":17979:18004  Transfer(from, to, value) */\n  mload(0x40)\n  tag_37\n  swap2\n    /* \"#utility.yul\":3881:3906   */\n  dup2\n  mstore\n    /* \"#utility.yul\":3869:3871   */\n  0x20\n    /* \"#utility.yul\":3854:3872   */\n  add\n  swap1\n    /* \"#utility.yul\":3735:3912   */\n  jump\n    /* \"contracts/GovernanceToken_flattened.sol\":17979:18004  Transfer(from, to, value) */\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/GovernanceToken_flattened.sol\":16904:18011  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_46:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_47:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:436   */\ntag_39:\n    /* \"#utility.yul\":370:380   */\n  0x4e487b71\n    /* \"#utility.yul\":365:368   */\n  0xe0\n    /* \"#utility.yul\":361:381   */\n  shl\n    /* \"#utility.yul\":358:359   */\n  0x00\n    /* \"#utility.yul\":351:382   */\n  mstore\n    /* \"#utility.yul\":401:405   */\n  0x41\n    /* \"#utility.yul\":398:399   */\n  0x04\n    /* \"#utility.yul\":391:406   */\n  mstore\n    /* \"#utility.yul\":425:429   */\n  0x24\n    /* \"#utility.yul\":422:423   */\n  0x00\n    /* \"#utility.yul\":415:430   */\n  revert\n    /* \"#utility.yul\":441:821   */\ntag_40:\n    /* \"#utility.yul\":520:521   */\n  0x01\n    /* \"#utility.yul\":516:528   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":563:575   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":584:645   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":638:642   */\n  0x7f\n    /* \"#utility.yul\":630:636   */\n  dup3\n    /* \"#utility.yul\":626:643   */\n  and\n    /* \"#utility.yul\":616:643   */\n  swap2\n  pop\n    /* \"#utility.yul\":584:645   */\ntag_50:\n    /* \"#utility.yul\":691:693   */\n  0x20\n    /* \"#utility.yul\":683:689   */\n  dup3\n    /* \"#utility.yul\":680:694   */\n  lt\n    /* \"#utility.yul\":660:678   */\n  dup2\n    /* \"#utility.yul\":657:695   */\n  sub\n    /* \"#utility.yul\":654:815   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":737:747   */\n  0x4e487b71\n    /* \"#utility.yul\":732:735   */\n  0xe0\n    /* \"#utility.yul\":728:748   */\n  shl\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":718:749   */\n  mstore\n    /* \"#utility.yul\":772:776   */\n  0x22\n    /* \"#utility.yul\":769:770   */\n  0x04\n    /* \"#utility.yul\":762:777   */\n  mstore\n    /* \"#utility.yul\":800:804   */\n  0x24\n    /* \"#utility.yul\":797:798   */\n  0x00\n    /* \"#utility.yul\":790:805   */\n  revert\n    /* \"#utility.yul\":654:815   */\ntag_51:\n  pop\n    /* \"#utility.yul\":441:821   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":952:1470   */\ntag_42:\n    /* \"#utility.yul\":1054:1056   */\n  0x1f\n    /* \"#utility.yul\":1049:1052   */\n  dup3\n    /* \"#utility.yul\":1046:1057   */\n  gt\n    /* \"#utility.yul\":1043:1464   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1090:1095   */\n  dup1\n    /* \"#utility.yul\":1087:1088   */\n  0x00\n    /* \"#utility.yul\":1080:1096   */\n  mstore\n    /* \"#utility.yul\":1134:1138   */\n  0x20\n    /* \"#utility.yul\":1131:1132   */\n  0x00\n    /* \"#utility.yul\":1121:1139   */\n  keccak256\n    /* \"#utility.yul\":1204:1206   */\n  0x1f\n    /* \"#utility.yul\":1192:1202   */\n  dup5\n    /* \"#utility.yul\":1188:1207   */\n  add\n    /* \"#utility.yul\":1185:1186   */\n  0x05\n    /* \"#utility.yul\":1181:1208   */\n  shr\n    /* \"#utility.yul\":1175:1179   */\n  dup2\n    /* \"#utility.yul\":1171:1209   */\n  add\n    /* \"#utility.yul\":1240:1244   */\n  0x20\n    /* \"#utility.yul\":1228:1238   */\n  dup6\n    /* \"#utility.yul\":1225:1245   */\n  lt\n    /* \"#utility.yul\":1222:1269   */\n  iszero\n  tag_55\n  jumpi\n  pop\n    /* \"#utility.yul\":1263:1267   */\n  dup1\n    /* \"#utility.yul\":1222:1269   */\ntag_55:\n    /* \"#utility.yul\":1318:1320   */\n  0x1f\n    /* \"#utility.yul\":1313:1316   */\n  dup5\n    /* \"#utility.yul\":1309:1321   */\n  add\n    /* \"#utility.yul\":1306:1307   */\n  0x05\n    /* \"#utility.yul\":1302:1322   */\n  shr\n    /* \"#utility.yul\":1296:1300   */\n  dup3\n    /* \"#utility.yul\":1292:1323   */\n  add\n    /* \"#utility.yul\":1282:1323   */\n  swap2\n  pop\n    /* \"#utility.yul\":1373:1454   */\ntag_56:\n    /* \"#utility.yul\":1391:1393   */\n  dup2\n    /* \"#utility.yul\":1384:1389   */\n  dup2\n    /* \"#utility.yul\":1381:1394   */\n  lt\n    /* \"#utility.yul\":1373:1454   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1450:1451   */\n  0x00\n    /* \"#utility.yul\":1436:1452   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1417:1418   */\n  0x01\n    /* \"#utility.yul\":1406:1419   */\n  add\n    /* \"#utility.yul\":1373:1454   */\n  jump(tag_56)\ntag_58:\n    /* \"#utility.yul\":1377:1380   */\n  pop\n  pop\n    /* \"#utility.yul\":1043:1464   */\ntag_54:\n    /* \"#utility.yul\":952:1470   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1646:2945   */\ntag_9:\n    /* \"#utility.yul\":1766:1776   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1788:1818   */\n  dup2\n  gt\n    /* \"#utility.yul\":1785:1841   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":1821:1839   */\n  tag_62\n  tag_39\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1850:1947   */\n  tag_63\n    /* \"#utility.yul\":1940:1946   */\n  dup2\n    /* \"#utility.yul\":1900:1938   */\n  tag_64\n    /* \"#utility.yul\":1932:1936   */\n  dup5\n    /* \"#utility.yul\":1926:1937   */\n  sload\n    /* \"#utility.yul\":1900:1938   */\n  tag_40\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1894:1898   */\n  dup5\n    /* \"#utility.yul\":1850:1947   */\n  tag_42\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":2027:2029   */\n  0x1f\n    /* \"#utility.yul\":2016:2030   */\n  dup3\n  gt\n    /* \"#utility.yul\":2044:2045   */\n  0x01\n    /* \"#utility.yul\":2039:2688   */\n  dup2\n  eq\n  tag_66\n  jumpi\n    /* \"#utility.yul\":2732:2733   */\n  0x00\n    /* \"#utility.yul\":2749:2755   */\n  dup4\n    /* \"#utility.yul\":2746:2835   */\n  iszero\n  tag_67\n  jumpi\n  pop\n    /* \"#utility.yul\":2801:2820   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2795:2821   */\n  mload\n    /* \"#utility.yul\":2746:2835   */\ntag_67:\n  not(0x00)\n    /* \"#utility.yul\":1603:1604   */\n  0x03\n    /* \"#utility.yul\":1599:1610   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1595:1619   */\n  shr\n    /* \"#utility.yul\":1591:1620   */\n  not\n    /* \"#utility.yul\":1581:1621   */\n  and\n    /* \"#utility.yul\":1627:1628   */\n  0x01\n    /* \"#utility.yul\":1623:1634   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1578:1635   */\n  or\n    /* \"#utility.yul\":2848:2929   */\n  dup5\n  sstore\n    /* \"#utility.yul\":2009:2939   */\n  jump(tag_58)\n    /* \"#utility.yul\":2039:2688   */\ntag_66:\n    /* \"#utility.yul\":899:900   */\n  0x00\n    /* \"#utility.yul\":892:906   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":936:940   */\n  0x20\n    /* \"#utility.yul\":923:941   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2075:2095   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":2193:2415   */\ntag_70:\n    /* \"#utility.yul\":2207:2214   */\n  dup3\n    /* \"#utility.yul\":2204:2205   */\n  dup2\n    /* \"#utility.yul\":2201:2215   */\n  lt\n    /* \"#utility.yul\":2193:2415   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n    /* \"#utility.yul\":2268:2310   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2396:2400   */\n  0x20\n    /* \"#utility.yul\":2381:2401   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2349:2350   */\n  0x01\n    /* \"#utility.yul\":2337:2351   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":2223:2235   */\n  add\n    /* \"#utility.yul\":2193:2415   */\n  jump(tag_70)\ntag_72:\n    /* \"#utility.yul\":2197:2200   */\n  pop\n    /* \"#utility.yul\":2443:2449   */\n  dup5\n    /* \"#utility.yul\":2434:2441   */\n  dup3\n    /* \"#utility.yul\":2431:2450   */\n  lt\n    /* \"#utility.yul\":2428:2629   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2504:2523   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2498:2524   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2587:2588   */\n  0x03\n    /* \"#utility.yul\":2583:2597   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2599:2602   */\n  0xf8\n    /* \"#utility.yul\":2579:2603   */\n  and\n    /* \"#utility.yul\":2575:2612   */\n  shr\n    /* \"#utility.yul\":2571:2613   */\n  not\n    /* \"#utility.yul\":2556:2614   */\n  and\n    /* \"#utility.yul\":2541:2615   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2428:2629   */\ntag_73:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2675:2676   */\n  0x01\n    /* \"#utility.yul\":2659:2673   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2655:2677   */\n  add\n    /* \"#utility.yul\":2642:2678   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1646:2945   */\n  jump\t// out\n    /* \"#utility.yul\":3158:3380   */\ntag_30:\n    /* \"#utility.yul\":3223:3232   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":3244:3254   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":3241:3374   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":3296:3306   */\n  0x4e487b71\n    /* \"#utility.yul\":3291:3294   */\n  0xe0\n    /* \"#utility.yul\":3287:3307   */\n  shl\n    /* \"#utility.yul\":3284:3285   */\n  0x00\n    /* \"#utility.yul\":3277:3308   */\n  mstore\n    /* \"#utility.yul\":3331:3335   */\n  0x11\n    /* \"#utility.yul\":3328:3329   */\n  0x04\n    /* \"#utility.yul\":3321:3336   */\n  mstore\n    /* \"#utility.yul\":3359:3363   */\n  0x24\n    /* \"#utility.yul\":3356:3357   */\n  0x00\n    /* \"#utility.yul\":3349:3364   */\n  revert\n    /* \"#utility.yul\":3241:3374   */\ntag_76:\n    /* \"#utility.yul\":3158:3380   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3735:3912   */\ntag_44:\n    /* \"contracts/GovernanceToken_flattened.sol\":24938:25275  contract DAOToken is ERC20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/GovernanceToken_flattened.sol\":24938:25275  contract DAOToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/GovernanceToken_flattened.sol\":12675:12764  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GovernanceToken_flattened.sol\":14894:15080  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n        /* \"#utility.yul\":1085:1099   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1078:1100   */\n      iszero\n        /* \"#utility.yul\":1060:1101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1048:1050   */\n      0x20\n        /* \"#utility.yul\":1033:1051   */\n      add\n        /* \"contracts/GovernanceToken_flattened.sol\":14894:15080  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_20\n        /* \"#utility.yul\":920:1107   */\n      jump\n        /* \"contracts/GovernanceToken_flattened.sol\":13745:13842  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"contracts/GovernanceToken_flattened.sol\":13823:13835  _totalSupply */\n      sload(0x02)\n        /* \"contracts/GovernanceToken_flattened.sol\":13745:13842  function totalSupply() public view virtual returns (uint256) {... */\n    tag_28:\n      mload(0x40)\n        /* \"#utility.yul\":1258:1283   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"contracts/GovernanceToken_flattened.sol\":13745:13842  function totalSupply() public view virtual returns (uint256) {... */\n      tag_20\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"contracts/GovernanceToken_flattened.sol\":15672:15916  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_22\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n        /* \"contracts/GovernanceToken_flattened.sol\":13603:13685  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"contracts/GovernanceToken_flattened.sol\":13676:13678  18 */\n      0x12\n        /* \"#utility.yul\":1815:1851   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1803:1805   */\n      0x20\n        /* \"#utility.yul\":1788:1806   */\n      add\n        /* \"contracts/GovernanceToken_flattened.sol\":13603:13685  function decimals() public view virtual returns (uint8) {... */\n      tag_20\n        /* \"#utility.yul\":1673:1857   */\n      jump\n        /* \"contracts/GovernanceToken_flattened.sol\":25182:25273  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_8:\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/GovernanceToken_flattened.sol\":13900:14016  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_28\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GovernanceToken_flattened.sol\":13991:14009  _balances[account] */\n      and\n        /* \"contracts/GovernanceToken_flattened.sol\":13965:13972  uint256 */\n      0x00\n        /* \"contracts/GovernanceToken_flattened.sol\":13991:14009  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/GovernanceToken_flattened.sol\":13900:14016  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/GovernanceToken_flattened.sol\":24059:24160  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_41\n      tag_50\n      jump\t// in\n        /* \"contracts/GovernanceToken_flattened.sol\":23404:23489  function owner() public view virtual returns (address) {... */\n    tag_11:\n        /* \"contracts/GovernanceToken_flattened.sol\":23476:23482  _owner */\n      sload(0x05)\n        /* \"contracts/GovernanceToken_flattened.sol\":23404:23489  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GovernanceToken_flattened.sol\":23476:23482  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2199:2250   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2187:2189   */\n      0x20\n        /* \"#utility.yul\":2172:2190   */\n      add\n        /* \"contracts/GovernanceToken_flattened.sol\":23404:23489  function owner() public view virtual returns (address) {... */\n      tag_20\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"contracts/GovernanceToken_flattened.sol\":12877:12970  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_18\n      tag_56\n      jump\t// in\n        /* \"contracts/GovernanceToken_flattened.sol\":14211:14389  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_13:\n      tag_22\n      tag_59\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n        /* \"contracts/GovernanceToken_flattened.sol\":14447:14587  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_28\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GovernanceToken_flattened.sol\":14553:14571  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/GovernanceToken_flattened.sol\":14527:14534  uint256 */\n      0x00\n        /* \"contracts/GovernanceToken_flattened.sol\":14553:14571  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/GovernanceToken_flattened.sol\":14553:14564  _allowances */\n      0x01\n        /* \"contracts/GovernanceToken_flattened.sol\":14553:14571  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/GovernanceToken_flattened.sol\":14553:14580  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/GovernanceToken_flattened.sol\":14447:14587  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/GovernanceToken_flattened.sol\":24309:24524  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      tag_41\n      tag_68\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n        /* \"contracts/GovernanceToken_flattened.sol\":12675:12764  function name() public view virtual returns (string memory) {... */\n    tag_19:\n        /* \"contracts/GovernanceToken_flattened.sol\":12720:12733  string memory */\n      0x60\n        /* \"contracts/GovernanceToken_flattened.sol\":12752:12757  _name */\n      0x03\n        /* \"contracts/GovernanceToken_flattened.sol\":12745:12757  return _name */\n      dup1\n      sload\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_73\n      swap1\n      tag_72\n      jump\t// in\n    tag_73:\n      dup1\n      iszero\n      tag_74\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_75\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_74)\n    tag_75:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_76:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_76\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_74:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/GovernanceToken_flattened.sol\":12675:12764  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/GovernanceToken_flattened.sol\":14894:15080  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_25:\n        /* \"contracts/GovernanceToken_flattened.sol\":14967:14971  bool */\n      0x00\n        /* \"contracts/GovernanceToken_flattened.sol\":4285:4295  msg.sender */\n      caller\n        /* \"contracts/GovernanceToken_flattened.sol\":15021:15052  _approve(owner, spender, value) */\n      tag_80\n        /* \"contracts/GovernanceToken_flattened.sol\":4285:4295  msg.sender */\n      dup2\n        /* \"contracts/GovernanceToken_flattened.sol\":15037:15044  spender */\n      dup6\n        /* \"contracts/GovernanceToken_flattened.sol\":15046:15051  value */\n      dup6\n        /* \"contracts/GovernanceToken_flattened.sol\":15021:15029  _approve */\n      tag_81\n        /* \"contracts/GovernanceToken_flattened.sol\":15021:15052  _approve(owner, spender, value) */\n      jump\t// in\n    tag_80:\n        /* \"contracts/GovernanceToken_flattened.sol\":15069:15073  true */\n      0x01\n        /* \"contracts/GovernanceToken_flattened.sol\":15062:15073  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/GovernanceToken_flattened.sol\":14894:15080  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_77:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GovernanceToken_flattened.sol\":15672:15916  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_35:\n        /* \"contracts/GovernanceToken_flattened.sol\":15759:15763  bool */\n      0x00\n        /* \"contracts/GovernanceToken_flattened.sol\":4285:4295  msg.sender */\n      caller\n        /* \"contracts/GovernanceToken_flattened.sol\":15815:15852  _spendAllowance(from, spender, value) */\n      tag_85\n        /* \"contracts/GovernanceToken_flattened.sol\":15831:15835  from */\n      dup6\n        /* \"contracts/GovernanceToken_flattened.sol\":4285:4295  msg.sender */\n      dup3\n        /* \"contracts/GovernanceToken_flattened.sol\":15846:15851  value */\n      dup6\n        /* \"contracts/GovernanceToken_flattened.sol\":15815:15830  _spendAllowance */\n      tag_86\n        /* \"contracts/GovernanceToken_flattened.sol\":15815:15852  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_85:\n        /* \"contracts/GovernanceToken_flattened.sol\":15862:15888  _transfer(from, to, value) */\n      tag_87\n        /* \"contracts/GovernanceToken_flattened.sol\":15872:15876  from */\n      dup6\n        /* \"contracts/GovernanceToken_flattened.sol\":15878:15880  to */\n      dup6\n        /* \"contracts/GovernanceToken_flattened.sol\":15882:15887  value */\n      dup6\n        /* \"contracts/GovernanceToken_flattened.sol\":15862:15871  _transfer */\n      tag_88\n        /* \"contracts/GovernanceToken_flattened.sol\":15862:15888  _transfer(from, to, value) */\n      jump\t// in\n    tag_87:\n      pop\n        /* \"contracts/GovernanceToken_flattened.sol\":15905:15909  true */\n      0x01\n      swap5\n        /* \"contracts/GovernanceToken_flattened.sol\":15672:15916  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GovernanceToken_flattened.sol\":25182:25273  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_43:\n        /* \"contracts/GovernanceToken_flattened.sol\":23297:23310  _checkOwner() */\n      tag_91\n        /* \"contracts/GovernanceToken_flattened.sol\":23297:23308  _checkOwner */\n      tag_92\n        /* \"contracts/GovernanceToken_flattened.sol\":23297:23310  _checkOwner() */\n      jump\t// in\n    tag_91:\n        /* \"contracts/GovernanceToken_flattened.sol\":25250:25267  _mint(to, amount) */\n      tag_94\n        /* \"contracts/GovernanceToken_flattened.sol\":25256:25258  to */\n      dup3\n        /* \"contracts/GovernanceToken_flattened.sol\":25260:25266  amount */\n      dup3\n        /* \"contracts/GovernanceToken_flattened.sol\":25250:25255  _mint */\n      tag_95\n        /* \"contracts/GovernanceToken_flattened.sol\":25250:25267  _mint(to, amount) */\n      jump\t// in\n    tag_94:\n        /* \"contracts/GovernanceToken_flattened.sol\":25182:25273  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GovernanceToken_flattened.sol\":24059:24160  function renounceOwnership() public virtual onlyOwner {... */\n    tag_50:\n        /* \"contracts/GovernanceToken_flattened.sol\":23297:23310  _checkOwner() */\n      tag_98\n        /* \"contracts/GovernanceToken_flattened.sol\":23297:23308  _checkOwner */\n      tag_92\n        /* \"contracts/GovernanceToken_flattened.sol\":23297:23310  _checkOwner() */\n      jump\t// in\n    tag_98:\n        /* \"contracts/GovernanceToken_flattened.sol\":24123:24153  _transferOwnership(address(0)) */\n      tag_100\n        /* \"contracts/GovernanceToken_flattened.sol\":24150:24151  0 */\n      0x00\n        /* \"contracts/GovernanceToken_flattened.sol\":24123:24141  _transferOwnership */\n      tag_101\n        /* \"contracts/GovernanceToken_flattened.sol\":24123:24153  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_100:\n        /* \"contracts/GovernanceToken_flattened.sol\":24059:24160  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/GovernanceToken_flattened.sol\":12877:12970  function symbol() public view virtual returns (string memory) {... */\n    tag_56:\n        /* \"contracts/GovernanceToken_flattened.sol\":12924:12937  string memory */\n      0x60\n        /* \"contracts/GovernanceToken_flattened.sol\":12956:12963  _symbol */\n      0x04\n        /* \"contracts/GovernanceToken_flattened.sol\":12949:12963  return _symbol */\n      dup1\n      sload\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n        /* \"contracts/GovernanceToken_flattened.sol\":14211:14389  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_60:\n        /* \"contracts/GovernanceToken_flattened.sol\":14280:14284  bool */\n      0x00\n        /* \"contracts/GovernanceToken_flattened.sol\":4285:4295  msg.sender */\n      caller\n        /* \"contracts/GovernanceToken_flattened.sol\":14334:14361  _transfer(owner, to, value) */\n      tag_80\n        /* \"contracts/GovernanceToken_flattened.sol\":4285:4295  msg.sender */\n      dup2\n        /* \"contracts/GovernanceToken_flattened.sol\":14351:14353  to */\n      dup6\n        /* \"contracts/GovernanceToken_flattened.sol\":14355:14360  value */\n      dup6\n        /* \"contracts/GovernanceToken_flattened.sol\":14334:14343  _transfer */\n      tag_88\n        /* \"contracts/GovernanceToken_flattened.sol\":14334:14361  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"contracts/GovernanceToken_flattened.sol\":24309:24524  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_69:\n        /* \"contracts/GovernanceToken_flattened.sol\":23297:23310  _checkOwner() */\n      tag_114\n        /* \"contracts/GovernanceToken_flattened.sol\":23297:23308  _checkOwner */\n      tag_92\n        /* \"contracts/GovernanceToken_flattened.sol\":23297:23310  _checkOwner() */\n      jump\t// in\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GovernanceToken_flattened.sol\":24393:24415  newOwner == address(0) */\n      dup2\n      and\n        /* \"contracts/GovernanceToken_flattened.sol\":24389:24480  if (newOwner == address(0)) {... */\n      tag_116\n      jumpi\n        /* \"contracts/GovernanceToken_flattened.sol\":24438:24469  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"contracts/GovernanceToken_flattened.sol\":24466:24467  0 */\n      0x00\n        /* \"contracts/GovernanceToken_flattened.sol\":24438:24469  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"contracts/GovernanceToken_flattened.sol\":24438:24469  OwnableInvalidOwner(address(0)) */\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/GovernanceToken_flattened.sol\":24389:24480  if (newOwner == address(0)) {... */\n    tag_116:\n        /* \"contracts/GovernanceToken_flattened.sol\":24489:24517  _transferOwnership(newOwner) */\n      tag_118\n        /* \"contracts/GovernanceToken_flattened.sol\":24508:24516  newOwner */\n      dup2\n        /* \"contracts/GovernanceToken_flattened.sol\":24489:24507  _transferOwnership */\n      tag_101\n        /* \"contracts/GovernanceToken_flattened.sol\":24489:24517  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_118:\n        /* \"contracts/GovernanceToken_flattened.sol\":24309:24524  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/GovernanceToken_flattened.sol\":19622:19750  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_81:\n        /* \"contracts/GovernanceToken_flattened.sol\":19706:19743  _approve(owner, spender, value, true) */\n      tag_121\n        /* \"contracts/GovernanceToken_flattened.sol\":19715:19720  owner */\n      dup4\n        /* \"contracts/GovernanceToken_flattened.sol\":19722:19729  spender */\n      dup4\n        /* \"contracts/GovernanceToken_flattened.sol\":19731:19736  value */\n      dup4\n        /* \"contracts/GovernanceToken_flattened.sol\":19738:19742  true */\n      0x01\n        /* \"contracts/GovernanceToken_flattened.sol\":19706:19714  _approve */\n      tag_122\n        /* \"contracts/GovernanceToken_flattened.sol\":19706:19743  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_121:\n        /* \"contracts/GovernanceToken_flattened.sol\":19622:19750  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GovernanceToken_flattened.sol\":21311:21787  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GovernanceToken_flattened.sol\":14553:14571  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"contracts/GovernanceToken_flattened.sol\":21410:21434  uint256 currentAllowance */\n      0x00\n        /* \"contracts/GovernanceToken_flattened.sol\":14553:14571  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/GovernanceToken_flattened.sol\":14553:14564  _allowances */\n      0x01\n        /* \"contracts/GovernanceToken_flattened.sol\":14553:14571  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/GovernanceToken_flattened.sol\":14553:14580  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"contracts/GovernanceToken_flattened.sol\":21476:21512  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"contracts/GovernanceToken_flattened.sol\":21472:21781  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"contracts/GovernanceToken_flattened.sol\":21551:21556  value */\n      dup2\n        /* \"contracts/GovernanceToken_flattened.sol\":21532:21548  currentAllowance */\n      dup2\n        /* \"contracts/GovernanceToken_flattened.sol\":21532:21556  currentAllowance < value */\n      lt\n        /* \"contracts/GovernanceToken_flattened.sol\":21528:21658  if (currentAllowance < value) {... */\n      iszero\n      tag_126\n      jumpi\n        /* \"contracts/GovernanceToken_flattened.sol\":21583:21643  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3131:3163   */\n      dup5\n      and\n        /* \"contracts/GovernanceToken_flattened.sol\":21583:21643  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3113:3164   */\n      mstore\n        /* \"#utility.yul\":3180:3198   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3173:3207   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3223:3241   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3216:3250   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3086:3104   */\n      0x64\n      add\n        /* \"contracts/GovernanceToken_flattened.sol\":21583:21643  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_117\n        /* \"#utility.yul\":2911:3256   */\n      jump\n        /* \"contracts/GovernanceToken_flattened.sol\":21528:21658  if (currentAllowance < value) {... */\n    tag_126:\n        /* \"contracts/GovernanceToken_flattened.sol\":21699:21756  _approve(owner, spender, currentAllowance - value, false) */\n      tag_129\n        /* \"contracts/GovernanceToken_flattened.sol\":21708:21713  owner */\n      dup5\n        /* \"contracts/GovernanceToken_flattened.sol\":21715:21722  spender */\n      dup5\n        /* \"contracts/GovernanceToken_flattened.sol\":21743:21748  value */\n      dup5\n        /* \"contracts/GovernanceToken_flattened.sol\":21724:21740  currentAllowance */\n      dup5\n        /* \"contracts/GovernanceToken_flattened.sol\":21724:21748  currentAllowance - value */\n      sub\n        /* \"contracts/GovernanceToken_flattened.sol\":21750:21755  false */\n      0x00\n        /* \"contracts/GovernanceToken_flattened.sol\":21699:21707  _approve */\n      tag_122\n        /* \"contracts/GovernanceToken_flattened.sol\":21699:21756  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/GovernanceToken_flattened.sol\":21400:21787  {... */\n      pop\n        /* \"contracts/GovernanceToken_flattened.sol\":21311:21787  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GovernanceToken_flattened.sol\":16289:16589  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GovernanceToken_flattened.sol\":16372:16390  from == address(0) */\n      dup4\n      and\n        /* \"contracts/GovernanceToken_flattened.sol\":16368:16454  if (from == address(0)) {... */\n      tag_131\n      jumpi\n        /* \"contracts/GovernanceToken_flattened.sol\":16413:16443  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"contracts/GovernanceToken_flattened.sol\":16440:16441  0 */\n      0x00\n        /* \"contracts/GovernanceToken_flattened.sol\":16413:16443  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"contracts/GovernanceToken_flattened.sol\":16413:16443  ERC20InvalidSender(address(0)) */\n      tag_117\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"contracts/GovernanceToken_flattened.sol\":16368:16454  if (from == address(0)) {... */\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GovernanceToken_flattened.sol\":16467:16483  to == address(0) */\n      dup3\n      and\n        /* \"contracts/GovernanceToken_flattened.sol\":16463:16549  if (to == address(0)) {... */\n      tag_133\n      jumpi\n        /* \"contracts/GovernanceToken_flattened.sol\":16506:16538  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"contracts/GovernanceToken_flattened.sol\":16535:16536  0 */\n      0x00\n        /* \"contracts/GovernanceToken_flattened.sol\":16506:16538  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"contracts/GovernanceToken_flattened.sol\":16506:16538  ERC20InvalidReceiver(address(0)) */\n      tag_117\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"contracts/GovernanceToken_flattened.sol\":16463:16549  if (to == address(0)) {... */\n    tag_133:\n        /* \"contracts/GovernanceToken_flattened.sol\":16558:16582  _update(from, to, value) */\n      tag_121\n        /* \"contracts/GovernanceToken_flattened.sol\":16566:16570  from */\n      dup4\n        /* \"contracts/GovernanceToken_flattened.sol\":16572:16574  to */\n      dup4\n        /* \"contracts/GovernanceToken_flattened.sol\":16576:16581  value */\n      dup4\n        /* \"contracts/GovernanceToken_flattened.sol\":16558:16565  _update */\n      tag_136\n        /* \"contracts/GovernanceToken_flattened.sol\":16558:16582  _update(from, to, value) */\n      jump\t// in\n        /* \"contracts/GovernanceToken_flattened.sol\":23562:23724  function _checkOwner() internal view virtual {... */\n    tag_92:\n        /* \"contracts/GovernanceToken_flattened.sol\":23476:23482  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"contracts/GovernanceToken_flattened.sol\":4285:4295  msg.sender */\n      caller\n        /* \"contracts/GovernanceToken_flattened.sol\":23621:23644  owner() != _msgSender() */\n      eq\n        /* \"contracts/GovernanceToken_flattened.sol\":23617:23718  if (owner() != _msgSender()) {... */\n      tag_100\n      jumpi\n        /* \"contracts/GovernanceToken_flattened.sol\":23667:23707  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"contracts/GovernanceToken_flattened.sol\":4285:4295  msg.sender */\n      caller\n        /* \"contracts/GovernanceToken_flattened.sol\":23667:23707  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"contracts/GovernanceToken_flattened.sol\":23667:23707  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_117\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"contracts/GovernanceToken_flattened.sol\":18354:18562  function _mint(address account, uint256 value) internal {... */\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GovernanceToken_flattened.sol\":18424:18445  account == address(0) */\n      dup3\n      and\n        /* \"contracts/GovernanceToken_flattened.sol\":18420:18511  if (account == address(0)) {... */\n      tag_144\n      jumpi\n        /* \"contracts/GovernanceToken_flattened.sol\":18468:18500  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"contracts/GovernanceToken_flattened.sol\":18497:18498  0 */\n      0x00\n        /* \"contracts/GovernanceToken_flattened.sol\":18468:18500  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"contracts/GovernanceToken_flattened.sol\":18468:18500  ERC20InvalidReceiver(address(0)) */\n      tag_117\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"contracts/GovernanceToken_flattened.sol\":18420:18511  if (account == address(0)) {... */\n    tag_144:\n        /* \"contracts/GovernanceToken_flattened.sol\":18520:18555  _update(address(0), account, value) */\n      tag_94\n        /* \"contracts/GovernanceToken_flattened.sol\":18536:18537  0 */\n      0x00\n        /* \"contracts/GovernanceToken_flattened.sol\":18540:18547  account */\n      dup4\n        /* \"contracts/GovernanceToken_flattened.sol\":18549:18554  value */\n      dup4\n        /* \"contracts/GovernanceToken_flattened.sol\":18520:18527  _update */\n      tag_136\n        /* \"contracts/GovernanceToken_flattened.sol\":18520:18555  _update(address(0), account, value) */\n      jump\t// in\n        /* \"contracts/GovernanceToken_flattened.sol\":24678:24865  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_101:\n        /* \"contracts/GovernanceToken_flattened.sol\":24770:24776  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GovernanceToken_flattened.sol\":24786:24803  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/GovernanceToken_flattened.sol\":24818:24858  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/GovernanceToken_flattened.sol\":24770:24776  _owner */\n      swap2\n      and\n      swap2\n        /* \"contracts/GovernanceToken_flattened.sol\":24786:24803  _owner = newOwner */\n      swap1\n        /* \"contracts/GovernanceToken_flattened.sol\":24770:24776  _owner */\n      dup3\n      swap1\n        /* \"contracts/GovernanceToken_flattened.sol\":24818:24858  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/GovernanceToken_flattened.sol\":24751:24767  address oldOwner */\n      0x00\n      swap1\n        /* \"contracts/GovernanceToken_flattened.sol\":24818:24858  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/GovernanceToken_flattened.sol\":24741:24865  {... */\n      pop\n        /* \"contracts/GovernanceToken_flattened.sol\":24678:24865  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/GovernanceToken_flattened.sol\":20597:21029  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GovernanceToken_flattened.sol\":20709:20728  owner == address(0) */\n      dup5\n      and\n        /* \"contracts/GovernanceToken_flattened.sol\":20705:20794  if (owner == address(0)) {... */\n      tag_149\n      jumpi\n        /* \"contracts/GovernanceToken_flattened.sol\":20751:20783  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"contracts/GovernanceToken_flattened.sol\":20780:20781  0 */\n      0x00\n        /* \"contracts/GovernanceToken_flattened.sol\":20751:20783  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"contracts/GovernanceToken_flattened.sol\":20751:20783  ERC20InvalidApprover(address(0)) */\n      tag_117\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"contracts/GovernanceToken_flattened.sol\":20705:20794  if (owner == address(0)) {... */\n    tag_149:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GovernanceToken_flattened.sol\":20807:20828  spender == address(0) */\n      dup4\n      and\n        /* \"contracts/GovernanceToken_flattened.sol\":20803:20893  if (spender == address(0)) {... */\n      tag_151\n      jumpi\n        /* \"contracts/GovernanceToken_flattened.sol\":20851:20882  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"contracts/GovernanceToken_flattened.sol\":20879:20880  0 */\n      0x00\n        /* \"contracts/GovernanceToken_flattened.sol\":20851:20882  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"contracts/GovernanceToken_flattened.sol\":20851:20882  ERC20InvalidSpender(address(0)) */\n      tag_117\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"contracts/GovernanceToken_flattened.sol\":20803:20893  if (spender == address(0)) {... */\n    tag_151:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GovernanceToken_flattened.sol\":20902:20920  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/GovernanceToken_flattened.sol\":20902:20913  _allowances */\n      0x01\n        /* \"contracts/GovernanceToken_flattened.sol\":20902:20920  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/GovernanceToken_flattened.sol\":20902:20929  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"contracts/GovernanceToken_flattened.sol\":20902:20937  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/GovernanceToken_flattened.sol\":20947:21023  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_129\n      jumpi\n        /* \"contracts/GovernanceToken_flattened.sol\":20997:21004  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GovernanceToken_flattened.sol\":20981:21012  Approval(owner, spender, value) */\n      and\n        /* \"contracts/GovernanceToken_flattened.sol\":20990:20995  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GovernanceToken_flattened.sol\":20981:21012  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/GovernanceToken_flattened.sol\":21006:21011  value */\n      dup5\n        /* \"contracts/GovernanceToken_flattened.sol\":20981:21012  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_154\n      swap2\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"contracts/GovernanceToken_flattened.sol\":20981:21012  Approval(owner, spender, value) */\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/GovernanceToken_flattened.sol\":20597:21029  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GovernanceToken_flattened.sol\":16904:18011  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GovernanceToken_flattened.sol\":16993:17011  from == address(0) */\n      dup4\n      and\n        /* \"contracts/GovernanceToken_flattened.sol\":16989:17529  if (from == address(0)) {... */\n      tag_156\n      jumpi\n        /* \"contracts/GovernanceToken_flattened.sol\":17145:17150  value */\n      dup1\n        /* \"contracts/GovernanceToken_flattened.sol\":17129:17141  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/GovernanceToken_flattened.sol\":17129:17150  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/GovernanceToken_flattened.sol\":16989:17529  if (from == address(0)) {... */\n      tag_159\n      swap1\n      pop\n      jump\n    tag_156:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GovernanceToken_flattened.sol\":17203:17218  _balances[from] */\n      dup4\n      and\n        /* \"contracts/GovernanceToken_flattened.sol\":17181:17200  uint256 fromBalance */\n      0x00\n        /* \"contracts/GovernanceToken_flattened.sol\":17203:17218  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/GovernanceToken_flattened.sol\":17236:17255  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"contracts/GovernanceToken_flattened.sol\":17232:17347  if (fromBalance < value) {... */\n      iszero\n      tag_160\n      jumpi\n        /* \"contracts/GovernanceToken_flattened.sol\":17282:17332  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3131:3163   */\n      dup6\n      and\n        /* \"contracts/GovernanceToken_flattened.sol\":17282:17332  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3113:3164   */\n      mstore\n        /* \"#utility.yul\":3180:3198   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3173:3207   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3223:3241   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3216:3250   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3086:3104   */\n      0x64\n      add\n        /* \"contracts/GovernanceToken_flattened.sol\":17282:17332  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_117\n        /* \"#utility.yul\":2911:3256   */\n      jump\n        /* \"contracts/GovernanceToken_flattened.sol\":17232:17347  if (fromBalance < value) {... */\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GovernanceToken_flattened.sol\":17467:17482  _balances[from] */\n      dup5\n      and\n        /* \"contracts/GovernanceToken_flattened.sol\":17467:17476  _balances */\n      0x00\n        /* \"contracts/GovernanceToken_flattened.sol\":17467:17482  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/GovernanceToken_flattened.sol\":17485:17504  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"contracts/GovernanceToken_flattened.sol\":17467:17504  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"contracts/GovernanceToken_flattened.sol\":16989:17529  if (from == address(0)) {... */\n    tag_159:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GovernanceToken_flattened.sol\":17543:17559  to == address(0) */\n      dup3\n      and\n        /* \"contracts/GovernanceToken_flattened.sol\":17539:17964  if (to == address(0)) {... */\n      tag_162\n      jumpi\n        /* \"contracts/GovernanceToken_flattened.sol\":17706:17718  _totalSupply */\n      0x02\n        /* \"contracts/GovernanceToken_flattened.sol\":17706:17727  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"contracts/GovernanceToken_flattened.sol\":17539:17964  if (to == address(0)) {... */\n      jump(tag_163)\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GovernanceToken_flattened.sol\":17917:17930  _balances[to] */\n      dup3\n      and\n        /* \"contracts/GovernanceToken_flattened.sol\":17917:17926  _balances */\n      0x00\n        /* \"contracts/GovernanceToken_flattened.sol\":17917:17930  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/GovernanceToken_flattened.sol\":17917:17939  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"contracts/GovernanceToken_flattened.sol\":17539:17964  if (to == address(0)) {... */\n    tag_163:\n        /* \"contracts/GovernanceToken_flattened.sol\":17994:17996  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GovernanceToken_flattened.sol\":17979:18004  Transfer(from, to, value) */\n      and\n        /* \"contracts/GovernanceToken_flattened.sol\":17988:17992  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GovernanceToken_flattened.sol\":17979:18004  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/GovernanceToken_flattened.sol\":17998:18003  value */\n      dup4\n        /* \"contracts/GovernanceToken_flattened.sol\":17979:18004  Transfer(from, to, value) */\n      mload(0x40)\n      tag_164\n      swap2\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"contracts/GovernanceToken_flattened.sol\":17979:18004  Transfer(from, to, value) */\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/GovernanceToken_flattened.sol\":16904:18011  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:432   */\n    tag_21:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_165:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_169\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      dup1\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_169:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:915   */\n    tag_24:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      dup1\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      dup1\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_171:\n        /* \"#utility.yul\":783:812   */\n      tag_172\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_165\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":881:883   */\n      0x20\n        /* \"#utility.yul\":866:884   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":853:885   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:915   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1668   */\n    tag_34:\n        /* \"#utility.yul\":1371:1377   */\n      0x00\n        /* \"#utility.yul\":1379:1385   */\n      dup1\n        /* \"#utility.yul\":1387:1393   */\n      0x00\n        /* \"#utility.yul\":1440:1442   */\n      0x60\n        /* \"#utility.yul\":1428:1437   */\n      dup5\n        /* \"#utility.yul\":1419:1426   */\n      dup7\n        /* \"#utility.yul\":1415:1438   */\n      sub\n        /* \"#utility.yul\":1411:1443   */\n      slt\n        /* \"#utility.yul\":1408:1460   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":1456:1457   */\n      0x00\n        /* \"#utility.yul\":1453:1454   */\n      dup1\n        /* \"#utility.yul\":1446:1458   */\n      revert\n        /* \"#utility.yul\":1408:1460   */\n    tag_176:\n        /* \"#utility.yul\":1479:1508   */\n      tag_177\n        /* \"#utility.yul\":1498:1507   */\n      dup5\n        /* \"#utility.yul\":1479:1508   */\n      tag_165\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":1469:1508   */\n      swap3\n      pop\n        /* \"#utility.yul\":1527:1565   */\n      tag_178\n        /* \"#utility.yul\":1561:1563   */\n      0x20\n        /* \"#utility.yul\":1550:1559   */\n      dup6\n        /* \"#utility.yul\":1546:1564   */\n      add\n        /* \"#utility.yul\":1527:1565   */\n      tag_165\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":1294:1668   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1517:1565   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1634:1636   */\n      0x40\n        /* \"#utility.yul\":1619:1637   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1606:1638   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1294:1668   */\n      jump\t// out\n        /* \"#utility.yul\":1862:2048   */\n    tag_46:\n        /* \"#utility.yul\":1921:1927   */\n      0x00\n        /* \"#utility.yul\":1974:1976   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup3\n        /* \"#utility.yul\":1953:1960   */\n      dup5\n        /* \"#utility.yul\":1949:1972   */\n      sub\n        /* \"#utility.yul\":1945:1977   */\n      slt\n        /* \"#utility.yul\":1942:1994   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":1990:1991   */\n      0x00\n        /* \"#utility.yul\":1987:1988   */\n      dup1\n        /* \"#utility.yul\":1980:1992   */\n      revert\n        /* \"#utility.yul\":1942:1994   */\n    tag_181:\n        /* \"#utility.yul\":2013:2042   */\n      tag_182\n        /* \"#utility.yul\":2032:2041   */\n      dup3\n        /* \"#utility.yul\":2013:2042   */\n      tag_165\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2003:2042   */\n      swap4\n        /* \"#utility.yul\":1862:2048   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2261:2521   */\n    tag_64:\n        /* \"#utility.yul\":2329:2335   */\n      0x00\n        /* \"#utility.yul\":2337:2343   */\n      dup1\n        /* \"#utility.yul\":2390:2392   */\n      0x40\n        /* \"#utility.yul\":2378:2387   */\n      dup4\n        /* \"#utility.yul\":2369:2376   */\n      dup6\n        /* \"#utility.yul\":2365:2388   */\n      sub\n        /* \"#utility.yul\":2361:2393   */\n      slt\n        /* \"#utility.yul\":2358:2410   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":2406:2407   */\n      0x00\n        /* \"#utility.yul\":2403:2404   */\n      dup1\n        /* \"#utility.yul\":2396:2408   */\n      revert\n        /* \"#utility.yul\":2358:2410   */\n    tag_185:\n        /* \"#utility.yul\":2429:2458   */\n      tag_186\n        /* \"#utility.yul\":2448:2457   */\n      dup4\n        /* \"#utility.yul\":2429:2458   */\n      tag_165\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2419:2458   */\n      swap2\n      pop\n        /* \"#utility.yul\":2477:2515   */\n      tag_187\n        /* \"#utility.yul\":2511:2513   */\n      0x20\n        /* \"#utility.yul\":2500:2509   */\n      dup5\n        /* \"#utility.yul\":2496:2514   */\n      add\n        /* \"#utility.yul\":2477:2515   */\n      tag_165\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2467:2515   */\n      swap1\n      pop\n        /* \"#utility.yul\":2261:2521   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2526:2906   */\n    tag_72:\n        /* \"#utility.yul\":2605:2606   */\n      0x01\n        /* \"#utility.yul\":2601:2613   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2648:2660   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2669:2730   */\n      tag_189\n      jumpi\n        /* \"#utility.yul\":2723:2727   */\n      0x7f\n        /* \"#utility.yul\":2715:2721   */\n      dup3\n        /* \"#utility.yul\":2711:2728   */\n      and\n        /* \"#utility.yul\":2701:2728   */\n      swap2\n      pop\n        /* \"#utility.yul\":2669:2730   */\n    tag_189:\n        /* \"#utility.yul\":2776:2778   */\n      0x20\n        /* \"#utility.yul\":2768:2774   */\n      dup3\n        /* \"#utility.yul\":2765:2779   */\n      lt\n        /* \"#utility.yul\":2745:2763   */\n      dup2\n        /* \"#utility.yul\":2742:2780   */\n      sub\n        /* \"#utility.yul\":2739:2900   */\n      tag_190\n      jumpi\n        /* \"#utility.yul\":2822:2832   */\n      0x4e487b71\n        /* \"#utility.yul\":2817:2820   */\n      0xe0\n        /* \"#utility.yul\":2813:2833   */\n      shl\n        /* \"#utility.yul\":2810:2811   */\n      0x00\n        /* \"#utility.yul\":2803:2834   */\n      mstore\n        /* \"#utility.yul\":2857:2861   */\n      0x22\n        /* \"#utility.yul\":2854:2855   */\n      0x04\n        /* \"#utility.yul\":2847:2862   */\n      mstore\n        /* \"#utility.yul\":2885:2889   */\n      0x24\n        /* \"#utility.yul\":2882:2883   */\n      0x00\n        /* \"#utility.yul\":2875:2890   */\n      revert\n        /* \"#utility.yul\":2739:2900   */\n    tag_190:\n      pop\n        /* \"#utility.yul\":2526:2906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3261:3483   */\n    tag_158:\n        /* \"#utility.yul\":3326:3335   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3347:3357   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3344:3477   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":3399:3409   */\n      0x4e487b71\n        /* \"#utility.yul\":3394:3397   */\n      0xe0\n        /* \"#utility.yul\":3390:3410   */\n      shl\n        /* \"#utility.yul\":3387:3388   */\n      0x00\n        /* \"#utility.yul\":3380:3411   */\n      mstore\n        /* \"#utility.yul\":3434:3438   */\n      0x11\n        /* \"#utility.yul\":3431:3432   */\n      0x04\n        /* \"#utility.yul\":3424:3439   */\n      mstore\n        /* \"#utility.yul\":3462:3466   */\n      0x24\n        /* \"#utility.yul\":3459:3460   */\n      0x00\n        /* \"#utility.yul\":3452:3467   */\n      revert\n\n    auxdata: 0xa2646970667358221220af129067bdda10f19839e79e1ca2f948b2112af265c0d4cdd657e839f20e76c364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_819": {
									"entryPoint": null,
									"id": 819,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_943": {
									"entryPoint": null,
									"id": 943,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_611": {
									"entryPoint": 324,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_915": {
									"entryPoint": 243,
									"id": 915,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 380,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 795,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 719,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3914:1",
										"nodeType": "YulBlock",
										"src": "0:3914:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:1",
													"nodeType": "YulBlock",
													"src": "95:209:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:1",
																"nodeType": "YulBlock",
																"src": "141:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:1",
																					"nodeType": "YulLiteral",
																					"src": "150:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:1",
																					"nodeType": "YulLiteral",
																					"src": "153:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:1"
																			},
																			"nativeSrc": "143:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:1"
																		},
																		"nativeSrc": "143:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:1"
																		},
																		"nativeSrc": "112:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:1",
																		"nodeType": "YulLiteral",
																		"src": "137:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:1"
																},
																"nativeSrc": "108:32:1",
																"nodeType": "YulFunctionCall",
																"src": "108:32:1"
															},
															"nativeSrc": "105:52:1",
															"nodeType": "YulIf",
															"src": "105:52:1"
														},
														{
															"nativeSrc": "166:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:1"
																},
																"nativeSrc": "179:16:1",
																"nodeType": "YulFunctionCall",
																"src": "179:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:1",
																	"nodeType": "YulTypedName",
																	"src": "170:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:1",
																"nodeType": "YulBlock",
																"src": "258:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:1",
																					"nodeType": "YulLiteral",
																					"src": "267:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:1",
																					"nodeType": "YulLiteral",
																					"src": "270:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:1"
																			},
																			"nativeSrc": "260:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:1"
																		},
																		"nativeSrc": "260:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:1",
																										"nodeType": "YulLiteral",
																										"src": "243:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:1",
																										"nodeType": "YulLiteral",
																										"src": "248:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:1"
																								},
																								"nativeSrc": "239:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:1",
																								"nodeType": "YulLiteral",
																								"src": "252:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:1"
																						},
																						"nativeSrc": "235:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:1"
																				},
																				"nativeSrc": "224:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:1"
																		},
																		"nativeSrc": "214:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:1"
																},
																"nativeSrc": "207:50:1",
																"nodeType": "YulFunctionCall",
																"src": "207:50:1"
															},
															"nativeSrc": "204:70:1",
															"nodeType": "YulIf",
															"src": "204:70:1"
														},
														{
															"nativeSrc": "283:15:1",
															"nodeType": "YulAssignment",
															"src": "283:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:1",
																"nodeType": "YulIdentifier",
																"src": "293:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:1",
														"nodeType": "YulTypedName",
														"src": "61:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:1",
														"nodeType": "YulTypedName",
														"src": "72:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:1",
														"nodeType": "YulTypedName",
														"src": "84:6:1",
														"type": ""
													}
												],
												"src": "14:290:1"
											},
											{
												"body": {
													"nativeSrc": "341:95:1",
													"nodeType": "YulBlock",
													"src": "341:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "358:1:1",
																		"nodeType": "YulLiteral",
																		"src": "358:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "365:3:1",
																				"nodeType": "YulLiteral",
																				"src": "365:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "370:10:1",
																				"nodeType": "YulLiteral",
																				"src": "370:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "361:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "361:3:1"
																		},
																		"nativeSrc": "361:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "361:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "351:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "351:6:1"
																},
																"nativeSrc": "351:31:1",
																"nodeType": "YulFunctionCall",
																"src": "351:31:1"
															},
															"nativeSrc": "351:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "351:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "398:1:1",
																		"nodeType": "YulLiteral",
																		"src": "398:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "401:4:1",
																		"nodeType": "YulLiteral",
																		"src": "401:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "391:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "391:6:1"
																},
																"nativeSrc": "391:15:1",
																"nodeType": "YulFunctionCall",
																"src": "391:15:1"
															},
															"nativeSrc": "391:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "391:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "422:1:1",
																		"nodeType": "YulLiteral",
																		"src": "422:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "425:4:1",
																		"nodeType": "YulLiteral",
																		"src": "425:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "415:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "415:6:1"
																},
																"nativeSrc": "415:15:1",
																"nodeType": "YulFunctionCall",
																"src": "415:15:1"
															},
															"nativeSrc": "415:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "415:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "309:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "309:127:1"
											},
											{
												"body": {
													"nativeSrc": "496:325:1",
													"nodeType": "YulBlock",
													"src": "496:325:1",
													"statements": [
														{
															"nativeSrc": "506:22:1",
															"nodeType": "YulAssignment",
															"src": "506:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "520:1:1",
																		"nodeType": "YulLiteral",
																		"src": "520:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "523:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "523:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "516:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "516:3:1"
																},
																"nativeSrc": "516:12:1",
																"nodeType": "YulFunctionCall",
																"src": "516:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "506:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "506:6:1"
																}
															]
														},
														{
															"nativeSrc": "537:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "537:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "567:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "567:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "573:1:1",
																		"nodeType": "YulLiteral",
																		"src": "573:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "563:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "563:3:1"
																},
																"nativeSrc": "563:12:1",
																"nodeType": "YulFunctionCall",
																"src": "563:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "541:18:1",
																	"nodeType": "YulTypedName",
																	"src": "541:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "614:31:1",
																"nodeType": "YulBlock",
																"src": "614:31:1",
																"statements": [
																	{
																		"nativeSrc": "616:27:1",
																		"nodeType": "YulAssignment",
																		"src": "616:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "630:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "630:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "638:4:1",
																					"nodeType": "YulLiteral",
																					"src": "638:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "626:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "626:3:1"
																			},
																			"nativeSrc": "626:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "626:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "616:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "616:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "594:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "594:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "587:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "587:6:1"
																},
																"nativeSrc": "587:26:1",
																"nodeType": "YulFunctionCall",
																"src": "587:26:1"
															},
															"nativeSrc": "584:61:1",
															"nodeType": "YulIf",
															"src": "584:61:1"
														},
														{
															"body": {
																"nativeSrc": "704:111:1",
																"nodeType": "YulBlock",
																"src": "704:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:1",
																					"nodeType": "YulLiteral",
																					"src": "725:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "732:3:1",
																							"nodeType": "YulLiteral",
																							"src": "732:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "737:10:1",
																							"nodeType": "YulLiteral",
																							"src": "737:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "728:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "728:3:1"
																					},
																					"nativeSrc": "728:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "728:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "718:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "718:6:1"
																			},
																			"nativeSrc": "718:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "718:31:1"
																		},
																		"nativeSrc": "718:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "718:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "769:1:1",
																					"nodeType": "YulLiteral",
																					"src": "769:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "772:4:1",
																					"nodeType": "YulLiteral",
																					"src": "772:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "762:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "762:6:1"
																			},
																			"nativeSrc": "762:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "762:15:1"
																		},
																		"nativeSrc": "762:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "762:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "797:1:1",
																					"nodeType": "YulLiteral",
																					"src": "797:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "800:4:1",
																					"nodeType": "YulLiteral",
																					"src": "800:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "790:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "790:6:1"
																			},
																			"nativeSrc": "790:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "790:15:1"
																		},
																		"nativeSrc": "790:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "790:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "660:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "660:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "683:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "683:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "691:2:1",
																				"nodeType": "YulLiteral",
																				"src": "691:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "680:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "680:2:1"
																		},
																		"nativeSrc": "680:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "680:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "657:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "657:2:1"
																},
																"nativeSrc": "657:38:1",
																"nodeType": "YulFunctionCall",
																"src": "657:38:1"
															},
															"nativeSrc": "654:161:1",
															"nodeType": "YulIf",
															"src": "654:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "441:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "476:4:1",
														"nodeType": "YulTypedName",
														"src": "476:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "485:6:1",
														"nodeType": "YulTypedName",
														"src": "485:6:1",
														"type": ""
													}
												],
												"src": "441:380:1"
											},
											{
												"body": {
													"nativeSrc": "882:65:1",
													"nodeType": "YulBlock",
													"src": "882:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "899:1:1",
																		"nodeType": "YulLiteral",
																		"src": "899:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "902:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "902:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "892:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "892:6:1"
																},
																"nativeSrc": "892:14:1",
																"nodeType": "YulFunctionCall",
																"src": "892:14:1"
															},
															"nativeSrc": "892:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "892:14:1"
														},
														{
															"nativeSrc": "915:26:1",
															"nodeType": "YulAssignment",
															"src": "915:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "933:1:1",
																		"nodeType": "YulLiteral",
																		"src": "933:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "936:4:1",
																		"nodeType": "YulLiteral",
																		"src": "936:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "923:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "923:9:1"
																},
																"nativeSrc": "923:18:1",
																"nodeType": "YulFunctionCall",
																"src": "923:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "915:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "915:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "826:121:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "865:3:1",
														"nodeType": "YulTypedName",
														"src": "865:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "873:4:1",
														"nodeType": "YulTypedName",
														"src": "873:4:1",
														"type": ""
													}
												],
												"src": "826:121:1"
											},
											{
												"body": {
													"nativeSrc": "1033:437:1",
													"nodeType": "YulBlock",
													"src": "1033:437:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1066:398:1",
																"nodeType": "YulBlock",
																"src": "1066:398:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1087:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1087:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1090:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1090:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1080:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1080:6:1"
																			},
																			"nativeSrc": "1080:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1080:16:1"
																		},
																		"nativeSrc": "1080:16:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1080:16:1"
																	},
																	{
																		"nativeSrc": "1109:30:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1109:30:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1131:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1131:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1134:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1134:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1121:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1121:9:1"
																			},
																			"nativeSrc": "1121:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1121:18:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1113:4:1",
																				"nodeType": "YulTypedName",
																				"src": "1113:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1152:57:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1152:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1175:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "1175:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1185:1:1",
																							"nodeType": "YulLiteral",
																							"src": "1185:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1192:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "1192:10:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1204:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1204:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1188:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1188:3:1"
																							},
																							"nativeSrc": "1188:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1188:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1181:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1181:3:1"
																					},
																					"nativeSrc": "1181:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1181:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1171:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1171:3:1"
																			},
																			"nativeSrc": "1171:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1171:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1156:11:1",
																				"nodeType": "YulTypedName",
																				"src": "1156:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1246:23:1",
																			"nodeType": "YulBlock",
																			"src": "1246:23:1",
																			"statements": [
																				{
																					"nativeSrc": "1248:19:1",
																					"nodeType": "YulAssignment",
																					"src": "1248:19:1",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1263:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "1263:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1248:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "1248:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1228:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "1228:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1240:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1240:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1225:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1225:2:1"
																			},
																			"nativeSrc": "1225:20:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1225:20:1"
																		},
																		"nativeSrc": "1222:47:1",
																		"nodeType": "YulIf",
																		"src": "1222:47:1"
																	},
																	{
																		"nativeSrc": "1282:41:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1282:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1296:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "1296:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1306:1:1",
																							"nodeType": "YulLiteral",
																							"src": "1306:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1313:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1313:3:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1318:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1318:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1309:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1309:3:1"
																							},
																							"nativeSrc": "1309:12:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1309:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1302:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1302:3:1"
																					},
																					"nativeSrc": "1302:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1302:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1292:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1292:3:1"
																			},
																			"nativeSrc": "1292:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1292:31:1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1286:2:1",
																				"nodeType": "YulTypedName",
																				"src": "1286:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1336:24:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1336:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1349:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "1349:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1340:5:1",
																				"nodeType": "YulTypedName",
																				"src": "1340:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1434:20:1",
																			"nodeType": "YulBlock",
																			"src": "1434:20:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1443:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1443:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1450:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1450:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1436:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "1436:6:1"
																						},
																						"nativeSrc": "1436:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1436:16:1"
																					},
																					"nativeSrc": "1436:16:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "1436:16:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1384:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1384:5:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1391:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "1391:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1381:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1381:2:1"
																			},
																			"nativeSrc": "1381:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1381:13:1"
																		},
																		"nativeSrc": "1373:81:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1395:26:1",
																			"nodeType": "YulBlock",
																			"src": "1395:26:1",
																			"statements": [
																				{
																					"nativeSrc": "1397:22:1",
																					"nodeType": "YulAssignment",
																					"src": "1397:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1410:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1410:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1417:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1417:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1406:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1406:3:1"
																						},
																						"nativeSrc": "1406:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1406:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1397:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "1397:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1377:3:1",
																			"nodeType": "YulBlock",
																			"src": "1377:3:1",
																			"statements": []
																		},
																		"src": "1373:81:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1049:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1049:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1054:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1054:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1046:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1046:2:1"
																},
																"nativeSrc": "1046:11:1",
																"nodeType": "YulFunctionCall",
																"src": "1046:11:1"
															},
															"nativeSrc": "1043:421:1",
															"nodeType": "YulIf",
															"src": "1043:421:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "952:518:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1005:5:1",
														"nodeType": "YulTypedName",
														"src": "1005:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1012:3:1",
														"nodeType": "YulTypedName",
														"src": "1012:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1017:10:1",
														"nodeType": "YulTypedName",
														"src": "1017:10:1",
														"type": ""
													}
												],
												"src": "952:518:1"
											},
											{
												"body": {
													"nativeSrc": "1560:81:1",
													"nodeType": "YulBlock",
													"src": "1560:81:1",
													"statements": [
														{
															"nativeSrc": "1570:65:1",
															"nodeType": "YulAssignment",
															"src": "1570:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1585:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1585:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1603:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1603:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1606:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "1606:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1599:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1599:3:1"
																								},
																								"nativeSrc": "1599:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1599:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1616:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1616:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1612:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1612:3:1"
																								},
																								"nativeSrc": "1612:6:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1612:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1595:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1595:3:1"
																						},
																						"nativeSrc": "1595:24:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1595:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1591:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1591:3:1"
																				},
																				"nativeSrc": "1591:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1591:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1581:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1581:3:1"
																		},
																		"nativeSrc": "1581:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1581:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1627:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1627:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1630:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1630:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1623:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1623:3:1"
																		},
																		"nativeSrc": "1623:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1623:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1578:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1578:2:1"
																},
																"nativeSrc": "1578:57:1",
																"nodeType": "YulFunctionCall",
																"src": "1578:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1570:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1570:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1475:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1537:4:1",
														"nodeType": "YulTypedName",
														"src": "1537:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1543:3:1",
														"nodeType": "YulTypedName",
														"src": "1543:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1551:4:1",
														"nodeType": "YulTypedName",
														"src": "1551:4:1",
														"type": ""
													}
												],
												"src": "1475:166:1"
											},
											{
												"body": {
													"nativeSrc": "1742:1203:1",
													"nodeType": "YulBlock",
													"src": "1742:1203:1",
													"statements": [
														{
															"nativeSrc": "1752:24:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1752:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1772:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1772:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1766:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1766:5:1"
																},
																"nativeSrc": "1766:10:1",
																"nodeType": "YulFunctionCall",
																"src": "1766:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1756:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1756:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1819:22:1",
																"nodeType": "YulBlock",
																"src": "1819:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1821:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1821:16:1"
																			},
																			"nativeSrc": "1821:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1821:18:1"
																		},
																		"nativeSrc": "1821:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1821:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1791:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1791:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1807:2:1",
																						"nodeType": "YulLiteral",
																						"src": "1807:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1811:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1811:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1803:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1803:3:1"
																				},
																				"nativeSrc": "1803:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1803:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1815:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1815:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1799:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1799:3:1"
																		},
																		"nativeSrc": "1799:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1799:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1788:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1788:2:1"
																},
																"nativeSrc": "1788:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1788:30:1"
															},
															"nativeSrc": "1785:56:1",
															"nodeType": "YulIf",
															"src": "1785:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1894:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1894:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1932:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "1932:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1926:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1926:5:1"
																				},
																				"nativeSrc": "1926:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1926:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1900:25:1",
																			"nodeType": "YulIdentifier",
																			"src": "1900:25:1"
																		},
																		"nativeSrc": "1900:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1900:38:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1940:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1940:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1850:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1850:43:1"
																},
																"nativeSrc": "1850:97:1",
																"nodeType": "YulFunctionCall",
																"src": "1850:97:1"
															},
															"nativeSrc": "1850:97:1",
															"nodeType": "YulExpressionStatement",
															"src": "1850:97:1"
														},
														{
															"nativeSrc": "1956:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1956:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1973:1:1",
																"nodeType": "YulLiteral",
																"src": "1973:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1960:9:1",
																	"nodeType": "YulTypedName",
																	"src": "1960:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1983:17:1",
															"nodeType": "YulAssignment",
															"src": "1983:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1996:4:1",
																"nodeType": "YulLiteral",
																"src": "1996:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1983:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1983:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2046:642:1",
																		"nodeType": "YulBlock",
																		"src": "2046:642:1",
																		"statements": [
																			{
																				"nativeSrc": "2060:35:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2060:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2079:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2079:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2091:2:1",
																									"nodeType": "YulLiteral",
																									"src": "2091:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2087:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2087:3:1"
																							},
																							"nativeSrc": "2087:7:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2087:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2075:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2075:3:1"
																					},
																					"nativeSrc": "2075:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2075:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2064:7:1",
																						"nodeType": "YulTypedName",
																						"src": "2064:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2108:49:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2108:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2152:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2152:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2122:29:1",
																						"nodeType": "YulIdentifier",
																						"src": "2122:29:1"
																					},
																					"nativeSrc": "2122:35:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2122:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2112:6:1",
																						"nodeType": "YulTypedName",
																						"src": "2112:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2170:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2170:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2179:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2179:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2174:1:1",
																						"nodeType": "YulTypedName",
																						"src": "2174:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2250:165:1",
																					"nodeType": "YulBlock",
																					"src": "2250:165:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2275:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2275:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2293:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "2293:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2298:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "2298:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2289:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2289:3:1"
																												},
																												"nativeSrc": "2289:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2289:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2283:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "2283:5:1"
																										},
																										"nativeSrc": "2283:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2283:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2268:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2268:6:1"
																								},
																								"nativeSrc": "2268:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2268:42:1"
																							},
																							"nativeSrc": "2268:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2268:42:1"
																						},
																						{
																							"nativeSrc": "2327:24:1",
																							"nodeType": "YulAssignment",
																							"src": "2327:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2341:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2341:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2349:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2349:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2337:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2337:3:1"
																								},
																								"nativeSrc": "2337:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2337:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2327:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2327:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2368:33:1",
																							"nodeType": "YulAssignment",
																							"src": "2368:33:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2385:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "2385:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2396:4:1",
																										"nodeType": "YulLiteral",
																										"src": "2396:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2381:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2381:3:1"
																								},
																								"nativeSrc": "2381:20:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2381:20:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2368:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "2368:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2204:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "2204:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2207:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "2207:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2201:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "2201:2:1"
																					},
																					"nativeSrc": "2201:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2201:14:1"
																				},
																				"nativeSrc": "2193:222:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2216:21:1",
																					"nodeType": "YulBlock",
																					"src": "2216:21:1",
																					"statements": [
																						{
																							"nativeSrc": "2218:17:1",
																							"nodeType": "YulAssignment",
																							"src": "2218:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2227:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "2227:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2230:4:1",
																										"nodeType": "YulLiteral",
																										"src": "2230:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2223:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2223:3:1"
																								},
																								"nativeSrc": "2223:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2223:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2218:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "2218:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2197:3:1",
																					"nodeType": "YulBlock",
																					"src": "2197:3:1",
																					"statements": []
																				},
																				"src": "2193:222:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "2463:166:1",
																					"nodeType": "YulBlock",
																					"src": "2463:166:1",
																					"statements": [
																						{
																							"nativeSrc": "2481:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2481:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2508:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2508:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2513:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2513:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2504:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2504:3:1"
																										},
																										"nativeSrc": "2504:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2504:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2498:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2498:5:1"
																								},
																								"nativeSrc": "2498:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2498:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2485:9:1",
																									"nodeType": "YulTypedName",
																									"src": "2485:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2548:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2548:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2560:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2560:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2587:1:1",
																																				"nodeType": "YulLiteral",
																																				"src": "2587:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2590:6:1",
																																				"nodeType": "YulIdentifier",
																																				"src": "2590:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2583:3:1",
																																			"nodeType": "YulIdentifier",
																																			"src": "2583:3:1"
																																		},
																																		"nativeSrc": "2583:14:1",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2583:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2599:3:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2599:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2579:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2579:3:1"
																																},
																																"nativeSrc": "2579:24:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2579:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2609:1:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2609:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2605:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2605:3:1"
																																},
																																"nativeSrc": "2605:6:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2605:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2575:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "2575:3:1"
																														},
																														"nativeSrc": "2575:37:1",
																														"nodeType": "YulFunctionCall",
																														"src": "2575:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2571:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2571:3:1"
																												},
																												"nativeSrc": "2571:42:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2571:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2556:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2556:3:1"
																										},
																										"nativeSrc": "2556:58:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2556:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2541:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2541:6:1"
																								},
																								"nativeSrc": "2541:74:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2541:74:1"
																							},
																							"nativeSrc": "2541:74:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2541:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2434:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "2434:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2443:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2443:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2431:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "2431:2:1"
																					},
																					"nativeSrc": "2431:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2431:19:1"
																				},
																				"nativeSrc": "2428:201:1",
																				"nodeType": "YulIf",
																				"src": "2428:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2649:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2649:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2663:1:1",
																											"nodeType": "YulLiteral",
																											"src": "2663:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2666:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "2666:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2659:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2659:3:1"
																									},
																									"nativeSrc": "2659:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "2659:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2675:1:1",
																									"nodeType": "YulLiteral",
																									"src": "2675:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2655:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2655:3:1"
																							},
																							"nativeSrc": "2655:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2655:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2642:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2642:6:1"
																					},
																					"nativeSrc": "2642:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2642:36:1"
																				},
																				"nativeSrc": "2642:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2642:36:1"
																			}
																		]
																	},
																	"nativeSrc": "2039:649:1",
																	"nodeType": "YulCase",
																	"src": "2039:649:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2044:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2044:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2705:234:1",
																		"nodeType": "YulBlock",
																		"src": "2705:234:1",
																		"statements": [
																			{
																				"nativeSrc": "2719:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2719:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2732:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2732:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2723:5:1",
																						"nodeType": "YulTypedName",
																						"src": "2723:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2768:67:1",
																					"nodeType": "YulBlock",
																					"src": "2768:67:1",
																					"statements": [
																						{
																							"nativeSrc": "2786:35:1",
																							"nodeType": "YulAssignment",
																							"src": "2786:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2805:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2805:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2810:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2810:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2801:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2801:3:1"
																										},
																										"nativeSrc": "2801:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2801:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2795:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2795:5:1"
																								},
																								"nativeSrc": "2795:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2795:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2786:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2786:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2749:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2749:6:1"
																				},
																				"nativeSrc": "2746:89:1",
																				"nodeType": "YulIf",
																				"src": "2746:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2855:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2855:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2914:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2914:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2921:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2921:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2861:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "2861:52:1"
																							},
																							"nativeSrc": "2861:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2861:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2848:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2848:6:1"
																					},
																					"nativeSrc": "2848:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2848:81:1"
																				},
																				"nativeSrc": "2848:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2848:81:1"
																			}
																		]
																	},
																	"nativeSrc": "2697:242:1",
																	"nodeType": "YulCase",
																	"src": "2697:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2019:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2019:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2027:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2027:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2016:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2016:2:1"
																},
																"nativeSrc": "2016:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2016:14:1"
															},
															"nativeSrc": "2009:930:1",
															"nodeType": "YulSwitch",
															"src": "2009:930:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1646:1299:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1727:4:1",
														"nodeType": "YulTypedName",
														"src": "1727:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1733:3:1",
														"nodeType": "YulTypedName",
														"src": "1733:3:1",
														"type": ""
													}
												],
												"src": "1646:1299:1"
											},
											{
												"body": {
													"nativeSrc": "3051:102:1",
													"nodeType": "YulBlock",
													"src": "3051:102:1",
													"statements": [
														{
															"nativeSrc": "3061:26:1",
															"nodeType": "YulAssignment",
															"src": "3061:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3073:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3073:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3084:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3084:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3069:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3069:3:1"
																},
																"nativeSrc": "3069:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3069:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3061:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3061:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3103:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3103:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3118:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3118:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3134:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3134:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3139:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3139:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3130:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3130:3:1"
																						},
																						"nativeSrc": "3130:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3130:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3143:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3143:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3126:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3126:3:1"
																				},
																				"nativeSrc": "3126:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3126:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3114:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3114:3:1"
																		},
																		"nativeSrc": "3114:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3114:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3096:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3096:6:1"
																},
																"nativeSrc": "3096:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3096:51:1"
															},
															"nativeSrc": "3096:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3096:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2950:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3020:9:1",
														"nodeType": "YulTypedName",
														"src": "3020:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3031:6:1",
														"nodeType": "YulTypedName",
														"src": "3031:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3042:4:1",
														"nodeType": "YulTypedName",
														"src": "3042:4:1",
														"type": ""
													}
												],
												"src": "2950:203:1"
											},
											{
												"body": {
													"nativeSrc": "3206:174:1",
													"nodeType": "YulBlock",
													"src": "3206:174:1",
													"statements": [
														{
															"nativeSrc": "3216:16:1",
															"nodeType": "YulAssignment",
															"src": "3216:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3227:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3227:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3230:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3230:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3223:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3223:3:1"
																},
																"nativeSrc": "3223:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3223:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3216:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3216:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3263:111:1",
																"nodeType": "YulBlock",
																"src": "3263:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3284:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3284:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3291:3:1",
																							"nodeType": "YulLiteral",
																							"src": "3291:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3296:10:1",
																							"nodeType": "YulLiteral",
																							"src": "3296:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3287:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3287:3:1"
																					},
																					"nativeSrc": "3287:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3287:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3277:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3277:6:1"
																			},
																			"nativeSrc": "3277:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3277:31:1"
																		},
																		"nativeSrc": "3277:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3277:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3328:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3328:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3331:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3331:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3321:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3321:6:1"
																			},
																			"nativeSrc": "3321:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3321:15:1"
																		},
																		"nativeSrc": "3321:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3321:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3356:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3356:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3359:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3359:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3349:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3349:6:1"
																			},
																			"nativeSrc": "3349:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3349:15:1"
																		},
																		"nativeSrc": "3349:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3349:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3247:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3247:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3250:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3250:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3244:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3244:2:1"
																},
																"nativeSrc": "3244:10:1",
																"nodeType": "YulFunctionCall",
																"src": "3244:10:1"
															},
															"nativeSrc": "3241:133:1",
															"nodeType": "YulIf",
															"src": "3241:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3158:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3189:1:1",
														"nodeType": "YulTypedName",
														"src": "3189:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3192:1:1",
														"nodeType": "YulTypedName",
														"src": "3192:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3198:3:1",
														"nodeType": "YulTypedName",
														"src": "3198:3:1",
														"type": ""
													}
												],
												"src": "3158:222:1"
											},
											{
												"body": {
													"nativeSrc": "3542:188:1",
													"nodeType": "YulBlock",
													"src": "3542:188:1",
													"statements": [
														{
															"nativeSrc": "3552:26:1",
															"nodeType": "YulAssignment",
															"src": "3552:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3564:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3564:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3575:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3575:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3560:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3560:3:1"
																},
																"nativeSrc": "3560:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3560:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3552:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3552:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3594:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3594:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3609:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3609:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3625:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3625:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3630:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3630:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3621:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3621:3:1"
																						},
																						"nativeSrc": "3621:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3621:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3634:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3634:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3617:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3617:3:1"
																				},
																				"nativeSrc": "3617:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3617:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3605:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3605:3:1"
																		},
																		"nativeSrc": "3605:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3605:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3587:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3587:6:1"
																},
																"nativeSrc": "3587:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3587:51:1"
															},
															"nativeSrc": "3587:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3587:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3658:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3658:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3669:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3669:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3654:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3654:3:1"
																		},
																		"nativeSrc": "3654:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3654:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3674:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3674:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3647:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3647:6:1"
																},
																"nativeSrc": "3647:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3647:34:1"
															},
															"nativeSrc": "3647:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3647:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3701:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3701:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3712:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3712:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3697:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3697:3:1"
																		},
																		"nativeSrc": "3697:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3697:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3717:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3717:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3690:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3690:6:1"
																},
																"nativeSrc": "3690:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3690:34:1"
															},
															"nativeSrc": "3690:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3690:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3385:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3495:9:1",
														"nodeType": "YulTypedName",
														"src": "3495:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3506:6:1",
														"nodeType": "YulTypedName",
														"src": "3506:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3514:6:1",
														"nodeType": "YulTypedName",
														"src": "3514:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3522:6:1",
														"nodeType": "YulTypedName",
														"src": "3522:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3533:4:1",
														"nodeType": "YulTypedName",
														"src": "3533:4:1",
														"type": ""
													}
												],
												"src": "3385:345:1"
											},
											{
												"body": {
													"nativeSrc": "3836:76:1",
													"nodeType": "YulBlock",
													"src": "3836:76:1",
													"statements": [
														{
															"nativeSrc": "3846:26:1",
															"nodeType": "YulAssignment",
															"src": "3846:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3858:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3858:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3869:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3869:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3854:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3854:3:1"
																},
																"nativeSrc": "3854:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3854:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3846:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3846:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3888:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3888:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3899:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3899:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3881:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3881:6:1"
																},
																"nativeSrc": "3881:25:1",
																"nodeType": "YulFunctionCall",
																"src": "3881:25:1"
															},
															"nativeSrc": "3881:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "3881:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3735:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3805:9:1",
														"nodeType": "YulTypedName",
														"src": "3805:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3816:6:1",
														"nodeType": "YulTypedName",
														"src": "3816:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3827:4:1",
														"nodeType": "YulTypedName",
														"src": "3827:4:1",
														"type": ""
													}
												],
												"src": "3735:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610cd5380380610cd583398101604081905261002e916102a2565b806040518060400160405280601481526020017f44414f20476f7665726e616e636520546f6b656e0000000000000000000000008152506040518060400160405280600481526020016344414f4760e01b81525081600390816100919190610367565b50600461009e8282610367565b5050506001600160a01b0381166100cf57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6100d8816100f3565b506100ed8169d3c21bcecceda1000000610144565b50610446565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b03821661016d5760405163ec442f0560e01b81525f60048201526024016100c6565b6101785f838361017c565b5050565b6001600160a01b0383166101a6578060025f82825461019b9190610421565b909155506102169050565b6001600160a01b0383165f90815260208190526040902054818110156101f85760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100c6565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661023257600280548290039055610250565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161029591815260200190565b60405180910390a3505050565b5f602082840312156102b2575f80fd5b81516001600160a01b03811681146102c8575f80fd5b9392505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806102f757607f821691505b60208210810361031557634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561036257805f5260205f20601f840160051c810160208510156103405750805b601f840160051c820191505b8181101561035f575f815560010161034c565b50505b505050565b81516001600160401b03811115610380576103806102cf565b6103948161038e84546102e3565b8461031b565b6020601f8211600181146103c6575f83156103af5750848201515b5f19600385901b1c1916600184901b17845561035f565b5f84815260208120601f198516915b828110156103f557878501518255602094850194600190920191016103d5565b508482101561041257868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b8082018082111561044057634e487b7160e01b5f52601160045260245ffd5b92915050565b610882806104535f395ff3fe608060405234801561000f575f80fd5b50600436106100cb575f3560e01c806370a082311161008857806395d89b411161006357806395d89b41146101a4578063a9059cbb146101ac578063dd62ed3e146101bf578063f2fde38b146101f7575f80fd5b806370a0823114610159578063715018a6146101815780638da5cb5b14610189575f80fd5b806306fdde03146100cf578063095ea7b3146100ed57806318160ddd1461011057806323b872dd14610122578063313ce5671461013557806340c10f1914610144575b5f80fd5b6100d761020a565b6040516100e491906106f2565b60405180910390f35b6101006100fb366004610742565b61029a565b60405190151581526020016100e4565b6002545b6040519081526020016100e4565b61010061013036600461076a565b6102b3565b604051601281526020016100e4565b610157610152366004610742565b6102d6565b005b6101146101673660046107a4565b6001600160a01b03165f9081526020819052604090205490565b6101576102ec565b6005546040516001600160a01b0390911681526020016100e4565b6100d76102ff565b6101006101ba366004610742565b61030e565b6101146101cd3660046107c4565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101576102053660046107a4565b61031b565b606060038054610219906107f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610245906107f5565b80156102905780601f1061026757610100808354040283529160200191610290565b820191905f5260205f20905b81548152906001019060200180831161027357829003601f168201915b5050505050905090565b5f336102a781858561035d565b60019150505b92915050565b5f336102c085828561036f565b6102cb8585856103eb565b506001949350505050565b6102de610448565b6102e88282610475565b5050565b6102f4610448565b6102fd5f6104a9565b565b606060048054610219906107f5565b5f336102a78185856103eb565b610323610448565b6001600160a01b03811661035157604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61035a816104a9565b50565b61036a83838360016104fa565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198110156103e557818110156103d757604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610348565b6103e584848484035f6104fa565b50505050565b6001600160a01b03831661041457604051634b637e8f60e11b81525f6004820152602401610348565b6001600160a01b03821661043d5760405163ec442f0560e01b81525f6004820152602401610348565b61036a8383836105cc565b6005546001600160a01b031633146102fd5760405163118cdaa760e01b8152336004820152602401610348565b6001600160a01b03821661049e5760405163ec442f0560e01b81525f6004820152602401610348565b6102e85f83836105cc565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0384166105235760405163e602df0560e01b81525f6004820152602401610348565b6001600160a01b03831661054c57604051634a1406b160e11b81525f6004820152602401610348565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156103e557826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516105be91815260200190565b60405180910390a350505050565b6001600160a01b0383166105f6578060025f8282546105eb919061082d565b909155506106669050565b6001600160a01b0383165f90815260208190526040902054818110156106485760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610348565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610682576002805482900390556106a0565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106e591815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461073d575f80fd5b919050565b5f8060408385031215610753575f80fd5b61075c83610727565b946020939093013593505050565b5f805f6060848603121561077c575f80fd5b61078584610727565b925061079360208501610727565b929592945050506040919091013590565b5f602082840312156107b4575f80fd5b6107bd82610727565b9392505050565b5f80604083850312156107d5575f80fd5b6107de83610727565b91506107ec60208401610727565b90509250929050565b600181811c9082168061080957607f821691505b60208210810361082757634e487b7160e01b5f52602260045260245ffd5b50919050565b808201808211156102ad57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220af129067bdda10f19839e79e1ca2f948b2112af265c0d4cdd657e839f20e76c364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xCD5 CODESIZE SUB DUP1 PUSH2 0xCD5 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x2A2 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44414F20476F7665726E616E636520546F6B656E000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x44414F47 PUSH1 0xE0 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x91 SWAP2 SWAP1 PUSH2 0x367 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x9E DUP3 DUP3 PUSH2 0x367 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCF JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD8 DUP2 PUSH2 0xF3 JUMP JUMPDEST POP PUSH2 0xED DUP2 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x144 JUMP JUMPDEST POP PUSH2 0x446 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x16D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xC6 JUMP JUMPDEST PUSH2 0x178 PUSH0 DUP4 DUP4 PUSH2 0x17C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1A6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x421 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x216 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x232 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x250 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x295 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2F7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x315 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x362 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x340 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x35F JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x34C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x380 JUMPI PUSH2 0x380 PUSH2 0x2CF JUMP JUMPDEST PUSH2 0x394 DUP2 PUSH2 0x38E DUP5 SLOAD PUSH2 0x2E3 JUMP JUMPDEST DUP5 PUSH2 0x31B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3C6 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x3AF JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x35F JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3F5 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3D5 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x412 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x440 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x882 DUP1 PUSH2 0x453 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x189 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x144 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD7 PUSH2 0x20A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0x742 JUMP JUMPDEST PUSH2 0x29A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x100 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0x76A JUMP JUMPDEST PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x742 JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x114 PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x2FF JUMP JUMPDEST PUSH2 0x100 PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0x742 JUMP JUMPDEST PUSH2 0x30E JUMP JUMPDEST PUSH2 0x114 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x7C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x31B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0x7F5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x245 SWAP1 PUSH2 0x7F5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x290 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x267 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x290 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x273 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2A7 DUP2 DUP6 DUP6 PUSH2 0x35D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2C0 DUP6 DUP3 DUP6 PUSH2 0x36F JUMP JUMPDEST PUSH2 0x2CB DUP6 DUP6 DUP6 PUSH2 0x3EB JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2DE PUSH2 0x448 JUMP JUMPDEST PUSH2 0x2E8 DUP3 DUP3 PUSH2 0x475 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2F4 PUSH2 0x448 JUMP JUMPDEST PUSH2 0x2FD PUSH0 PUSH2 0x4A9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0x7F5 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2A7 DUP2 DUP6 DUP6 PUSH2 0x3EB JUMP JUMPDEST PUSH2 0x323 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x351 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x35A DUP2 PUSH2 0x4A9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x36A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x4FA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x3E5 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x348 JUMP JUMPDEST PUSH2 0x3E5 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x4FA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x414 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x43D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH2 0x36A DUP4 DUP4 DUP4 PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2FD JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x49E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH2 0x2E8 PUSH0 DUP4 DUP4 PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x523 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x3E5 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x5BE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5F6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5EB SWAP2 SWAP1 PUSH2 0x82D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x666 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x648 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x682 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x6E5 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x73D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x753 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x75C DUP4 PUSH2 0x727 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x77C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x785 DUP5 PUSH2 0x727 JUMP JUMPDEST SWAP3 POP PUSH2 0x793 PUSH1 0x20 DUP6 ADD PUSH2 0x727 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7BD DUP3 PUSH2 0x727 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7DE DUP4 PUSH2 0x727 JUMP JUMPDEST SWAP2 POP PUSH2 0x7EC PUSH1 0x20 DUP5 ADD PUSH2 0x727 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x809 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x827 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2AD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF SLT SWAP1 PUSH8 0xBDDA10F19839E79E SHR LOG2 0xF9 BASEFEE 0xB2 GT 0x2A CALLCODE PUSH6 0xC0D4CDD657E8 CODECOPY CALLCODE 0xE PUSH23 0xC364736F6C634300081A00330000000000000000000000 ",
							"sourceMap": "24938:337:0:-:0;;;24979:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25073:12;12497:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;12497:113:0;;;12571:5;12563;:13;;;;;;:::i;:::-;-1:-1:-1;12586:7:0;:17;12596:7;12586;:17;:::i;:::-;-1:-1:-1;;;;;;;;23039:26:0;;23035:95;;23088:31;;-1:-1:-1;;;23088:31:0;;23116:1;23088:31;;;3096:51:1;3069:18;;23088:31:0;;;;;;;;23035:95;23139:32;23158:12;23139:18;:32::i;:::-;-1:-1:-1;25099:37:0::2;25105:12:::0;25119:16:::2;25099:5;:37::i;:::-;24979:197:::0;24938:337;;24678:187;24770:6;;;-1:-1:-1;;;;;24786:17:0;;;-1:-1:-1;;;;;;24786:17:0;;;;;;;24818:40;;24770:6;;;24786:17;24770:6;;24818:40;;24751:16;;24818:40;24741:124;24678:187;:::o;18354:208::-;-1:-1:-1;;;;;18424:21:0;;18420:91;;18468:32;;-1:-1:-1;;;18468:32:0;;18497:1;18468:32;;;3096:51:1;3069:18;;18468:32:0;2950:203:1;18420:91:0;18520:35;18536:1;18540:7;18549:5;18520:7;:35::i;:::-;18354:208;;:::o;16904:1107::-;-1:-1:-1;;;;;16993:18:0;;16989:540;;17145:5;17129:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;16989:540:0;;-1:-1:-1;16989:540:0;;-1:-1:-1;;;;;17203:15:0;;17181:19;17203:15;;;;;;;;;;;17236:19;;;17232:115;;;17282:50;;-1:-1:-1;;;17282:50:0;;-1:-1:-1;;;;;3605:32:1;;17282:50:0;;;3587:51:1;3654:18;;;3647:34;;;3697:18;;;3690:34;;;3560:18;;17282:50:0;3385:345:1;17232:115:0;-1:-1:-1;;;;;17467:15:0;;:9;:15;;;;;;;;;;17485:19;;;;17467:37;;16989:540;-1:-1:-1;;;;;17543:16:0;;17539:425;;17706:12;:21;;;;;;;17539:425;;;-1:-1:-1;;;;;17917:13:0;;:9;:13;;;;;;;;;;:22;;;;;;17539:425;17994:2;-1:-1:-1;;;;;17979:25:0;17988:4;-1:-1:-1;;;;;17979:25:0;;17998:5;17979:25;;;;3881::1;;3869:2;3854:18;;3735:177;17979:25:0;;;;;;;;16904:1107;;;:::o;14:290:1:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:1;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:1:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:518::-;1054:2;1049:3;1046:11;1043:421;;;1090:5;1087:1;1080:16;1134:4;1131:1;1121:18;1204:2;1192:10;1188:19;1185:1;1181:27;1175:4;1171:38;1240:4;1228:10;1225:20;1222:47;;;-1:-1:-1;1263:4:1;1222:47;1318:2;1313:3;1309:12;1306:1;1302:20;1296:4;1292:31;1282:41;;1373:81;1391:2;1384:5;1381:13;1373:81;;;1450:1;1436:16;;1417:1;1406:13;1373:81;;;1377:3;;1043:421;952:518;;;:::o;1646:1299::-;1766:10;;-1:-1:-1;;;;;1788:30:1;;1785:56;;;1821:18;;:::i;:::-;1850:97;1940:6;1900:38;1932:4;1926:11;1900:38;:::i;:::-;1894:4;1850:97;:::i;:::-;1996:4;2027:2;2016:14;;2044:1;2039:649;;;;2732:1;2749:6;2746:89;;;-1:-1:-1;2801:19:1;;;2795:26;2746:89;-1:-1:-1;;1603:1:1;1599:11;;;1595:24;1591:29;1581:40;1627:1;1623:11;;;1578:57;2848:81;;2009:930;;2039:649;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2075:20:1;;;2193:222;2207:7;2204:1;2201:14;2193:222;;;2289:19;;;2283:26;2268:42;;2396:4;2381:20;;;;2349:1;2337:14;;;;2223:12;2193:222;;;2197:3;2443:6;2434:7;2431:19;2428:201;;;2504:19;;;2498:26;-1:-1:-1;;2587:1:1;2583:14;;;2599:3;2579:24;2575:37;2571:42;2556:58;2541:74;;2428:201;-1:-1:-1;;;;2675:1:1;2659:14;;;2655:22;2642:36;;-1:-1:-1;1646:1299:1:o;3158:222::-;3223:9;;;3244:10;;;3241:133;;;3296:10;3291:3;3287:20;3284:1;3277:31;3331:4;3328:1;3321:15;3359:4;3356:1;3349:15;3241:133;3158:222;;;;:::o;3735:177::-;24938:337:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_662": {
									"entryPoint": 861,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_722": {
									"entryPoint": 1274,
									"id": 722,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_853": {
									"entryPoint": 1096,
									"id": 853,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_611": {
									"entryPoint": 1141,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_770": {
									"entryPoint": 879,
									"id": 770,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_915": {
									"entryPoint": 1193,
									"id": 915,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_501": {
									"entryPoint": 1003,
									"id": 501,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 1484,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_398": {
									"entryPoint": null,
									"id": 398,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_422": {
									"entryPoint": 666,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_357": {
									"entryPoint": null,
									"id": 357,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_335": {
									"entryPoint": null,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_958": {
									"entryPoint": 726,
									"id": 958,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_317": {
									"entryPoint": 522,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_836": {
									"entryPoint": null,
									"id": 836,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_867": {
									"entryPoint": 748,
									"id": 867,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_326": {
									"entryPoint": 767,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_344": {
									"entryPoint": null,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_454": {
									"entryPoint": 691,
									"id": 454,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_895": {
									"entryPoint": 795,
									"id": 895,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_381": {
									"entryPoint": 782,
									"id": 381,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3485:1",
										"nodeType": "YulBlock",
										"src": "0:3485:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:1",
													"nodeType": "YulBlock",
													"src": "135:297:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:1",
																		"nodeType": "YulLiteral",
																		"src": "163:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:1"
																},
																"nativeSrc": "145:21:1",
																"nodeType": "YulFunctionCall",
																"src": "145:21:1"
															},
															"nativeSrc": "145:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:1"
														},
														{
															"nativeSrc": "175:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:1"
																},
																"nativeSrc": "189:13:1",
																"nodeType": "YulFunctionCall",
																"src": "189:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:1",
																	"nodeType": "YulTypedName",
																	"src": "179:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:1",
																				"nodeType": "YulLiteral",
																				"src": "233:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:1"
																		},
																		"nativeSrc": "218:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																},
																"nativeSrc": "211:34:1",
																"nodeType": "YulFunctionCall",
																"src": "211:34:1"
															},
															"nativeSrc": "211:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:1",
																				"nodeType": "YulLiteral",
																				"src": "275:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:1"
																		},
																		"nativeSrc": "260:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:1",
																				"nodeType": "YulLiteral",
																				"src": "292:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:1"
																		},
																		"nativeSrc": "280:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:1"
																},
																"nativeSrc": "254:50:1",
																"nodeType": "YulFunctionCall",
																"src": "254:50:1"
															},
															"nativeSrc": "254:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:1"
																				},
																				"nativeSrc": "324:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:1",
																				"nodeType": "YulLiteral",
																				"src": "348:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:1"
																		},
																		"nativeSrc": "320:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:1",
																		"nodeType": "YulLiteral",
																		"src": "353:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:1"
																},
																"nativeSrc": "313:42:1",
																"nodeType": "YulFunctionCall",
																"src": "313:42:1"
															},
															"nativeSrc": "313:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:1"
														},
														{
															"nativeSrc": "364:62:1",
															"nodeType": "YulAssignment",
															"src": "364:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:1",
																								"nodeType": "YulLiteral",
																								"src": "407:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:1"
																						},
																						"nativeSrc": "395:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:1",
																								"nodeType": "YulLiteral",
																								"src": "416:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:1"
																						},
																						"nativeSrc": "412:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:1"
																				},
																				"nativeSrc": "391:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:1"
																		},
																		"nativeSrc": "376:45:1",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:1",
																		"nodeType": "YulLiteral",
																		"src": "423:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:1"
																},
																"nativeSrc": "372:54:1",
																"nodeType": "YulFunctionCall",
																"src": "372:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:1",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:1",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:1",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:418:1"
											},
											{
												"body": {
													"nativeSrc": "486:124:1",
													"nodeType": "YulBlock",
													"src": "486:124:1",
													"statements": [
														{
															"nativeSrc": "496:29:1",
															"nodeType": "YulAssignment",
															"src": "496:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:1"
																},
																"nativeSrc": "505:20:1",
																"nodeType": "YulFunctionCall",
																"src": "505:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:1",
																"nodeType": "YulBlock",
																"src": "588:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:1",
																					"nodeType": "YulLiteral",
																					"src": "597:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:1",
																					"nodeType": "YulLiteral",
																					"src": "600:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:1"
																			},
																			"nativeSrc": "590:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:1"
																		},
																		"nativeSrc": "590:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:1",
																										"nodeType": "YulLiteral",
																										"src": "573:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:1",
																										"nodeType": "YulLiteral",
																										"src": "578:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:1"
																								},
																								"nativeSrc": "569:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:1",
																								"nodeType": "YulLiteral",
																								"src": "582:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:1"
																						},
																						"nativeSrc": "565:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:1"
																				},
																				"nativeSrc": "554:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:1"
																		},
																		"nativeSrc": "544:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:1"
																},
																"nativeSrc": "537:50:1",
																"nodeType": "YulFunctionCall",
																"src": "537:50:1"
															},
															"nativeSrc": "534:70:1",
															"nodeType": "YulIf",
															"src": "534:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:1",
														"nodeType": "YulTypedName",
														"src": "465:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:1",
														"nodeType": "YulTypedName",
														"src": "476:5:1",
														"type": ""
													}
												],
												"src": "437:173:1"
											},
											{
												"body": {
													"nativeSrc": "702:213:1",
													"nodeType": "YulBlock",
													"src": "702:213:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:1",
																"nodeType": "YulBlock",
																"src": "748:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:1",
																					"nodeType": "YulLiteral",
																					"src": "757:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:1",
																					"nodeType": "YulLiteral",
																					"src": "760:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:1"
																			},
																			"nativeSrc": "750:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:1"
																		},
																		"nativeSrc": "750:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:1"
																		},
																		"nativeSrc": "719:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:1",
																		"nodeType": "YulLiteral",
																		"src": "744:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:1"
																},
																"nativeSrc": "715:32:1",
																"nodeType": "YulFunctionCall",
																"src": "715:32:1"
															},
															"nativeSrc": "712:52:1",
															"nodeType": "YulIf",
															"src": "712:52:1"
														},
														{
															"nativeSrc": "773:39:1",
															"nodeType": "YulAssignment",
															"src": "773:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:1"
																},
																"nativeSrc": "783:29:1",
																"nodeType": "YulFunctionCall",
																"src": "783:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:1"
																}
															]
														},
														{
															"nativeSrc": "821:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "821:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "834:1:1",
																"nodeType": "YulLiteral",
																"src": "834:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "825:5:1",
																	"nodeType": "YulTypedName",
																	"src": "825:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "844:41:1",
															"nodeType": "YulAssignment",
															"src": "844:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "881:2:1",
																				"nodeType": "YulLiteral",
																				"src": "881:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "866:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:1"
																		},
																		"nativeSrc": "866:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "866:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "853:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "853:12:1"
																},
																"nativeSrc": "853:32:1",
																"nodeType": "YulFunctionCall",
																"src": "853:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "844:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:1"
																}
															]
														},
														{
															"nativeSrc": "894:15:1",
															"nodeType": "YulAssignment",
															"src": "894:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "904:5:1",
																"nodeType": "YulIdentifier",
																"src": "904:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "894:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:300:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:1",
														"nodeType": "YulTypedName",
														"src": "660:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:1",
														"nodeType": "YulTypedName",
														"src": "671:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:1",
														"nodeType": "YulTypedName",
														"src": "683:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:1",
														"nodeType": "YulTypedName",
														"src": "691:6:1",
														"type": ""
													}
												],
												"src": "615:300:1"
											},
											{
												"body": {
													"nativeSrc": "1015:92:1",
													"nodeType": "YulBlock",
													"src": "1015:92:1",
													"statements": [
														{
															"nativeSrc": "1025:26:1",
															"nodeType": "YulAssignment",
															"src": "1025:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1037:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1033:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:1"
																},
																"nativeSrc": "1033:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1033:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1025:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1067:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1092:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1092:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1085:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1085:6:1"
																				},
																				"nativeSrc": "1085:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1085:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1078:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1078:6:1"
																		},
																		"nativeSrc": "1078:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:1"
																},
																"nativeSrc": "1060:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1060:41:1"
															},
															"nativeSrc": "1060:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1060:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "920:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "984:9:1",
														"nodeType": "YulTypedName",
														"src": "984:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "995:6:1",
														"nodeType": "YulTypedName",
														"src": "995:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1006:4:1",
														"nodeType": "YulTypedName",
														"src": "1006:4:1",
														"type": ""
													}
												],
												"src": "920:187:1"
											},
											{
												"body": {
													"nativeSrc": "1213:76:1",
													"nodeType": "YulBlock",
													"src": "1213:76:1",
													"statements": [
														{
															"nativeSrc": "1223:26:1",
															"nodeType": "YulAssignment",
															"src": "1223:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1235:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1235:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1246:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1246:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1231:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:1"
																},
																"nativeSrc": "1231:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1231:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1223:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1223:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1265:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1265:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1276:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1276:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1258:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:1"
																},
																"nativeSrc": "1258:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1258:25:1"
															},
															"nativeSrc": "1258:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "1258:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1112:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1182:9:1",
														"nodeType": "YulTypedName",
														"src": "1182:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1193:6:1",
														"nodeType": "YulTypedName",
														"src": "1193:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1204:4:1",
														"nodeType": "YulTypedName",
														"src": "1204:4:1",
														"type": ""
													}
												],
												"src": "1112:177:1"
											},
											{
												"body": {
													"nativeSrc": "1398:270:1",
													"nodeType": "YulBlock",
													"src": "1398:270:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1444:16:1",
																"nodeType": "YulBlock",
																"src": "1444:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1453:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1453:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1446:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1446:6:1"
																			},
																			"nativeSrc": "1446:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1446:12:1"
																		},
																		"nativeSrc": "1446:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1446:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1419:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1419:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1415:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:1"
																		},
																		"nativeSrc": "1415:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1415:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1440:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1440:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1411:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1411:3:1"
																},
																"nativeSrc": "1411:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1411:32:1"
															},
															"nativeSrc": "1408:52:1",
															"nodeType": "YulIf",
															"src": "1408:52:1"
														},
														{
															"nativeSrc": "1469:39:1",
															"nodeType": "YulAssignment",
															"src": "1469:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1479:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1479:18:1"
																},
																"nativeSrc": "1479:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1479:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1469:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:1"
																}
															]
														},
														{
															"nativeSrc": "1517:48:1",
															"nodeType": "YulAssignment",
															"src": "1517:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1550:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1550:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1561:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1561:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1546:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1546:3:1"
																		},
																		"nativeSrc": "1546:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1546:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1527:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1527:18:1"
																},
																"nativeSrc": "1527:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1527:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1517:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1517:6:1"
																}
															]
														},
														{
															"nativeSrc": "1574:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1574:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1587:1:1",
																"nodeType": "YulLiteral",
																"src": "1587:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1578:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1578:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1597:41:1",
															"nodeType": "YulAssignment",
															"src": "1597:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1623:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1623:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1634:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1634:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1619:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1619:3:1"
																		},
																		"nativeSrc": "1619:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1619:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1606:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1606:12:1"
																},
																"nativeSrc": "1606:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1606:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1597:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1597:5:1"
																}
															]
														},
														{
															"nativeSrc": "1647:15:1",
															"nodeType": "YulAssignment",
															"src": "1647:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1657:5:1",
																"nodeType": "YulIdentifier",
																"src": "1657:5:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1647:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1294:374:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1348:9:1",
														"nodeType": "YulTypedName",
														"src": "1348:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1359:7:1",
														"nodeType": "YulTypedName",
														"src": "1359:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1371:6:1",
														"nodeType": "YulTypedName",
														"src": "1371:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1379:6:1",
														"nodeType": "YulTypedName",
														"src": "1379:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1387:6:1",
														"nodeType": "YulTypedName",
														"src": "1387:6:1",
														"type": ""
													}
												],
												"src": "1294:374:1"
											},
											{
												"body": {
													"nativeSrc": "1770:87:1",
													"nodeType": "YulBlock",
													"src": "1770:87:1",
													"statements": [
														{
															"nativeSrc": "1780:26:1",
															"nodeType": "YulAssignment",
															"src": "1780:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1792:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1792:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1803:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1803:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1788:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1788:3:1"
																},
																"nativeSrc": "1788:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1788:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1780:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1780:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1822:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1822:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1837:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1837:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1845:4:1",
																				"nodeType": "YulLiteral",
																				"src": "1845:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1833:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:1"
																		},
																		"nativeSrc": "1833:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1833:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1815:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:1"
																},
																"nativeSrc": "1815:36:1",
																"nodeType": "YulFunctionCall",
																"src": "1815:36:1"
															},
															"nativeSrc": "1815:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "1815:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1673:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1739:9:1",
														"nodeType": "YulTypedName",
														"src": "1739:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1750:6:1",
														"nodeType": "YulTypedName",
														"src": "1750:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1761:4:1",
														"nodeType": "YulTypedName",
														"src": "1761:4:1",
														"type": ""
													}
												],
												"src": "1673:184:1"
											},
											{
												"body": {
													"nativeSrc": "1932:116:1",
													"nodeType": "YulBlock",
													"src": "1932:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1978:16:1",
																"nodeType": "YulBlock",
																"src": "1978:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1987:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1987:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1990:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1990:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1980:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1980:6:1"
																			},
																			"nativeSrc": "1980:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1980:12:1"
																		},
																		"nativeSrc": "1980:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1980:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1953:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1953:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1962:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1962:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1949:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1949:3:1"
																		},
																		"nativeSrc": "1949:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1949:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1974:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1945:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:1"
																},
																"nativeSrc": "1945:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1945:32:1"
															},
															"nativeSrc": "1942:52:1",
															"nodeType": "YulIf",
															"src": "1942:52:1"
														},
														{
															"nativeSrc": "2003:39:1",
															"nodeType": "YulAssignment",
															"src": "2003:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2032:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2032:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2013:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2013:18:1"
																},
																"nativeSrc": "2013:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2013:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2003:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2003:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1862:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1898:9:1",
														"nodeType": "YulTypedName",
														"src": "1898:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1909:7:1",
														"nodeType": "YulTypedName",
														"src": "1909:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1921:6:1",
														"nodeType": "YulTypedName",
														"src": "1921:6:1",
														"type": ""
													}
												],
												"src": "1862:186:1"
											},
											{
												"body": {
													"nativeSrc": "2154:102:1",
													"nodeType": "YulBlock",
													"src": "2154:102:1",
													"statements": [
														{
															"nativeSrc": "2164:26:1",
															"nodeType": "YulAssignment",
															"src": "2164:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2176:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2176:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2187:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2187:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2172:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2172:3:1"
																},
																"nativeSrc": "2172:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2172:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2164:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2164:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2206:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2206:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2221:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2237:3:1",
																								"nodeType": "YulLiteral",
																								"src": "2237:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2242:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2242:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2233:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2233:3:1"
																						},
																						"nativeSrc": "2233:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2233:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2246:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2246:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2229:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2229:3:1"
																				},
																				"nativeSrc": "2229:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2229:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2217:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2217:3:1"
																		},
																		"nativeSrc": "2217:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2217:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2199:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2199:6:1"
																},
																"nativeSrc": "2199:51:1",
																"nodeType": "YulFunctionCall",
																"src": "2199:51:1"
															},
															"nativeSrc": "2199:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "2199:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2053:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2123:9:1",
														"nodeType": "YulTypedName",
														"src": "2123:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2134:6:1",
														"nodeType": "YulTypedName",
														"src": "2134:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2145:4:1",
														"nodeType": "YulTypedName",
														"src": "2145:4:1",
														"type": ""
													}
												],
												"src": "2053:203:1"
											},
											{
												"body": {
													"nativeSrc": "2348:173:1",
													"nodeType": "YulBlock",
													"src": "2348:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2394:16:1",
																"nodeType": "YulBlock",
																"src": "2394:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2403:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2403:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2406:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2406:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2396:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2396:6:1"
																			},
																			"nativeSrc": "2396:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2396:12:1"
																		},
																		"nativeSrc": "2396:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2396:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2369:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2369:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2378:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2378:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2365:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2365:3:1"
																		},
																		"nativeSrc": "2365:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2365:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2390:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2390:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2361:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2361:3:1"
																},
																"nativeSrc": "2361:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2361:32:1"
															},
															"nativeSrc": "2358:52:1",
															"nodeType": "YulIf",
															"src": "2358:52:1"
														},
														{
															"nativeSrc": "2419:39:1",
															"nodeType": "YulAssignment",
															"src": "2419:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2448:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2448:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2429:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2429:18:1"
																},
																"nativeSrc": "2429:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2429:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2419:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2419:6:1"
																}
															]
														},
														{
															"nativeSrc": "2467:48:1",
															"nodeType": "YulAssignment",
															"src": "2467:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2500:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2500:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2511:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2511:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2496:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2496:3:1"
																		},
																		"nativeSrc": "2496:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2496:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2477:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2477:18:1"
																},
																"nativeSrc": "2477:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2477:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2467:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2467:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2261:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2306:9:1",
														"nodeType": "YulTypedName",
														"src": "2306:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2317:7:1",
														"nodeType": "YulTypedName",
														"src": "2317:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2329:6:1",
														"nodeType": "YulTypedName",
														"src": "2329:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2337:6:1",
														"nodeType": "YulTypedName",
														"src": "2337:6:1",
														"type": ""
													}
												],
												"src": "2261:260:1"
											},
											{
												"body": {
													"nativeSrc": "2581:325:1",
													"nodeType": "YulBlock",
													"src": "2581:325:1",
													"statements": [
														{
															"nativeSrc": "2591:22:1",
															"nodeType": "YulAssignment",
															"src": "2591:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2605:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2605:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2608:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2608:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2601:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2601:3:1"
																},
																"nativeSrc": "2601:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2601:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2591:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2591:6:1"
																}
															]
														},
														{
															"nativeSrc": "2622:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2622:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2652:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2652:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2658:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2658:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2648:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2648:3:1"
																},
																"nativeSrc": "2648:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2648:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2626:18:1",
																	"nodeType": "YulTypedName",
																	"src": "2626:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2699:31:1",
																"nodeType": "YulBlock",
																"src": "2699:31:1",
																"statements": [
																	{
																		"nativeSrc": "2701:27:1",
																		"nodeType": "YulAssignment",
																		"src": "2701:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2715:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2715:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2723:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2723:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2711:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2711:3:1"
																			},
																			"nativeSrc": "2711:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2711:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2701:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2701:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2679:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "2679:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2672:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2672:6:1"
																},
																"nativeSrc": "2672:26:1",
																"nodeType": "YulFunctionCall",
																"src": "2672:26:1"
															},
															"nativeSrc": "2669:61:1",
															"nodeType": "YulIf",
															"src": "2669:61:1"
														},
														{
															"body": {
																"nativeSrc": "2789:111:1",
																"nodeType": "YulBlock",
																"src": "2789:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2810:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2810:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2817:3:1",
																							"nodeType": "YulLiteral",
																							"src": "2817:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2822:10:1",
																							"nodeType": "YulLiteral",
																							"src": "2822:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2813:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2813:3:1"
																					},
																					"nativeSrc": "2813:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2813:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2803:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2803:6:1"
																			},
																			"nativeSrc": "2803:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2803:31:1"
																		},
																		"nativeSrc": "2803:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2803:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2854:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2854:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2857:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2857:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2847:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2847:6:1"
																			},
																			"nativeSrc": "2847:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2847:15:1"
																		},
																		"nativeSrc": "2847:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2847:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2882:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2882:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2885:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2885:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2875:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2875:6:1"
																			},
																			"nativeSrc": "2875:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2875:15:1"
																		},
																		"nativeSrc": "2875:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2875:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2745:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "2745:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2768:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2768:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2776:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2776:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2765:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2765:2:1"
																		},
																		"nativeSrc": "2765:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2765:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2742:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2742:2:1"
																},
																"nativeSrc": "2742:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2742:38:1"
															},
															"nativeSrc": "2739:161:1",
															"nodeType": "YulIf",
															"src": "2739:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2526:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2561:4:1",
														"nodeType": "YulTypedName",
														"src": "2561:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2570:6:1",
														"nodeType": "YulTypedName",
														"src": "2570:6:1",
														"type": ""
													}
												],
												"src": "2526:380:1"
											},
											{
												"body": {
													"nativeSrc": "3068:188:1",
													"nodeType": "YulBlock",
													"src": "3068:188:1",
													"statements": [
														{
															"nativeSrc": "3078:26:1",
															"nodeType": "YulAssignment",
															"src": "3078:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3090:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3090:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3101:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3101:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3086:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3086:3:1"
																},
																"nativeSrc": "3086:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3086:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3078:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3078:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3120:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3120:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3135:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3135:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3151:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3151:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3156:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3156:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3147:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3147:3:1"
																						},
																						"nativeSrc": "3147:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3147:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3160:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3160:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3143:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3143:3:1"
																				},
																				"nativeSrc": "3143:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3143:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3131:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3131:3:1"
																		},
																		"nativeSrc": "3131:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3131:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3113:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3113:6:1"
																},
																"nativeSrc": "3113:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3113:51:1"
															},
															"nativeSrc": "3113:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3113:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3184:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3184:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3195:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3195:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3180:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3180:3:1"
																		},
																		"nativeSrc": "3180:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3180:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3200:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3200:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3173:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3173:6:1"
																},
																"nativeSrc": "3173:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3173:34:1"
															},
															"nativeSrc": "3173:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3173:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3227:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3227:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3238:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3238:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3223:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3223:3:1"
																		},
																		"nativeSrc": "3223:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3223:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3243:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3243:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3216:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3216:6:1"
																},
																"nativeSrc": "3216:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3216:34:1"
															},
															"nativeSrc": "3216:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3216:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2911:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3021:9:1",
														"nodeType": "YulTypedName",
														"src": "3021:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3032:6:1",
														"nodeType": "YulTypedName",
														"src": "3032:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3040:6:1",
														"nodeType": "YulTypedName",
														"src": "3040:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3048:6:1",
														"nodeType": "YulTypedName",
														"src": "3048:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3059:4:1",
														"nodeType": "YulTypedName",
														"src": "3059:4:1",
														"type": ""
													}
												],
												"src": "2911:345:1"
											},
											{
												"body": {
													"nativeSrc": "3309:174:1",
													"nodeType": "YulBlock",
													"src": "3309:174:1",
													"statements": [
														{
															"nativeSrc": "3319:16:1",
															"nodeType": "YulAssignment",
															"src": "3319:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3330:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3330:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3333:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3333:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3326:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3326:3:1"
																},
																"nativeSrc": "3326:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3326:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3319:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3319:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3366:111:1",
																"nodeType": "YulBlock",
																"src": "3366:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3387:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3387:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3394:3:1",
																							"nodeType": "YulLiteral",
																							"src": "3394:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3399:10:1",
																							"nodeType": "YulLiteral",
																							"src": "3399:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3390:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3390:3:1"
																					},
																					"nativeSrc": "3390:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3390:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3380:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3380:6:1"
																			},
																			"nativeSrc": "3380:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3380:31:1"
																		},
																		"nativeSrc": "3380:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3380:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3431:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3431:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3434:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3434:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3424:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3424:6:1"
																			},
																			"nativeSrc": "3424:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3424:15:1"
																		},
																		"nativeSrc": "3424:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3424:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3459:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3459:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3462:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3462:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3452:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3452:6:1"
																			},
																			"nativeSrc": "3452:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3452:15:1"
																		},
																		"nativeSrc": "3452:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3452:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3350:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3350:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3353:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3353:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3347:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3347:2:1"
																},
																"nativeSrc": "3347:10:1",
																"nodeType": "YulFunctionCall",
																"src": "3347:10:1"
															},
															"nativeSrc": "3344:133:1",
															"nodeType": "YulIf",
															"src": "3344:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3261:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3292:1:1",
														"nodeType": "YulTypedName",
														"src": "3292:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3295:1:1",
														"nodeType": "YulTypedName",
														"src": "3295:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3301:3:1",
														"nodeType": "YulTypedName",
														"src": "3301:3:1",
														"type": ""
													}
												],
												"src": "3261:222:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100cb575f3560e01c806370a082311161008857806395d89b411161006357806395d89b41146101a4578063a9059cbb146101ac578063dd62ed3e146101bf578063f2fde38b146101f7575f80fd5b806370a0823114610159578063715018a6146101815780638da5cb5b14610189575f80fd5b806306fdde03146100cf578063095ea7b3146100ed57806318160ddd1461011057806323b872dd14610122578063313ce5671461013557806340c10f1914610144575b5f80fd5b6100d761020a565b6040516100e491906106f2565b60405180910390f35b6101006100fb366004610742565b61029a565b60405190151581526020016100e4565b6002545b6040519081526020016100e4565b61010061013036600461076a565b6102b3565b604051601281526020016100e4565b610157610152366004610742565b6102d6565b005b6101146101673660046107a4565b6001600160a01b03165f9081526020819052604090205490565b6101576102ec565b6005546040516001600160a01b0390911681526020016100e4565b6100d76102ff565b6101006101ba366004610742565b61030e565b6101146101cd3660046107c4565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101576102053660046107a4565b61031b565b606060038054610219906107f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610245906107f5565b80156102905780601f1061026757610100808354040283529160200191610290565b820191905f5260205f20905b81548152906001019060200180831161027357829003601f168201915b5050505050905090565b5f336102a781858561035d565b60019150505b92915050565b5f336102c085828561036f565b6102cb8585856103eb565b506001949350505050565b6102de610448565b6102e88282610475565b5050565b6102f4610448565b6102fd5f6104a9565b565b606060048054610219906107f5565b5f336102a78185856103eb565b610323610448565b6001600160a01b03811661035157604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61035a816104a9565b50565b61036a83838360016104fa565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198110156103e557818110156103d757604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610348565b6103e584848484035f6104fa565b50505050565b6001600160a01b03831661041457604051634b637e8f60e11b81525f6004820152602401610348565b6001600160a01b03821661043d5760405163ec442f0560e01b81525f6004820152602401610348565b61036a8383836105cc565b6005546001600160a01b031633146102fd5760405163118cdaa760e01b8152336004820152602401610348565b6001600160a01b03821661049e5760405163ec442f0560e01b81525f6004820152602401610348565b6102e85f83836105cc565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0384166105235760405163e602df0560e01b81525f6004820152602401610348565b6001600160a01b03831661054c57604051634a1406b160e11b81525f6004820152602401610348565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156103e557826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516105be91815260200190565b60405180910390a350505050565b6001600160a01b0383166105f6578060025f8282546105eb919061082d565b909155506106669050565b6001600160a01b0383165f90815260208190526040902054818110156106485760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610348565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610682576002805482900390556106a0565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106e591815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461073d575f80fd5b919050565b5f8060408385031215610753575f80fd5b61075c83610727565b946020939093013593505050565b5f805f6060848603121561077c575f80fd5b61078584610727565b925061079360208501610727565b929592945050506040919091013590565b5f602082840312156107b4575f80fd5b6107bd82610727565b9392505050565b5f80604083850312156107d5575f80fd5b6107de83610727565b91506107ec60208401610727565b90509250929050565b600181811c9082168061080957607f821691505b60208210810361082757634e487b7160e01b5f52602260045260245ffd5b50919050565b808201808211156102ad57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220af129067bdda10f19839e79e1ca2f948b2112af265c0d4cdd657e839f20e76c364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x189 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x144 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD7 PUSH2 0x20A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0x742 JUMP JUMPDEST PUSH2 0x29A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x100 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0x76A JUMP JUMPDEST PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x742 JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x114 PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x2FF JUMP JUMPDEST PUSH2 0x100 PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0x742 JUMP JUMPDEST PUSH2 0x30E JUMP JUMPDEST PUSH2 0x114 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x7C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x31B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0x7F5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x245 SWAP1 PUSH2 0x7F5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x290 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x267 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x290 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x273 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2A7 DUP2 DUP6 DUP6 PUSH2 0x35D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2C0 DUP6 DUP3 DUP6 PUSH2 0x36F JUMP JUMPDEST PUSH2 0x2CB DUP6 DUP6 DUP6 PUSH2 0x3EB JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2DE PUSH2 0x448 JUMP JUMPDEST PUSH2 0x2E8 DUP3 DUP3 PUSH2 0x475 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2F4 PUSH2 0x448 JUMP JUMPDEST PUSH2 0x2FD PUSH0 PUSH2 0x4A9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0x7F5 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2A7 DUP2 DUP6 DUP6 PUSH2 0x3EB JUMP JUMPDEST PUSH2 0x323 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x351 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x35A DUP2 PUSH2 0x4A9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x36A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x4FA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x3E5 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x348 JUMP JUMPDEST PUSH2 0x3E5 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x4FA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x414 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x43D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH2 0x36A DUP4 DUP4 DUP4 PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2FD JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x49E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH2 0x2E8 PUSH0 DUP4 DUP4 PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x523 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x3E5 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x5BE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5F6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5EB SWAP2 SWAP1 PUSH2 0x82D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x666 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x648 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x682 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x6E5 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x73D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x753 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x75C DUP4 PUSH2 0x727 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x77C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x785 DUP5 PUSH2 0x727 JUMP JUMPDEST SWAP3 POP PUSH2 0x793 PUSH1 0x20 DUP6 ADD PUSH2 0x727 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7BD DUP3 PUSH2 0x727 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7DE DUP4 PUSH2 0x727 JUMP JUMPDEST SWAP2 POP PUSH2 0x7EC PUSH1 0x20 DUP5 ADD PUSH2 0x727 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x809 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x827 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2AD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF SLT SWAP1 PUSH8 0xBDDA10F19839E79E SHR LOG2 0xF9 BASEFEE 0xB2 GT 0x2A CALLCODE PUSH6 0xC0D4CDD657E8 CODECOPY CALLCODE 0xE PUSH23 0xC364736F6C634300081A00330000000000000000000000 ",
							"sourceMap": "24938:337:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12675:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14894:186;;;;;;:::i;:::-;;:::i;:::-;;;1085:14:1;;1078:22;1060:41;;1048:2;1033:18;14894:186:0;920:187:1;13745:97:0;13823:12;;13745:97;;;1258:25:1;;;1246:2;1231:18;13745:97:0;1112:177:1;15672:244:0;;;;;;:::i;:::-;;:::i;13603:82::-;;;13676:2;1815:36:1;;1803:2;1788:18;13603:82:0;1673:184:1;25182:91:0;;;;;;:::i;:::-;;:::i;:::-;;13900:116;;;;;;:::i;:::-;-1:-1:-1;;;;;13991:18:0;13965:7;13991:18;;;;;;;;;;;;13900:116;24059:101;;;:::i;23404:85::-;23476:6;;23404:85;;-1:-1:-1;;;;;23476:6:0;;;2199:51:1;;2187:2;2172:18;23404:85:0;2053:203:1;12877:93:0;;;:::i;14211:178::-;;;;;;:::i;:::-;;:::i;14447:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;14553:18:0;;;14527:7;14553:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;14447:140;24309:215;;;;;;:::i;:::-;;:::i;12675:89::-;12720:13;12752:5;12745:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12675:89;:::o;14894:186::-;14967:4;4285:10;15021:31;4285:10;15037:7;15046:5;15021:8;:31::i;:::-;15069:4;15062:11;;;14894:186;;;;;:::o;15672:244::-;15759:4;4285:10;15815:37;15831:4;4285:10;15846:5;15815:15;:37::i;:::-;15862:26;15872:4;15878:2;15882:5;15862:9;:26::i;:::-;-1:-1:-1;15905:4:0;;15672:244;-1:-1:-1;;;;15672:244:0:o;25182:91::-;23297:13;:11;:13::i;:::-;25250:17:::1;25256:2;25260:6;25250:5;:17::i;:::-;25182:91:::0;;:::o;24059:101::-;23297:13;:11;:13::i;:::-;24123:30:::1;24150:1;24123:18;:30::i;:::-;24059:101::o:0;12877:93::-;12924:13;12956:7;12949:14;;;;;:::i;14211:178::-;14280:4;4285:10;14334:27;4285:10;14351:2;14355:5;14334:9;:27::i;24309:215::-;23297:13;:11;:13::i;:::-;-1:-1:-1;;;;;24393:22:0;::::1;24389:91;;24438:31;::::0;-1:-1:-1;;;24438:31:0;;24466:1:::1;24438:31;::::0;::::1;2199:51:1::0;2172:18;;24438:31:0::1;;;;;;;;24389:91;24489:28;24508:8;24489:18;:28::i;:::-;24309:215:::0;:::o;19622:128::-;19706:37;19715:5;19722:7;19731:5;19738:4;19706:8;:37::i;:::-;19622:128;;;:::o;21311:476::-;-1:-1:-1;;;;;14553:18:0;;;21410:24;14553:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;21476:36:0;;21472:309;;;21551:5;21532:16;:24;21528:130;;;21583:60;;-1:-1:-1;;;21583:60:0;;-1:-1:-1;;;;;3131:32:1;;21583:60:0;;;3113:51:1;3180:18;;;3173:34;;;3223:18;;;3216:34;;;3086:18;;21583:60:0;2911:345:1;21528:130:0;21699:57;21708:5;21715:7;21743:5;21724:16;:24;21750:5;21699:8;:57::i;:::-;21400:387;21311:476;;;:::o;16289:300::-;-1:-1:-1;;;;;16372:18:0;;16368:86;;16413:30;;-1:-1:-1;;;16413:30:0;;16440:1;16413:30;;;2199:51:1;2172:18;;16413:30:0;2053:203:1;16368:86:0;-1:-1:-1;;;;;16467:16:0;;16463:86;;16506:32;;-1:-1:-1;;;16506:32:0;;16535:1;16506:32;;;2199:51:1;2172:18;;16506:32:0;2053:203:1;16463:86:0;16558:24;16566:4;16572:2;16576:5;16558:7;:24::i;23562:162::-;23476:6;;-1:-1:-1;;;;;23476:6:0;4285:10;23621:23;23617:101;;23667:40;;-1:-1:-1;;;23667:40:0;;4285:10;23667:40;;;2199:51:1;2172:18;;23667:40:0;2053:203:1;18354:208:0;-1:-1:-1;;;;;18424:21:0;;18420:91;;18468:32;;-1:-1:-1;;;18468:32:0;;18497:1;18468:32;;;2199:51:1;2172:18;;18468:32:0;2053:203:1;18420:91:0;18520:35;18536:1;18540:7;18549:5;18520:7;:35::i;24678:187::-;24770:6;;;-1:-1:-1;;;;;24786:17:0;;;-1:-1:-1;;;;;;24786:17:0;;;;;;;24818:40;;24770:6;;;24786:17;24770:6;;24818:40;;24751:16;;24818:40;24741:124;24678:187;:::o;20597:432::-;-1:-1:-1;;;;;20709:19:0;;20705:89;;20751:32;;-1:-1:-1;;;20751:32:0;;20780:1;20751:32;;;2199:51:1;2172:18;;20751:32:0;2053:203:1;20705:89:0;-1:-1:-1;;;;;20807:21:0;;20803:90;;20851:31;;-1:-1:-1;;;20851:31:0;;20879:1;20851:31;;;2199:51:1;2172:18;;20851:31:0;2053:203:1;20803:90:0;-1:-1:-1;;;;;20902:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;20947:76;;;;20997:7;-1:-1:-1;;;;;20981:31:0;20990:5;-1:-1:-1;;;;;20981:31:0;;21006:5;20981:31;;;;1258:25:1;;1246:2;1231:18;;1112:177;20981:31:0;;;;;;;;20597:432;;;;:::o;16904:1107::-;-1:-1:-1;;;;;16993:18:0;;16989:540;;17145:5;17129:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;16989:540:0;;-1:-1:-1;16989:540:0;;-1:-1:-1;;;;;17203:15:0;;17181:19;17203:15;;;;;;;;;;;17236:19;;;17232:115;;;17282:50;;-1:-1:-1;;;17282:50:0;;-1:-1:-1;;;;;3131:32:1;;17282:50:0;;;3113:51:1;3180:18;;;3173:34;;;3223:18;;;3216:34;;;3086:18;;17282:50:0;2911:345:1;17232:115:0;-1:-1:-1;;;;;17467:15:0;;:9;:15;;;;;;;;;;17485:19;;;;17467:37;;16989:540;-1:-1:-1;;;;;17543:16:0;;17539:425;;17706:12;:21;;;;;;;17539:425;;;-1:-1:-1;;;;;17917:13:0;;:9;:13;;;;;;;;;;:22;;;;;;17539:425;17994:2;-1:-1:-1;;;;;17979:25:0;17988:4;-1:-1:-1;;;;;17979:25:0;;17998:5;17979:25;;;;1258::1;;1246:2;1231:18;;1112:177;17979:25:0;;;;;;;;16904:1107;;;:::o;14:418:1:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:1;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:300::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;881:2;866:18;;;;853:32;;-1:-1:-1;;;615:300:1:o;1294:374::-;1371:6;1379;1387;1440:2;1428:9;1419:7;1415:23;1411:32;1408:52;;;1456:1;1453;1446:12;1408:52;1479:29;1498:9;1479:29;:::i;:::-;1469:39;;1527:38;1561:2;1550:9;1546:18;1527:38;:::i;:::-;1294:374;;1517:48;;-1:-1:-1;;;1634:2:1;1619:18;;;;1606:32;;1294:374::o;1862:186::-;1921:6;1974:2;1962:9;1953:7;1949:23;1945:32;1942:52;;;1990:1;1987;1980:12;1942:52;2013:29;2032:9;2013:29;:::i;:::-;2003:39;1862:186;-1:-1:-1;;;1862:186:1:o;2261:260::-;2329:6;2337;2390:2;2378:9;2369:7;2365:23;2361:32;2358:52;;;2406:1;2403;2396:12;2358:52;2429:29;2448:9;2429:29;:::i;:::-;2419:39;;2477:38;2511:2;2500:9;2496:18;2477:38;:::i;:::-;2467:48;;2261:260;;;;;:::o;2526:380::-;2605:1;2601:12;;;;2648;;;2669:61;;2723:4;2715:6;2711:17;2701:27;;2669:61;2776:2;2768:6;2765:14;2745:18;2742:38;2739:161;;2822:10;2817:3;2813:20;2810:1;2803:31;2857:4;2854:1;2847:15;2885:4;2882:1;2875:15;2739:161;;2526:380;;;:::o;3261:222::-;3326:9;;;3347:10;;;3344:133;;;3399:10;3394:3;3390:20;3387:1;3380:31;3434:4;3431:1;3424:15;3462:4;3459:1;3452:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "435600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24735",
								"balanceOf(address)": "2560",
								"decimals()": "265",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2367",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "51260",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28421"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24938,
									"end": 25275,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 24938,
									"end": 25275,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24938,
									"end": 25275,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 24979,
									"end": 25176,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25073,
									"end": 25085,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "PUSH",
									"source": 0,
									"value": "44414F20476F7665726E616E636520546F6B656E000000000000000000000000"
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "44414F47"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12497,
									"end": 12610,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12571,
									"end": 12576,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12563,
									"end": 12568,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12563,
									"end": 12576,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12563,
									"end": 12576,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12563,
									"end": 12576,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12563,
									"end": 12576,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12563,
									"end": 12576,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12563,
									"end": 12576,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12563,
									"end": 12576,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12563,
									"end": 12576,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12563,
									"end": 12576,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12586,
									"end": 12593,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12586,
									"end": 12603,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12596,
									"end": 12603,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12586,
									"end": 12593,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12586,
									"end": 12603,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12586,
									"end": 12603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12586,
									"end": 12603,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12586,
									"end": 12603,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 23039,
									"end": 23065,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23039,
									"end": 23065,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23035,
									"end": 23130,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 23035,
									"end": 23130,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23088,
									"end": 23119,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23088,
									"end": 23119,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 23088,
									"end": 23119,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23088,
									"end": 23119,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23116,
									"end": 23117,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23088,
									"end": 23119,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 23088,
									"end": 23119,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23088,
									"end": 23119,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3096,
									"end": 3147,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3069,
									"end": 3087,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3069,
									"end": 3087,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 23088,
									"end": 23119,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 23088,
									"end": 23119,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23088,
									"end": 23119,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23088,
									"end": 23119,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23088,
									"end": 23119,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23088,
									"end": 23119,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23088,
									"end": 23119,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 23088,
									"end": 23119,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23088,
									"end": 23119,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 23035,
									"end": 23130,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 23035,
									"end": 23130,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23139,
									"end": 23171,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 23158,
									"end": 23170,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23139,
									"end": 23157,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 23139,
									"end": 23171,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23139,
									"end": 23171,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 23139,
									"end": 23171,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 25099,
									"end": 25136,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 25105,
									"end": 25117,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25119,
									"end": 25135,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 25099,
									"end": 25104,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 25099,
									"end": 25136,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25099,
									"end": 25136,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 25099,
									"end": 25136,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24979,
									"end": 25176,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24938,
									"end": 25275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 24938,
									"end": 25275,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24678,
									"end": 24865,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 24678,
									"end": 24865,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24770,
									"end": 24776,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 24770,
									"end": 24776,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24770,
									"end": 24776,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 24786,
									"end": 24803,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24786,
									"end": 24803,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24786,
									"end": 24803,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 24786,
									"end": 24803,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24786,
									"end": 24803,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24786,
									"end": 24803,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24786,
									"end": 24803,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 24786,
									"end": 24803,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24786,
									"end": 24803,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 24786,
									"end": 24803,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24818,
									"end": 24858,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24818,
									"end": 24858,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24770,
									"end": 24776,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24770,
									"end": 24776,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24770,
									"end": 24776,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24786,
									"end": 24803,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24770,
									"end": 24776,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24770,
									"end": 24776,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24818,
									"end": 24858,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 24818,
									"end": 24858,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24751,
									"end": 24767,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24751,
									"end": 24767,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24818,
									"end": 24858,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 24741,
									"end": 24865,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24678,
									"end": 24865,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24678,
									"end": 24865,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18354,
									"end": 18562,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 18354,
									"end": 18562,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18424,
									"end": 18445,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18424,
									"end": 18445,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18420,
									"end": 18511,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 18420,
									"end": 18511,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18468,
									"end": 18500,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18468,
									"end": 18500,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 18468,
									"end": 18500,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18468,
									"end": 18500,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18497,
									"end": 18498,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18468,
									"end": 18500,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18468,
									"end": 18500,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18468,
									"end": 18500,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3096,
									"end": 3147,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3069,
									"end": 3087,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3069,
									"end": 3087,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 18468,
									"end": 18500,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2950,
									"end": 3153,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 18420,
									"end": 18511,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 18420,
									"end": 18511,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18520,
									"end": 18555,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 18536,
									"end": 18537,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18540,
									"end": 18547,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18549,
									"end": 18554,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18520,
									"end": 18527,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 18520,
									"end": 18555,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18520,
									"end": 18555,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 18520,
									"end": 18555,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18354,
									"end": 18562,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18354,
									"end": 18562,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18354,
									"end": 18562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16904,
									"end": 18011,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 16904,
									"end": 18011,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 16993,
									"end": 17011,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16993,
									"end": 17011,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16989,
									"end": 17529,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 16989,
									"end": 17529,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17145,
									"end": 17150,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17129,
									"end": 17141,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17129,
									"end": 17141,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17129,
									"end": 17150,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17129,
									"end": 17150,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17129,
									"end": 17150,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17129,
									"end": 17150,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 17129,
									"end": 17150,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17129,
									"end": 17150,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17129,
									"end": 17150,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 17129,
									"end": 17150,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17129,
									"end": 17150,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 17129,
									"end": 17150,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17129,
									"end": 17150,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17129,
									"end": 17150,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17129,
									"end": 17150,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 16989,
									"end": 17529,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 16989,
									"end": 17529,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 16989,
									"end": 17529,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16989,
									"end": 17529,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 16989,
									"end": 17529,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17203,
									"end": 17218,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17203,
									"end": 17218,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17181,
									"end": 17200,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17203,
									"end": 17218,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17203,
									"end": 17218,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17203,
									"end": 17218,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17203,
									"end": 17218,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17203,
									"end": 17218,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17203,
									"end": 17218,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17203,
									"end": 17218,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17203,
									"end": 17218,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17203,
									"end": 17218,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17203,
									"end": 17218,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17203,
									"end": 17218,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17236,
									"end": 17255,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17236,
									"end": 17255,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17236,
									"end": 17255,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17232,
									"end": 17347,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17232,
									"end": 17347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 17232,
									"end": 17347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17282,
									"end": 17332,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17282,
									"end": 17332,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 17282,
									"end": 17332,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17282,
									"end": 17332,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3605,
									"end": 3637,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3605,
									"end": 3637,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 17282,
									"end": 17332,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17282,
									"end": 17332,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17282,
									"end": 17332,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3587,
									"end": 3638,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3654,
									"end": 3672,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3654,
									"end": 3672,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3654,
									"end": 3672,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3647,
									"end": 3681,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3647,
									"end": 3681,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3647,
									"end": 3681,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3697,
									"end": 3715,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 3697,
									"end": 3715,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3697,
									"end": 3715,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3724,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3724,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3724,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3560,
									"end": 3578,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 3560,
									"end": 3578,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 17282,
									"end": 17332,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 3385,
									"end": 3730,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 17232,
									"end": 17347,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 17232,
									"end": 17347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17467,
									"end": 17482,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 17467,
									"end": 17482,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17467,
									"end": 17476,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17467,
									"end": 17482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17467,
									"end": 17482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17467,
									"end": 17482,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17467,
									"end": 17482,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17467,
									"end": 17482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17467,
									"end": 17482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17467,
									"end": 17482,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17467,
									"end": 17482,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17467,
									"end": 17482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17467,
									"end": 17482,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17485,
									"end": 17504,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17485,
									"end": 17504,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17485,
									"end": 17504,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17485,
									"end": 17504,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17467,
									"end": 17504,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17467,
									"end": 17504,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16989,
									"end": 17529,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 16989,
									"end": 17529,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17543,
									"end": 17559,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17543,
									"end": 17559,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17539,
									"end": 17964,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 17539,
									"end": 17964,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17706,
									"end": 17718,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17706,
									"end": 17727,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17706,
									"end": 17727,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17706,
									"end": 17727,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17706,
									"end": 17727,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17706,
									"end": 17727,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17706,
									"end": 17727,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17706,
									"end": 17727,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17539,
									"end": 17964,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 17539,
									"end": 17964,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17539,
									"end": 17964,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 17539,
									"end": 17964,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17917,
									"end": 17930,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17917,
									"end": 17930,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17917,
									"end": 17926,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17917,
									"end": 17930,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17917,
									"end": 17930,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17917,
									"end": 17930,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17917,
									"end": 17930,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17917,
									"end": 17930,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17917,
									"end": 17930,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17917,
									"end": 17930,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17917,
									"end": 17930,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17917,
									"end": 17930,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17917,
									"end": 17930,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17917,
									"end": 17939,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17917,
									"end": 17939,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17917,
									"end": 17939,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17917,
									"end": 17939,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17917,
									"end": 17939,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17917,
									"end": 17939,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17539,
									"end": 17964,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 17539,
									"end": 17964,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17994,
									"end": 17996,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17979,
									"end": 18004,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17988,
									"end": 17992,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17979,
									"end": 18004,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17979,
									"end": 18004,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 17998,
									"end": 18003,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17979,
									"end": 18004,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17979,
									"end": 18004,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17979,
									"end": 18004,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 17979,
									"end": 18004,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3881,
									"end": 3906,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3881,
									"end": 3906,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3869,
									"end": 3871,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3854,
									"end": 3872,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3854,
									"end": 3872,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3735,
									"end": 3912,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 17979,
									"end": 18004,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 17979,
									"end": 18004,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17979,
									"end": 18004,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17979,
									"end": 18004,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17979,
									"end": 18004,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17979,
									"end": 18004,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17979,
									"end": 18004,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17979,
									"end": 18004,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17979,
									"end": 18004,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 16904,
									"end": 18011,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16904,
									"end": 18011,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16904,
									"end": 18011,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16904,
									"end": 18011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 309,
									"end": 436,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 309,
									"end": 436,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 370,
									"end": 380,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 365,
									"end": 368,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 361,
									"end": 381,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 358,
									"end": 359,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 382,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 401,
									"end": 405,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 398,
									"end": 399,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 391,
									"end": 406,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 425,
									"end": 429,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 422,
									"end": 423,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 430,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 441,
									"end": 821,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 520,
									"end": 521,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 563,
									"end": 575,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 584,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 638,
									"end": 642,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 630,
									"end": 636,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 626,
									"end": 643,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 616,
									"end": 643,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 616,
									"end": 643,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 584,
									"end": 645,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 691,
									"end": 693,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 683,
									"end": 689,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 680,
									"end": 694,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 660,
									"end": 678,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 657,
									"end": 695,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 654,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 737,
									"end": 747,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 732,
									"end": 735,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 728,
									"end": 748,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 772,
									"end": 776,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 762,
									"end": 777,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 800,
									"end": 804,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 797,
									"end": 798,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 790,
									"end": 805,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 654,
									"end": 815,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 654,
									"end": 815,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1054,
									"end": 1056,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1049,
									"end": 1052,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1057,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1095,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1087,
									"end": 1088,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1080,
									"end": 1096,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1134,
									"end": 1138,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1131,
									"end": 1132,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1121,
									"end": 1139,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1204,
									"end": 1206,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1192,
									"end": 1202,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1188,
									"end": 1207,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1185,
									"end": 1186,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1181,
									"end": 1208,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1179,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1171,
									"end": 1209,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1240,
									"end": 1244,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1228,
									"end": 1238,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1245,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1318,
									"end": 1320,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1313,
									"end": 1316,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1321,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1306,
									"end": 1307,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1302,
									"end": 1322,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1300,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1292,
									"end": 1323,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1282,
									"end": 1323,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1282,
									"end": 1323,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1391,
									"end": 1393,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 1389,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1394,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1450,
									"end": 1451,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1418,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1406,
									"end": 1419,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1377,
									"end": 1380,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1377,
									"end": 1380,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 2945,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1646,
									"end": 2945,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1766,
									"end": 1776,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1766,
									"end": 1776,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1788,
									"end": 1818,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1788,
									"end": 1818,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1821,
									"end": 1839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 1940,
									"end": 1946,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1932,
									"end": 1936,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1926,
									"end": 1937,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1900,
									"end": 1938,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1894,
									"end": 1898,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1850,
									"end": 1947,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2027,
									"end": 2029,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2016,
									"end": 2030,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2030,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2045,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2732,
									"end": 2733,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2749,
									"end": 2755,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2801,
									"end": 2820,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2801,
									"end": 2820,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2801,
									"end": 2820,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2795,
									"end": 2821,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1603,
									"end": 1604,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1595,
									"end": 1619,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1591,
									"end": 1620,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 1621,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1627,
									"end": 1628,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1578,
									"end": 1635,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2848,
									"end": 2929,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2848,
									"end": 2929,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2009,
									"end": 2939,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 2009,
									"end": 2939,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 899,
									"end": 900,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 892,
									"end": 906,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 936,
									"end": 940,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 923,
									"end": 941,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 923,
									"end": 941,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2075,
									"end": 2095,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2075,
									"end": 2095,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2075,
									"end": 2095,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2207,
									"end": 2214,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2204,
									"end": 2205,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2201,
									"end": 2215,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2268,
									"end": 2310,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2268,
									"end": 2310,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2396,
									"end": 2400,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2381,
									"end": 2401,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2381,
									"end": 2401,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2381,
									"end": 2401,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2381,
									"end": 2401,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2349,
									"end": 2350,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2337,
									"end": 2351,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2337,
									"end": 2351,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2337,
									"end": 2351,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2337,
									"end": 2351,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2223,
									"end": 2235,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2197,
									"end": 2200,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2434,
									"end": 2441,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2431,
									"end": 2450,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2504,
									"end": 2523,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2504,
									"end": 2523,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2504,
									"end": 2523,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2498,
									"end": 2524,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2587,
									"end": 2588,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2583,
									"end": 2597,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2583,
									"end": 2597,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2583,
									"end": 2597,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2599,
									"end": 2602,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 2579,
									"end": 2603,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2575,
									"end": 2612,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2571,
									"end": 2613,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2556,
									"end": 2614,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2615,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2615,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2675,
									"end": 2676,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2659,
									"end": 2673,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2659,
									"end": 2673,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2659,
									"end": 2673,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2655,
									"end": 2677,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2642,
									"end": 2678,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2642,
									"end": 2678,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1646,
									"end": 2945,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3158,
									"end": 3380,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 3158,
									"end": 3380,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3223,
									"end": 3232,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3223,
									"end": 3232,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3223,
									"end": 3232,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3244,
									"end": 3254,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3244,
									"end": 3254,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3244,
									"end": 3254,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3241,
									"end": 3374,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3241,
									"end": 3374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 3241,
									"end": 3374,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3296,
									"end": 3306,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 3291,
									"end": 3294,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 3287,
									"end": 3307,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3284,
									"end": 3285,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3277,
									"end": 3308,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3331,
									"end": 3335,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 3328,
									"end": 3329,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3321,
									"end": 3336,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3363,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3356,
									"end": 3357,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3349,
									"end": 3364,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3241,
									"end": 3374,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 3241,
									"end": 3374,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3158,
									"end": 3380,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3158,
									"end": 3380,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3158,
									"end": 3380,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3158,
									"end": 3380,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3158,
									"end": 3380,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3735,
									"end": 3912,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 3735,
									"end": 3912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 24938,
									"end": 25275,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24938,
									"end": 25275,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24938,
									"end": 25275,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24938,
									"end": 25275,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24938,
									"end": 25275,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 24938,
									"end": 25275,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24938,
									"end": 25275,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220af129067bdda10f19839e79e1ca2f948b2112af265c0d4cdd657e839f20e76c364736f6c634300081a0033",
									".code": [
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24938,
											"end": 25275,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12675,
											"end": 12764,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12675,
											"end": 12764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12675,
											"end": 12764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12675,
											"end": 12764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 12675,
											"end": 12764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12675,
											"end": 12764,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12675,
											"end": 12764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12675,
											"end": 12764,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12675,
											"end": 12764,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12675,
											"end": 12764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12675,
											"end": 12764,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12675,
											"end": 12764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12675,
											"end": 12764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 12675,
											"end": 12764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12675,
											"end": 12764,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12675,
											"end": 12764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12675,
											"end": 12764,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12675,
											"end": 12764,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12675,
											"end": 12764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12675,
											"end": 12764,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12675,
											"end": 12764,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12675,
											"end": 12764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12675,
											"end": 12764,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 15080,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14894,
											"end": 15080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 15080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 14894,
											"end": 15080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 14894,
											"end": 15080,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 15080,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14894,
											"end": 15080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14894,
											"end": 15080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 15080,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 14894,
											"end": 15080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 15080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14894,
											"end": 15080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 15080,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 14894,
											"end": 15080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 15080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14894,
											"end": 15080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14894,
											"end": 15080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 1107,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13745,
											"end": 13842,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13745,
											"end": 13842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13823,
											"end": 13835,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13823,
											"end": 13835,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13745,
											"end": 13842,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13745,
											"end": 13842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13745,
											"end": 13842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13745,
											"end": 13842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13745,
											"end": 13842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15672,
											"end": 15916,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15672,
											"end": 15916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15672,
											"end": 15916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15672,
											"end": 15916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15672,
											"end": 15916,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15672,
											"end": 15916,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15672,
											"end": 15916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 15672,
											"end": 15916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15672,
											"end": 15916,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15672,
											"end": 15916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15672,
											"end": 15916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 15672,
											"end": 15916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13603,
											"end": 13685,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13603,
											"end": 13685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13603,
											"end": 13685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13603,
											"end": 13685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13676,
											"end": 13678,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1805,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 1806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13603,
											"end": 13685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1673,
											"end": 1857,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25182,
											"end": 25273,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 25182,
											"end": 25273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25182,
											"end": 25273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 25182,
											"end": 25273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 25182,
											"end": 25273,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25182,
											"end": 25273,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25182,
											"end": 25273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 25182,
											"end": 25273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25182,
											"end": 25273,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 25182,
											"end": 25273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25182,
											"end": 25273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 25182,
											"end": 25273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25182,
											"end": 25273,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 25182,
											"end": 25273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25182,
											"end": 25273,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 13900,
											"end": 14016,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 13900,
											"end": 14016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13900,
											"end": 14016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13900,
											"end": 14016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 13900,
											"end": 14016,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13900,
											"end": 14016,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13900,
											"end": 14016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 13900,
											"end": 14016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13900,
											"end": 14016,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 13900,
											"end": 14016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13991,
											"end": 14009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13965,
											"end": 13972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13991,
											"end": 14009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13991,
											"end": 14009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13991,
											"end": 14009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13991,
											"end": 14009,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13991,
											"end": 14009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13991,
											"end": 14009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13991,
											"end": 14009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13991,
											"end": 14009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13991,
											"end": 14009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13991,
											"end": 14009,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13991,
											"end": 14009,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13991,
											"end": 14009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13900,
											"end": 14016,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 24160,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 24059,
											"end": 24160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 24160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 24059,
											"end": 24160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 24059,
											"end": 24160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23404,
											"end": 23489,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 23404,
											"end": 23489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23482,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23476,
											"end": 23482,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23404,
											"end": 23489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23404,
											"end": 23489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23476,
											"end": 23482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2189,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23404,
											"end": 23489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12877,
											"end": 12970,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 12877,
											"end": 12970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12877,
											"end": 12970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12877,
											"end": 12970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 12877,
											"end": 12970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14211,
											"end": 14389,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 14211,
											"end": 14389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14211,
											"end": 14389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 14211,
											"end": 14389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 14211,
											"end": 14389,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14211,
											"end": 14389,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14211,
											"end": 14389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14211,
											"end": 14389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14211,
											"end": 14389,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 14211,
											"end": 14389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14211,
											"end": 14389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14211,
											"end": 14389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14447,
											"end": 14587,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 14447,
											"end": 14587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14447,
											"end": 14587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14447,
											"end": 14587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 14447,
											"end": 14587,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14447,
											"end": 14587,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14447,
											"end": 14587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 14447,
											"end": 14587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14447,
											"end": 14587,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 14447,
											"end": 14587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14527,
											"end": 14534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14564,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14447,
											"end": 14587,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24309,
											"end": 24524,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 24309,
											"end": 24524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24309,
											"end": 24524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 24309,
											"end": 24524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 24309,
											"end": 24524,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24309,
											"end": 24524,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24309,
											"end": 24524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 24309,
											"end": 24524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24309,
											"end": 24524,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 24309,
											"end": 24524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24309,
											"end": 24524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 24309,
											"end": 24524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12675,
											"end": 12764,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 12675,
											"end": 12764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12720,
											"end": 12733,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12752,
											"end": 12757,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 12745,
											"end": 12757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 12745,
											"end": 12757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12675,
											"end": 12764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12675,
											"end": 12764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 15080,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14894,
											"end": 15080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14967,
											"end": 14971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4285,
											"end": 4295,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15021,
											"end": 15052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4285,
											"end": 4295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15044,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15046,
											"end": 15051,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15021,
											"end": 15029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 15021,
											"end": 15052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15021,
											"end": 15052,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15021,
											"end": 15052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15069,
											"end": 15073,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15062,
											"end": 15073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15062,
											"end": 15073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15062,
											"end": 15073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 15080,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 14894,
											"end": 15080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 15080,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 15080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 15080,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 15080,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 15080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15672,
											"end": 15916,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 15672,
											"end": 15916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15759,
											"end": 15763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4285,
											"end": 4295,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15815,
											"end": 15852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 15831,
											"end": 15835,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4285,
											"end": 4295,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15846,
											"end": 15851,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15815,
											"end": 15830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 15815,
											"end": 15852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15815,
											"end": 15852,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 15815,
											"end": 15852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15862,
											"end": 15888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 15872,
											"end": 15876,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15878,
											"end": 15880,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15882,
											"end": 15887,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15862,
											"end": 15871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 15862,
											"end": 15888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15862,
											"end": 15888,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 15862,
											"end": 15888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15905,
											"end": 15909,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15905,
											"end": 15909,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15672,
											"end": 15916,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15672,
											"end": 15916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25182,
											"end": 25273,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 25182,
											"end": 25273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 23297,
											"end": 23308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 23297,
											"end": 23310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23310,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 23297,
											"end": 23310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25250,
											"end": 25267,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 25256,
											"end": 25258,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25266,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25250,
											"end": 25255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 25250,
											"end": 25267,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25250,
											"end": 25267,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 25250,
											"end": 25267,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25182,
											"end": 25273,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25182,
											"end": 25273,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25182,
											"end": 25273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 24160,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 24059,
											"end": 24160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 23297,
											"end": 23308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 23297,
											"end": 23310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23310,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 23297,
											"end": 23310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24123,
											"end": 24153,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24150,
											"end": 24151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24123,
											"end": 24141,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 24123,
											"end": 24153,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24123,
											"end": 24153,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24123,
											"end": 24153,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 24160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12877,
											"end": 12970,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 12877,
											"end": 12970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12924,
											"end": 12937,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12956,
											"end": 12963,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12949,
											"end": 12963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12949,
											"end": 12963,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12949,
											"end": 12963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 12949,
											"end": 12963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12949,
											"end": 12963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 12949,
											"end": 12963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14211,
											"end": 14389,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14211,
											"end": 14389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14280,
											"end": 14284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4285,
											"end": 4295,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14334,
											"end": 14361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4285,
											"end": 4295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14353,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14360,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14334,
											"end": 14343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14334,
											"end": 14361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24309,
											"end": 24524,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 24309,
											"end": 24524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 23297,
											"end": 23308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 23297,
											"end": 23310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23310,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 23297,
											"end": 23310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24393,
											"end": 24415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24393,
											"end": 24415,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24389,
											"end": 24480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 24389,
											"end": 24480,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24438,
											"end": 24469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24438,
											"end": 24469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24438,
											"end": 24469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24438,
											"end": 24469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24438,
											"end": 24469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24438,
											"end": 24469,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24438,
											"end": 24469,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24438,
											"end": 24469,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 24438,
											"end": 24469,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24438,
											"end": 24469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24438,
											"end": 24469,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24438,
											"end": 24469,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24438,
											"end": 24469,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24438,
											"end": 24469,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24438,
											"end": 24469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24438,
											"end": 24469,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24389,
											"end": 24480,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 24389,
											"end": 24480,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24489,
											"end": 24517,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 24508,
											"end": 24516,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24489,
											"end": 24507,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 24489,
											"end": 24517,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24489,
											"end": 24517,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 24489,
											"end": 24517,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24309,
											"end": 24524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24309,
											"end": 24524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19622,
											"end": 19750,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 19622,
											"end": 19750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19706,
											"end": 19743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 19715,
											"end": 19720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19722,
											"end": 19729,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19731,
											"end": 19736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19738,
											"end": 19742,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19706,
											"end": 19714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 19706,
											"end": 19743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19706,
											"end": 19743,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 19706,
											"end": 19743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19622,
											"end": 19750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19622,
											"end": 19750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19622,
											"end": 19750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19622,
											"end": 19750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21311,
											"end": 21787,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 21311,
											"end": 21787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21410,
											"end": 21434,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14564,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14553,
											"end": 14580,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21476,
											"end": 21512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21476,
											"end": 21512,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21472,
											"end": 21781,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21472,
											"end": 21781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 21472,
											"end": 21781,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21551,
											"end": 21556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21532,
											"end": 21548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21532,
											"end": 21556,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21528,
											"end": 21658,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21528,
											"end": 21658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 21528,
											"end": 21658,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21583,
											"end": 21643,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21583,
											"end": 21643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21583,
											"end": 21643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21583,
											"end": 21643,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3131,
											"end": 3163,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3163,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21583,
											"end": 21643,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21583,
											"end": 21643,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21583,
											"end": 21643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3113,
											"end": 3164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3207,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3223,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3223,
											"end": 3241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3223,
											"end": 3241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3086,
											"end": 3104,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3086,
											"end": 3104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21583,
											"end": 21643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2911,
											"end": 3256,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21528,
											"end": 21658,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 21528,
											"end": 21658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21699,
											"end": 21756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 21708,
											"end": 21713,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21715,
											"end": 21722,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21743,
											"end": 21748,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21740,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21748,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21699,
											"end": 21707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 21699,
											"end": 21756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21699,
											"end": 21756,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 21699,
											"end": 21756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21400,
											"end": 21787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21311,
											"end": 21787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21311,
											"end": 21787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21311,
											"end": 21787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21311,
											"end": 21787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16289,
											"end": 16589,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 16289,
											"end": 16589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16372,
											"end": 16390,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16372,
											"end": 16390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16368,
											"end": 16454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 16368,
											"end": 16454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16413,
											"end": 16443,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16413,
											"end": 16443,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16413,
											"end": 16443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16413,
											"end": 16443,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16440,
											"end": 16441,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16413,
											"end": 16443,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16413,
											"end": 16443,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16413,
											"end": 16443,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16413,
											"end": 16443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16368,
											"end": 16454,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 16368,
											"end": 16454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16467,
											"end": 16483,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16467,
											"end": 16483,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16463,
											"end": 16549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 16463,
											"end": 16549,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16506,
											"end": 16538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16506,
											"end": 16538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16506,
											"end": 16538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16506,
											"end": 16538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16506,
											"end": 16538,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16506,
											"end": 16538,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16506,
											"end": 16538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16506,
											"end": 16538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16463,
											"end": 16549,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 16463,
											"end": 16549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16558,
											"end": 16582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 16566,
											"end": 16570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16572,
											"end": 16574,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16576,
											"end": 16581,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16558,
											"end": 16565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 16558,
											"end": 16582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23724,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 23562,
											"end": 23724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23482,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23476,
											"end": 23482,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23476,
											"end": 23482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4285,
											"end": 4295,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23621,
											"end": 23644,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23617,
											"end": 23718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23617,
											"end": 23718,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23667,
											"end": 23707,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23667,
											"end": 23707,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23667,
											"end": 23707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23667,
											"end": 23707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4285,
											"end": 4295,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23667,
											"end": 23707,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23667,
											"end": 23707,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23667,
											"end": 23707,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23667,
											"end": 23707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18562,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 18354,
											"end": 18562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18424,
											"end": 18445,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18424,
											"end": 18445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18420,
											"end": 18511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 18420,
											"end": 18511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18468,
											"end": 18500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18468,
											"end": 18500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18468,
											"end": 18500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18468,
											"end": 18500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18497,
											"end": 18498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18468,
											"end": 18500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18468,
											"end": 18500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18468,
											"end": 18500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18468,
											"end": 18500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18420,
											"end": 18511,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 18420,
											"end": 18511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18520,
											"end": 18555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 18536,
											"end": 18537,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18540,
											"end": 18547,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18549,
											"end": 18554,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18520,
											"end": 18527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 18520,
											"end": 18555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24678,
											"end": 24865,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 24678,
											"end": 24865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24786,
											"end": 24803,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24786,
											"end": 24803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24786,
											"end": 24803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 24786,
											"end": 24803,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24786,
											"end": 24803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24786,
											"end": 24803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24786,
											"end": 24803,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 24786,
											"end": 24803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24786,
											"end": 24803,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 24786,
											"end": 24803,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24818,
											"end": 24858,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24818,
											"end": 24858,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24786,
											"end": 24803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24818,
											"end": 24858,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 24818,
											"end": 24858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24751,
											"end": 24767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24751,
											"end": 24767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24818,
											"end": 24858,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24678,
											"end": 24865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24678,
											"end": 24865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20597,
											"end": 21029,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 20597,
											"end": 21029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20709,
											"end": 20728,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20709,
											"end": 20728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 20705,
											"end": 20794,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20751,
											"end": 20783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20751,
											"end": 20783,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20751,
											"end": 20783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20751,
											"end": 20783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20780,
											"end": 20781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20751,
											"end": 20783,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20751,
											"end": 20783,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20751,
											"end": 20783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20751,
											"end": 20783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20705,
											"end": 20794,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 20705,
											"end": 20794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20807,
											"end": 20828,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20807,
											"end": 20828,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20803,
											"end": 20893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 20803,
											"end": 20893,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20851,
											"end": 20882,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20851,
											"end": 20882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20851,
											"end": 20882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20851,
											"end": 20882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20879,
											"end": 20880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20851,
											"end": 20882,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20851,
											"end": 20882,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20851,
											"end": 20882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20851,
											"end": 20882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20803,
											"end": 20893,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 20803,
											"end": 20893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20902,
											"end": 20920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20902,
											"end": 20920,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20902,
											"end": 20920,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20902,
											"end": 20920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20902,
											"end": 20920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20902,
											"end": 20920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20902,
											"end": 20920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20902,
											"end": 20913,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20902,
											"end": 20920,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20902,
											"end": 20920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20902,
											"end": 20920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20902,
											"end": 20920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20902,
											"end": 20920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20902,
											"end": 20920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20902,
											"end": 20920,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20902,
											"end": 20920,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20902,
											"end": 20929,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20902,
											"end": 20929,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 20902,
											"end": 20929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20902,
											"end": 20929,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20902,
											"end": 20929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20902,
											"end": 20929,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20902,
											"end": 20929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20902,
											"end": 20929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20902,
											"end": 20929,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20902,
											"end": 20937,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20902,
											"end": 20937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20902,
											"end": 20937,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20947,
											"end": 21023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20947,
											"end": 21023,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20947,
											"end": 21023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 20947,
											"end": 21023,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20997,
											"end": 21004,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20981,
											"end": 21012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20990,
											"end": 20995,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20981,
											"end": 21012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20981,
											"end": 21012,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 21006,
											"end": 21011,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20981,
											"end": 21012,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20981,
											"end": 21012,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20981,
											"end": 21012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 20981,
											"end": 21012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20981,
											"end": 21012,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 20981,
											"end": 21012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20981,
											"end": 21012,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20981,
											"end": 21012,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20981,
											"end": 21012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20981,
											"end": 21012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20981,
											"end": 21012,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20981,
											"end": 21012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20981,
											"end": 21012,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20597,
											"end": 21029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20597,
											"end": 21029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20597,
											"end": 21029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20597,
											"end": 21029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20597,
											"end": 21029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16904,
											"end": 18011,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 16904,
											"end": 18011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16993,
											"end": 17011,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17011,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16989,
											"end": 17529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 16989,
											"end": 17529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17145,
											"end": 17150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17129,
											"end": 17141,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17129,
											"end": 17141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17129,
											"end": 17150,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17129,
											"end": 17150,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17129,
											"end": 17150,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17129,
											"end": 17150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 17129,
											"end": 17150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17129,
											"end": 17150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17129,
											"end": 17150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 17129,
											"end": 17150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17129,
											"end": 17150,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 17129,
											"end": 17150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17129,
											"end": 17150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17129,
											"end": 17150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17129,
											"end": 17150,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16989,
											"end": 17529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 16989,
											"end": 17529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16989,
											"end": 17529,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16989,
											"end": 17529,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 16989,
											"end": 17529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17203,
											"end": 17218,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17203,
											"end": 17218,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17181,
											"end": 17200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17203,
											"end": 17218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17203,
											"end": 17218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17203,
											"end": 17218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17203,
											"end": 17218,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17203,
											"end": 17218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17203,
											"end": 17218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17203,
											"end": 17218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17203,
											"end": 17218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17203,
											"end": 17218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17203,
											"end": 17218,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17203,
											"end": 17218,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17255,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17232,
											"end": 17347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17232,
											"end": 17347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 17232,
											"end": 17347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17282,
											"end": 17332,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17282,
											"end": 17332,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17282,
											"end": 17332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17282,
											"end": 17332,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3131,
											"end": 3163,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3163,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17332,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17282,
											"end": 17332,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17282,
											"end": 17332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3113,
											"end": 3164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3207,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3223,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3223,
											"end": 3241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3223,
											"end": 3241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3086,
											"end": 3104,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3086,
											"end": 3104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2911,
											"end": 3256,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17232,
											"end": 17347,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 17232,
											"end": 17347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17467,
											"end": 17482,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17467,
											"end": 17482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17467,
											"end": 17476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17467,
											"end": 17482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17467,
											"end": 17482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17467,
											"end": 17482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17467,
											"end": 17482,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17467,
											"end": 17482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17467,
											"end": 17482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17467,
											"end": 17482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17467,
											"end": 17482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17467,
											"end": 17482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17467,
											"end": 17482,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17485,
											"end": 17504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17485,
											"end": 17504,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17485,
											"end": 17504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17485,
											"end": 17504,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17467,
											"end": 17504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17467,
											"end": 17504,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16989,
											"end": 17529,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 16989,
											"end": 17529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17543,
											"end": 17559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17543,
											"end": 17559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17539,
											"end": 17964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 17539,
											"end": 17964,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17718,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17706,
											"end": 17727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17727,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17727,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17727,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17706,
											"end": 17727,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17539,
											"end": 17964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 17539,
											"end": 17964,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17539,
											"end": 17964,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 17539,
											"end": 17964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17917,
											"end": 17930,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17917,
											"end": 17930,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17917,
											"end": 17926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17917,
											"end": 17930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17917,
											"end": 17930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17917,
											"end": 17930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17917,
											"end": 17930,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17917,
											"end": 17930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17917,
											"end": 17930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17917,
											"end": 17930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17917,
											"end": 17930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17917,
											"end": 17930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17917,
											"end": 17930,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17917,
											"end": 17939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17917,
											"end": 17939,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17917,
											"end": 17939,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17917,
											"end": 17939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17917,
											"end": 17939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17917,
											"end": 17939,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17539,
											"end": 17964,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 17539,
											"end": 17964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17994,
											"end": 17996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17979,
											"end": 18004,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17988,
											"end": 17992,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17979,
											"end": 18004,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17979,
											"end": 18004,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17998,
											"end": 18003,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17979,
											"end": 18004,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17979,
											"end": 18004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17979,
											"end": 18004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 17979,
											"end": 18004,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17979,
											"end": 18004,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 17979,
											"end": 18004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17979,
											"end": 18004,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17979,
											"end": 18004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17979,
											"end": 18004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17979,
											"end": 18004,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17979,
											"end": 18004,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17979,
											"end": 18004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17979,
											"end": 18004,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16904,
											"end": 18011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16904,
											"end": 18011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16904,
											"end": 18011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16904,
											"end": 18011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 866,
											"end": 884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1442,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1443,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1479,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 1561,
											"end": 1563,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1564,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1527,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 1927,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1976,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 1960,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 1972,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 1977,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 1992,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2013,
											"end": 2042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2042,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1862,
											"end": 2048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2378,
											"end": 2387,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2376,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2388,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2393,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2406,
											"end": 2407,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2408,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2429,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 2448,
											"end": 2457,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2429,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2429,
											"end": 2458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2429,
											"end": 2458,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 2429,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2458,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2511,
											"end": 2513,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2509,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 2514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2477,
											"end": 2515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2660,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2660,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 2669,
											"end": 2730,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2727,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2715,
											"end": 2721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2728,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2701,
											"end": 2728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2701,
											"end": 2728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2730,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 2669,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2776,
											"end": 2778,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2774,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2745,
											"end": 2763,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2780,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2822,
											"end": 2832,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2817,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2813,
											"end": 2833,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2834,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2861,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2847,
											"end": 2862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2889,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2890,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3483,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3261,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3335,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3357,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3477,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3344,
											"end": 3477,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3399,
											"end": 3409,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3394,
											"end": 3397,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3390,
											"end": 3410,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3380,
											"end": 3411,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3434,
											"end": 3438,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3431,
											"end": 3432,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3424,
											"end": 3439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3466,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3459,
											"end": 3460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3467,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/GovernanceToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GovernanceToken_flattened.sol\":\"DAOToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GovernanceToken_flattened.sol\":{\"keccak256\":\"0xb605fba13df8ddb1908ea065ac4437e288f080474fa678bf218e662ab1469aa6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e31b65aa218b901cba41bd46cdb66a558261063ee4cbc57c260997667c81f\",\"dweb:/ipfs/QmNd1KJFPitCDEarhrP69rAoKnvPbTukmTZVrUnhT8ahoB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "contracts/GovernanceToken_flattened.sol:DAOToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "contracts/GovernanceToken_flattened.sol:DAOToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "contracts/GovernanceToken_flattened.sol:DAOToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "contracts/GovernanceToken_flattened.sol:DAOToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "contracts/GovernanceToken_flattened.sol:DAOToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 777,
								"contract": "contracts/GovernanceToken_flattened.sol:DAOToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GovernanceToken_flattened.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GovernanceToken_flattened.sol\":{\"keccak256\":\"0xb605fba13df8ddb1908ea065ac4437e288f080474fa678bf218e662ab1469aa6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e31b65aa218b901cba41bd46cdb66a558261063ee4cbc57c260997667c81f\",\"dweb:/ipfs/QmNd1KJFPitCDEarhrP69rAoKnvPbTukmTZVrUnhT8ahoB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "contracts/GovernanceToken_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "contracts/GovernanceToken_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "contracts/GovernanceToken_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "contracts/GovernanceToken_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "contracts/GovernanceToken_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GovernanceToken_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GovernanceToken_flattened.sol\":{\"keccak256\":\"0xb605fba13df8ddb1908ea065ac4437e288f080474fa678bf218e662ab1469aa6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e31b65aa218b901cba41bd46cdb66a558261063ee4cbc57c260997667c81f\",\"dweb:/ipfs/QmNd1KJFPitCDEarhrP69rAoKnvPbTukmTZVrUnhT8ahoB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GovernanceToken_flattened.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GovernanceToken_flattened.sol\":{\"keccak256\":\"0xb605fba13df8ddb1908ea065ac4437e288f080474fa678bf218e662ab1469aa6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e31b65aa218b901cba41bd46cdb66a558261063ee4cbc57c260997667c81f\",\"dweb:/ipfs/QmNd1KJFPitCDEarhrP69rAoKnvPbTukmTZVrUnhT8ahoB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GovernanceToken_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GovernanceToken_flattened.sol\":{\"keccak256\":\"0xb605fba13df8ddb1908ea065ac4437e288f080474fa678bf218e662ab1469aa6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e31b65aa218b901cba41bd46cdb66a558261063ee4cbc57c260997667c81f\",\"dweb:/ipfs/QmNd1KJFPitCDEarhrP69rAoKnvPbTukmTZVrUnhT8ahoB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GovernanceToken_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GovernanceToken_flattened.sol\":{\"keccak256\":\"0xb605fba13df8ddb1908ea065ac4437e288f080474fa678bf218e662ab1469aa6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e31b65aa218b901cba41bd46cdb66a558261063ee4cbc57c260997667c81f\",\"dweb:/ipfs/QmNd1KJFPitCDEarhrP69rAoKnvPbTukmTZVrUnhT8ahoB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GovernanceToken_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GovernanceToken_flattened.sol\":{\"keccak256\":\"0xb605fba13df8ddb1908ea065ac4437e288f080474fa678bf218e662ab1469aa6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e31b65aa218b901cba41bd46cdb66a558261063ee4cbc57c260997667c81f\",\"dweb:/ipfs/QmNd1KJFPitCDEarhrP69rAoKnvPbTukmTZVrUnhT8ahoB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GovernanceToken_flattened.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GovernanceToken_flattened.sol\":{\"keccak256\":\"0xb605fba13df8ddb1908ea065ac4437e288f080474fa678bf218e662ab1469aa6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e31b65aa218b901cba41bd46cdb66a558261063ee4cbc57c260997667c81f\",\"dweb:/ipfs/QmNd1KJFPitCDEarhrP69rAoKnvPbTukmTZVrUnhT8ahoB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 777,
								"contract": "contracts/GovernanceToken_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/GovernanceToken_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/GovernanceToken_flattened.sol",
					"exportedSymbols": {
						"Context": [
							129
						],
						"DAOToken": [
							959
						],
						"ERC20": [
							771
						],
						"IERC1155Errors": [
							265
						],
						"IERC20": [
							77
						],
						"IERC20Errors": [
							170
						],
						"IERC20Metadata": [
							100
						],
						"IERC721Errors": [
							218
						],
						"Ownable": [
							916
						]
					},
					"id": 960,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "165:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "190:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "272:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "285:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "454:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "479:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "463:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "463:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "501:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "485:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "505:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "462:57:0"
									},
									"src": "448:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "526:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "685:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "710:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "694:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "733:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "717:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "750:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "742:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "742:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:63:0"
									},
									"src": "679:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "763:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "842:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "853:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "879:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:9:0"
									},
									"scope": 77,
									"src": "833:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "894:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "997:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "989:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1029:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1028:9:0"
									},
									"scope": 77,
									"src": "970:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1044:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1271:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1288:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1280:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1280:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1300:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1292:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1279:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1325:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1325:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:6:0"
									},
									"scope": 77,
									"src": "1262:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1337:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1615:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1633:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1625:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1625:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1648:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1640:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1640:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1624:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1680:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1679:9:0"
									},
									"scope": 77,
									"src": "1606:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1695:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2376:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2392:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2384:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2409:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2401:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2383:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2434:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2434:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2433:6:0"
									},
									"scope": 77,
									"src": "2367:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2446:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2757:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2778:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2770:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2792:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2784:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2804:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2796:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2829:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2829:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2828:6:0"
									},
									"scope": 77,
									"src": "2748:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 960,
							"src": "262:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3009:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nameLocations": [
											"3151:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3151:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3151:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3035:87:0",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3133:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3164:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3232:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3236:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3262:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3262:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:15:0"
									},
									"scope": 100,
									"src": "3223:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3283:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3353:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3359:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3385:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3385:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3384:15:0"
									},
									"scope": 100,
									"src": "3344:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3406:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3485:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3493:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3519:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3519:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3518:7:0"
									},
									"scope": 100,
									"src": "3476:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 960,
							"src": "3123:405:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3652:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3677:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 129,
							"linearizedBaseContracts": [
								129
							],
							"name": "Context",
							"nameLocation": "4192:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4268:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4285:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4289:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4285:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4278:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4215:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4225:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4259:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4258:9:0"
									},
									"scope": 129,
									"src": "4206:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4375:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4392:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4396:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4392:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4385:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4317:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4325:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4359:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4359:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4358:16:0"
									},
									"scope": 129,
									"src": "4308:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "4485:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4502:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 124,
												"id": 126,
												"nodeType": "Return",
												"src": "4495:8:0"
											}
										]
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "4422:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4442:2:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4476:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4476:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4475:9:0"
									},
									"scope": 129,
									"src": "4413:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 960,
							"src": "4174:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4659:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 131,
								"nodeType": "StructuredDocumentation",
								"src": "4684:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "IERC20Errors",
							"nameLocation": "4836:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4855:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 140,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "5175:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5208:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5200:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5200:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5224:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5216:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5199:49:0"
									},
									"src": "5169:80:0"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "5255:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 145,
									"name": "ERC20InvalidSender",
									"nameLocation": "5418:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5445:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5437:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5437:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5436:16:0"
									},
									"src": "5412:41:0"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5459:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 150,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "5629:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5658:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5650:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5650:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5649:18:0"
									},
									"src": "5623:45:0"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5674:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 159,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "6030:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6065:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6057:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "6082:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6074:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6074:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6101:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6093:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6093:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6056:52:0"
									},
									"src": "6024:85:0"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "6115:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 164,
									"name": "ERC20InvalidApprover",
									"nameLocation": "6300:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6329:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "6321:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6321:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6320:18:0"
									},
									"src": "6294:45:0"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "6345:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 169,
									"name": "ERC20InvalidSpender",
									"nameLocation": "6551:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6579:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "6571:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6571:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6570:17:0"
									},
									"src": "6545:43:0"
								}
							],
							"scope": 960,
							"src": "4826:1764:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "6592:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 218,
							"linearizedBaseContracts": [
								218
							],
							"name": "IERC721Errors",
							"nameLocation": "6746:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "6766:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 176,
									"name": "ERC721InvalidOwner",
									"nameLocation": "6996:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7023:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "7015:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7015:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7014:15:0"
									},
									"src": "6990:40:0"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "7036:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 181,
									"name": "ERC721NonexistentToken",
									"nameLocation": "7179:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7210:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "7202:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7202:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7201:17:0"
									},
									"src": "7173:46:0"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "7225:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 190,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "7525:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7554:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7546:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7546:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7570:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7562:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7587:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7579:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7579:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7545:48:0"
									},
									"src": "7519:75:0"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "7600:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 195,
									"name": "ERC721InvalidSender",
									"nameLocation": "7763:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7791:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "7783:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7783:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7782:16:0"
									},
									"src": "7757:42:0"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "7805:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 200,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "7975:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "8005:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "7997:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7996:18:0"
									},
									"src": "7969:46:0"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "8021:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 207,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "8279:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8314:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8306:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8332:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8324:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8324:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8305:35:0"
									},
									"src": "8273:68:0"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "8347:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 212,
									"name": "ERC721InvalidApprover",
									"nameLocation": "8532:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "8562:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8554:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8554:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8553:18:0"
									},
									"src": "8526:46:0"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "8578:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 217,
									"name": "ERC721InvalidOperator",
									"nameLocation": "8786:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8816:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "8808:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8808:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8807:18:0"
									},
									"src": "8780:46:0"
								}
							],
							"scope": 960,
							"src": "6736:2092:0",
							"usedErrors": [
								176,
								181,
								190,
								195,
								200,
								207,
								212,
								217
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 219,
								"nodeType": "StructuredDocumentation",
								"src": "8830:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "IERC1155Errors",
							"nameLocation": "8986:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "9007:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 230,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "9379:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9414:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9406:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9406:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "9430:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9422:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9422:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "9447:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9439:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9439:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9463:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9455:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9455:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9405:66:0"
									},
									"src": "9373:99:0"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "9478:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 235,
									"name": "ERC1155InvalidSender",
									"nameLocation": "9641:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9670:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "9662:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9662:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9661:16:0"
									},
									"src": "9635:43:0"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "9684:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 240,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "9854:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "9885:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "9877:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9877:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9876:18:0"
									},
									"src": "9848:47:0"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "9901:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 247,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "10168:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10205:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10197:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10223:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10215:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10215:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10196:33:0"
									},
									"src": "10162:68:0"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "10236:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 252,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "10421:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "10452:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "10444:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10444:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10443:18:0"
									},
									"src": "10415:47:0"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "10468:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 257,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "10676:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10707:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "10699:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10698:18:0"
									},
									"src": "10670:47:0"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "10723:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 264,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "11014:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "11048:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11040:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11040:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "11067:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11059:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11059:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11039:41:0"
									},
									"src": "11008:73:0"
								}
							],
							"scope": 960,
							"src": "8976:2107:0",
							"usedErrors": [
								230,
								235,
								240,
								247,
								252,
								257,
								264
							],
							"usedEvents": []
						},
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "11215:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 268,
										"name": "Context",
										"nameLocations": [
											"12029:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "12029:7:0"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "12029:7:0"
								},
								{
									"baseName": {
										"id": 270,
										"name": "IERC20",
										"nameLocations": [
											"12038:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "12038:6:0"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "12038:6:0"
								},
								{
									"baseName": {
										"id": 272,
										"name": "IERC20Metadata",
										"nameLocations": [
											"12046:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "12046:14:0"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "12046:14:0"
								},
								{
									"baseName": {
										"id": 274,
										"name": "IERC20Errors",
										"nameLocations": [
											"12062:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "12062:12:0"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "12062:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 267,
								"nodeType": "StructuredDocumentation",
								"src": "11244:757:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 771,
							"linearizedBaseContracts": [
								771,
								170,
								100,
								77,
								129
							],
							"name": "ERC20",
							"nameLocation": "12020:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12125:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12081:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 278,
										"keyName": "account",
										"keyNameLocation": "12097:7:0",
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12089:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12081:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 277,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12108:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12213:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12141:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 284,
										"keyName": "account",
										"keyNameLocation": "12157:7:0",
										"keyType": {
											"id": 280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12149:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12141:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 283,
											"keyName": "spender",
											"keyNameLocation": "12184:7:0",
											"keyType": {
												"id": 281,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12176:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12168:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 282,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12195:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12247:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12231:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12231:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 289,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12281:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12266:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 288,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12266:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 291,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12307:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12292:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 290,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12292:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "12553:57:0",
										"statements": [
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "12563:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "12571:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12563:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "12563:13:0"
											},
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "12586:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 304,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "12596:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12586:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "12586:17:0"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "12321:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 308,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "12523:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12509:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 293,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12509:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "12544:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12530:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12530:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12508:44:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12553:0:0"
									},
									"scope": 771,
									"src": "12497:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "12735:29:0",
										"statements": [
											{
												"expression": {
													"id": 314,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "12752:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 313,
												"id": 315,
												"nodeType": "Return",
												"src": "12745:12:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "12616:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12684:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12688:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "12720:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12720:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12719:15:0"
									},
									"scope": 771,
									"src": "12675:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "12939:31:0",
										"statements": [
											{
												"expression": {
													"id": 323,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "12956:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 322,
												"id": 324,
												"nodeType": "Return",
												"src": "12949:14:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "12770:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "12886:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12892:2:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "12924:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12924:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12923:15:0"
									},
									"scope": 771,
									"src": "12877:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "13659:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13676:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 331,
												"id": 333,
												"nodeType": "Return",
												"src": "13669:9:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "12976:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13612:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13620:2:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "13652:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 329,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13652:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13651:7:0"
									},
									"scope": 771,
									"src": "13603:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "13806:36:0",
										"statements": [
											{
												"expression": {
													"id": 341,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "13823:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 342,
												"nodeType": "Return",
												"src": "13816:19:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "13691:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13754:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13765:2:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "13797:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13797:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13796:9:0"
									},
									"scope": 771,
									"src": "13745:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "13974:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 352,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "13991:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "14001:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13991:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 355,
												"nodeType": "Return",
												"src": "13984:25:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "13848:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13909:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13927:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "13919:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13919:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13918:17:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "13965:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13965:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13964:9:0"
									},
									"scope": 771,
									"src": "13900:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "14286:103:0",
										"statements": [
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14304:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "14296:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 367,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14296:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 369,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14312:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14312:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14296:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "14344:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "14351:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "14355:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 372,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "14334:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14334:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "14334:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14378:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 366,
												"id": 379,
												"nodeType": "Return",
												"src": "14371:11:0"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "14022:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14220:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14237:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14229:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14229:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14249:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14241:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14241:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14228:27:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14280:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14280:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14279:6:0"
									},
									"scope": 771,
									"src": "14211:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "14536:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 391,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "14553:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 393,
														"indexExpression": {
															"id": 392,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "14565:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14553:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 395,
													"indexExpression": {
														"id": 394,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "14572:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14553:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 396,
												"nodeType": "Return",
												"src": "14546:34:0"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "14395:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14456:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14474:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14466:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14489:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14481:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14481:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14465:32:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14527:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14526:9:0"
									},
									"scope": 771,
									"src": "14447:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "14973:107:0",
										"statements": [
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14991:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "14983:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 408,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14983:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 410,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14999:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14999:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14983:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "15030:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "15037:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "15046:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 662,
														"src": "15021:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15021:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "15021:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15069:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 407,
												"id": 420,
												"nodeType": "Return",
												"src": "15062:11:0"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "14593:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "14903:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14919:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14911:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14911:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14936:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14928:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14928:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14910:32:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14967:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14967:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14966:6:0"
									},
									"scope": 771,
									"src": "14894:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "15765:151:0",
										"statements": [
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "15783:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "15775:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 434,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15775:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 436,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "15793:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15793:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15775:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15831:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "15837:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "15846:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "15815:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15815:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "15815:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15872:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "15878:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "15882:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "15862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15862:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "15862:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15905:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 433,
												"id": 452,
												"nodeType": "Return",
												"src": "15898:11:0"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "15086:581:0",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15681:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15702:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15694:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15694:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15716:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15708:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15708:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15728:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15720:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15693:41:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15759:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 431,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15759:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15758:6:0"
									},
									"scope": 771,
									"src": "15672:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "16358:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "16372:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16388:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16380:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16380:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16380:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16372:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "16368:86:0",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "16392:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16440:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16432:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 471,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16432:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16432:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 470,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "16413:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16413:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 476,
															"nodeType": "RevertStatement",
															"src": "16406:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 479,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "16467:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16481:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16473:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16473:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16473:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16467:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "16463:86:0",
												"trueBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "16485:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16535:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16527:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 486,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16527:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16527:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 485,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "16506:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16506:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 491,
															"nodeType": "RevertStatement",
															"src": "16499:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 495,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "16566:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "16572:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "16576:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "16558:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16558:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "16558:24:0"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "15922:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16298:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16316:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16308:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16330:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16322:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16322:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16342:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16334:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16334:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16307:41:0"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16358:0:0"
									},
									"scope": 771,
									"src": "16289:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "16979:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 511,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "16993:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17009:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17001:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 512,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17001:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17001:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16993:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "17167:362:0",
													"statements": [
														{
															"assignments": [
																523
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 523,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17189:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 548,
																	"src": "17181:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 522,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17181:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 527,
															"initialValue": {
																"baseExpression": {
																	"id": 524,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "17203:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 526,
																"indexExpression": {
																	"id": 525,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "17213:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17203:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17181:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 528,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "17236:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17250:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17236:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 538,
															"nodeType": "IfStatement",
															"src": "17232:115:0",
															"trueBody": {
																"id": 537,
																"nodeType": "Block",
																"src": "17257:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 532,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "17307:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 533,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 523,
																					"src": "17313:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 534,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 508,
																					"src": "17326:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 531,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 140,
																				"src": "17282:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17282:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 536,
																		"nodeType": "RevertStatement",
																		"src": "17275:57:0"
																	}
																]
															}
														},
														{
															"id": 547,
															"nodeType": "UncheckedBlock",
															"src": "17360:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 539,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17467:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 541,
																			"indexExpression": {
																				"id": 540,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "17477:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17467:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 542,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "17485:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 543,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "17499:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17485:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17467:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 546,
																	"nodeType": "ExpressionStatement",
																	"src": "17467:37:0"
																}
															]
														}
													]
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "16989:540:0",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "17013:148:0",
													"statements": [
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 517,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "17129:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17145:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17129:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "17129:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "17543:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17557:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17549:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 551,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17549:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17549:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17543:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "17758:206:0",
													"statements": [
														{
															"id": 568,
															"nodeType": "UncheckedBlock",
															"src": "17772:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 562,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17917:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 564,
																			"indexExpression": {
																				"id": 563,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "17927:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17917:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 565,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17934:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17917:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 567,
																	"nodeType": "ExpressionStatement",
																	"src": "17917:22:0"
																}
															]
														}
													]
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "17539:425:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "17561:191:0",
													"statements": [
														{
															"id": 560,
															"nodeType": "UncheckedBlock",
															"src": "17575:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 556,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "17706:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17722:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17706:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 559,
																	"nodeType": "ExpressionStatement",
																	"src": "17706:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "17988:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "17994:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "17998:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "17979:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17979:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "EmitStatement",
												"src": "17974:30:0"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "16595:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "16913:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16929:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16921:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16921:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16943:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16935:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16935:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16955:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16947:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16947:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16920:41:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16979:0:0"
									},
									"scope": 771,
									"src": "16904:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "18410:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 586,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "18424:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18443:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18435:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 587,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18435:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18435:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18424:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "18420:91:0",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "18447:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18497:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18489:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 593,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18489:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18489:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "18468:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18468:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 598,
															"nodeType": "RevertStatement",
															"src": "18461:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18536:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18528:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18528:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18528:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "18540:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "18549:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "18520:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18520:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "18520:35:0"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "18017:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18363:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18377:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18369:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18369:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18394:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18386:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18386:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18368:32:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18410:0:0"
									},
									"scope": 771,
									"src": "18354:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "18936:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "18950:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18969:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18961:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 620,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18961:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18961:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18950:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "18946:89:0",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "18973:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19021:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19013:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 626,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "19013:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19013:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 625,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "18994:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18994:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "18987:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "19052:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19069:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19061:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 636,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19061:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19061:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "19073:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 634,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "19044:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19044:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "19044:35:0"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "18568:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "18889:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18903:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "18895:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18895:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18920:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "18912:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18894:32:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18936:0:0"
									},
									"scope": 771,
									"src": "18880:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "19696:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "19715:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "19722:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "19731:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19738:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 654,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 722,
														"src": "19706:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19706:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "19706:37:0"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "19092:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19631:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19648:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19640:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19640:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19663:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19655:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19655:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19680:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19672:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19639:47:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19696:0:0"
									},
									"scope": 771,
									"src": "19622:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "20695:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 674,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "20709:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20726:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20718:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 675,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20718:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20718:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20709:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "20705:89:0",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "20730:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20780:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20772:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 681,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20772:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20772:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 680,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "20751:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20751:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 686,
															"nodeType": "RevertStatement",
															"src": "20744:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "20807:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20826:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20818:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 690,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20818:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20818:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20807:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "20803:90:0",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "20830:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20879:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20871:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 696,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20871:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20871:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 695,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "20851:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20851:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 701,
															"nodeType": "RevertStatement",
															"src": "20844:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 704,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "20902:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 707,
															"indexExpression": {
																"id": 705,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "20914:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20902:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 708,
														"indexExpression": {
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "20921:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20902:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 709,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "20932:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20902:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "20902:35:0"
											},
											{
												"condition": {
													"id": 712,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 671,
													"src": "20951:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 720,
												"nodeType": "IfStatement",
												"src": "20947:76:0",
												"trueBody": {
													"id": 719,
													"nodeType": "Block",
													"src": "20962:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 714,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "20990:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 715,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "20997:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 716,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "21006:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 713,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "20981:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20981:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 718,
															"nodeType": "EmitStatement",
															"src": "20976:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "19756:836:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20606:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20623:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20615:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20615:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20638:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20630:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20630:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20655:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20647:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "20667:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20662:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20662:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20614:63:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20695:0:0"
									},
									"scope": 771,
									"src": "20597:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "21400:387:0",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "21418:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "21410:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21410:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [
														{
															"id": 735,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "21447:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "21454:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 734,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "21437:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21437:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21410:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "21476:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21500:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 741,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21500:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 740,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21495:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21495:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "21509:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "21495:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21476:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 768,
												"nodeType": "IfStatement",
												"src": "21472:309:0",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "21514:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 746,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "21532:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 747,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "21551:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21532:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 756,
															"nodeType": "IfStatement",
															"src": "21528:130:0",
															"trueBody": {
																"id": 755,
																"nodeType": "Block",
																"src": "21558:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 750,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 727,
																					"src": "21610:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 751,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21619:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 752,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21637:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 749,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "21583:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21583:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 754,
																		"nodeType": "RevertStatement",
																		"src": "21576:67:0"
																	}
																]
															}
														},
														{
															"id": 766,
															"nodeType": "UncheckedBlock",
															"src": "21671:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 758,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 725,
																				"src": "21708:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 759,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 727,
																				"src": "21715:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 760,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21724:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 761,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21743:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21724:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21750:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 757,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				662,
																				722
																			],
																			"referencedDeclaration": 722,
																			"src": "21699:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21699:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 765,
																	"nodeType": "ExpressionStatement",
																	"src": "21699:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "21035:271:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21320:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21344:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21336:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21336:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21359:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21351:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21351:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21376:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21368:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21335:47:0"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21400:0:0"
									},
									"scope": 771,
									"src": "21311:476:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 960,
							"src": "12002:9787:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 772,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "21915:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 774,
										"name": "Context",
										"nameLocations": [
											"22458:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "22458:7:0"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "22458:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 773,
								"nodeType": "StructuredDocumentation",
								"src": "21941:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 916,
							"linearizedBaseContracts": [
								916,
								129
							],
							"name": "Ownable",
							"nameLocation": "22447:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 777,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "22488:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 916,
									"src": "22472:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 776,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "22472:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "22501:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 782,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "22597:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22632:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "22624:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22624:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22623:17:0"
									},
									"src": "22591:50:0"
								},
								{
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "22647:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 787,
									"name": "OwnableInvalidOwner",
									"nameLocation": "22740:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22768:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "22760:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22759:15:0"
									},
									"src": "22734:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 793,
									"name": "OwnershipTransferred",
									"nameLocation": "22787:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "22824:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "22808:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22808:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "22855:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "22839:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22839:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22807:57:0"
									},
									"src": "22781:84:0"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "23025:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 799,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "23039:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23063:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23055:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 800,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "23055:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23055:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23039:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "23035:95:0",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "23067:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 808,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23116:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "23108:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 806,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "23108:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23108:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 805,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "23088:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23088:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 811,
															"nodeType": "RevertStatement",
															"src": "23081:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 815,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "23158:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 814,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "23139:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23139:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "23139:32:0"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "22871:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 819,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "23011:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "23003:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23003:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23002:22:0"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23025:0:0"
									},
									"scope": 916,
									"src": "22991:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "23287:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 822,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "23297:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23297:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "23297:13:0"
											},
											{
												"id": 825,
												"nodeType": "PlaceholderStatement",
												"src": "23320:1:0"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "23184:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 827,
									"name": "onlyOwner",
									"nameLocation": "23275:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23284:2:0"
									},
									"src": "23266:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "23459:30:0",
										"statements": [
											{
												"expression": {
													"id": 833,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 777,
													"src": "23476:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 832,
												"id": 834,
												"nodeType": "Return",
												"src": "23469:13:0"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "23334:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "23413:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23418:2:0"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "23450:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23450:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23449:9:0"
									},
									"scope": 916,
									"src": "23404:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "23607:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 840,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "23621:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23621:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 842,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "23632:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23632:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23621:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 851,
												"nodeType": "IfStatement",
												"src": "23617:101:0",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "23646:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 846,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "23694:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23694:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 845,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "23667:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23667:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 849,
															"nodeType": "RevertStatement",
															"src": "23660:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "23495:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "23571:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23582:2:0"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23607:0:0"
									},
									"scope": 916,
									"src": "23562:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "24113:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24150:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24142:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 860,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24142:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24142:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 859,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "24123:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24123:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "24123:30:0"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "23730:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 857,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 856,
												"name": "onlyOwner",
												"nameLocations": [
													"24103:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "24103:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24103:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "24068:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24085:2:0"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24113:0:0"
									},
									"scope": 916,
									"src": "24059:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "24379:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "24393:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24413:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24405:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 876,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "24405:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24405:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24393:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 889,
												"nodeType": "IfStatement",
												"src": "24389:91:0",
												"trueBody": {
													"id": 888,
													"nodeType": "Block",
													"src": "24417:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24466:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "24458:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 882,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "24458:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24458:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 881,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "24438:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24438:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 887,
															"nodeType": "RevertStatement",
															"src": "24431:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 891,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "24508:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 890,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "24489:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24489:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "24489:28:0"
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "24166:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 873,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 872,
												"name": "onlyOwner",
												"nameLocations": [
													"24369:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "24369:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24369:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "24318:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "24344:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "24336:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24336:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24335:18:0"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24379:0:0"
									},
									"scope": 916,
									"src": "24309:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "24741:124:0",
										"statements": [
											{
												"assignments": [
													902
												],
												"declarations": [
													{
														"constant": false,
														"id": 902,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "24759:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "24751:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 901,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "24751:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 904,
												"initialValue": {
													"id": 903,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 777,
													"src": "24770:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24751:25:0"
											},
											{
												"expression": {
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 905,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "24786:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 906,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "24795:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24786:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "24786:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 910,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "24839:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 911,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "24849:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 909,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "24818:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24818:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "EmitStatement",
												"src": "24813:45:0"
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "24530:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "24687:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "24714:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "24706:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24705:18:0"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24741:0:0"
									},
									"scope": 916,
									"src": "24678:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 960,
							"src": "22429:2438:0",
							"usedErrors": [
								782,
								787
							],
							"usedEvents": [
								793
							]
						},
						{
							"id": 917,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "24910:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 918,
										"name": "ERC20",
										"nameLocations": [
											"24959:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "24959:5:0"
									},
									"id": 919,
									"nodeType": "InheritanceSpecifier",
									"src": "24959:5:0"
								},
								{
									"baseName": {
										"id": 920,
										"name": "Ownable",
										"nameLocations": [
											"24966:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 916,
										"src": "24966:7:0"
									},
									"id": 921,
									"nodeType": "InheritanceSpecifier",
									"src": "24966:7:0"
								}
							],
							"canonicalName": "DAOToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 959,
							"linearizedBaseContracts": [
								959,
								916,
								771,
								170,
								100,
								77,
								129
							],
							"name": "DAOToken",
							"nameLocation": "24947:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "25090:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 934,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "25105:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030303030",
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25119:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000_by_1",
																	"typeString": "int_const 1000000"
																},
																"value": "1000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25129:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25133:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "25129:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "25119:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															}
														],
														"id": 933,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "25099:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25099:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "25099:37:0"
											}
										]
									},
									"id": 943,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "44414f20476f7665726e616e636520546f6b656e",
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25026:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_14cf85cb8d05d998f42abb3a2b22fb5f890d5c40b086cea48f23d785bd2641b2",
														"typeString": "literal_string \"DAO Governance Token\""
													},
													"value": "DAO Governance Token"
												},
												{
													"hexValue": "44414f47",
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25050:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_707919236e27785ea0baf415da494758e45f27f3bc6283b7b2d6512838b60c03",
														"typeString": "literal_string \"DAOG\""
													},
													"value": "DAOG"
												}
											],
											"id": 928,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 925,
												"name": "ERC20",
												"nameLocations": [
													"25020:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 771,
												"src": "25020:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25020:37:0"
										},
										{
											"arguments": [
												{
													"id": 930,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 923,
													"src": "25073:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 931,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 929,
												"name": "Ownable",
												"nameLocations": [
													"25065:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 916,
												"src": "25065:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25065:21:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "24999:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "24991:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24991:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24990:22:0"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25090:0:0"
									},
									"scope": 959,
									"src": "24979:197:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "25241:32:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 953,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "25256:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 954,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "25260:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 952,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "25250:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25250:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "25250:17:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 950,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 949,
												"name": "onlyOwner",
												"nameLocations": [
													"25231:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "25231:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25231:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "25191:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25204:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "25196:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25196:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "25216:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "25208:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25208:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25195:28:0"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25241:0:0"
									},
									"scope": 959,
									"src": "25182:91:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 960,
							"src": "24938:337:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169,
								782,
								787
							],
							"usedEvents": [
								11,
								20,
								793
							]
						}
					],
					"src": "165:25111:0"
				},
				"id": 0
			}
		}
	}
}