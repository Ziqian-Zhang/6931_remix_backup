{
	"id": "447d0f4603f7a45f8bb06cdec3d380d3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TreasuryDAO.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@chainlink/contracts/src/v0.8/AutomationCompatible.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n\ninterface IAaveLendingPool {\n   function deposit(address asset, uint256 amount, address onBehalfOf, uint16 referralCode) external;\n   function withdraw(address asset, uint256 amount, address to) external;\n}\n\n\ncontract TreasuryDAO is Ownable, AutomationCompatible {\n   struct Proposal {\n       address payable recipient;\n       uint256 amount;\n       uint256 votes;\n       uint256 endTime;\n       bool executed;\n       uint256 unlockTime;\n       mapping(address => bool) voted;\n   }\n\n\n   mapping(address => bool) public members;\n   Proposal[] public proposals;\n   IERC20 public governanceToken;\n   AggregatorV3Interface internal priceFeed;\n   IAaveLendingPool public lendingPool;\n   uint256 public minVoteDuration = 1 days;\n\n\n   event ProposalCreated(uint proposalId, address recipient, uint256 amount);\n   event Voted(uint proposalId, address voter, uint256 weight);\n   event ProposalExecuted(uint proposalId);\n   event FundsReleased(uint proposalId);\n\n\n   constructor(address tokenAddress, address priceFeedAddress, address lendingPoolAddress, address initialOwner)\n       Ownable(initialOwner)\n   {\n       governanceToken = IERC20(tokenAddress);\n       priceFeed = AggregatorV3Interface(priceFeedAddress);\n       lendingPool = IAaveLendingPool(lendingPoolAddress);\n       members[initialOwner] = true;\n   }\n\n\n   modifier onlyMember() {\n       require(members[msg.sender], \"Not a DAO member\");\n       _;\n   }\n\n\n   function addMember(address member) public onlyOwner {\n       members[member] = true;\n   }\n\n\n   function proposeFunding(address payable recipient, uint256 amount) public onlyMember {\n       require(address(this).balance >= amount, \"Insufficient treasury balance\");\n       proposals.push();\n       Proposal storage newProposal = proposals[proposals.length - 1];\n       newProposal.recipient = recipient;\n       newProposal.amount = amount;\n       newProposal.votes = 0;\n       newProposal.endTime = block.timestamp + minVoteDuration;\n       newProposal.executed = false;\n\n\n       emit ProposalCreated(proposals.length - 1, recipient, amount);\n   }\n\n\n   function vote(uint proposalId) public onlyMember {\n       Proposal storage proposal = proposals[proposalId];\n       require(!proposal.voted[msg.sender], \"Already voted\");\n       require(block.timestamp < proposal.endTime, \"Voting period ended\");\n\n\n       uint256 voterBalance = governanceToken.balanceOf(msg.sender);\n       require(voterBalance > 0, \"Must hold governance tokens to vote\");\n\n\n       proposal.votes += voterBalance;\n       proposal.voted[msg.sender] = true;\n\n\n       emit Voted(proposalId, msg.sender, voterBalance);\n   }\n\n\n   function executeProposal(uint proposalId) public {\n       Proposal storage proposal = proposals[proposalId];\n       require(proposal.votes >= 500 * 10**18, \"Not enough votes (500 tokens required)\");\n       require(!proposal.executed, \"Already executed\");\n       require(block.timestamp >= proposal.endTime, \"Voting period not ended\");\n       require(getETHPrice() > 1500, \"ETH price too low\");\n\n\n       proposal.executed = true;\n       proposal.unlockTime = block.timestamp + 48 hours;\n\n\n       emit ProposalExecuted(proposalId);\n   }\n\n\n   function releaseFunds(uint proposalId) public {\n       Proposal storage proposal = proposals[proposalId];\n       require(block.timestamp >= proposal.unlockTime, \"Funds locked\");\n       proposal.recipient.transfer(proposal.amount);\n\n\n       emit FundsReleased(proposalId);\n   }\n\n\n   function getETHPrice() public view returns (uint256) {\n       (, int price, , , ) = priceFeed.latestRoundData();\n       return uint256(price) / 1e8; // Convert price to USD\n   }\n\n\n   function checkUpkeep(bytes calldata /* checkData */) external view override returns (bool upkeepNeeded, bytes memory performData) {\n       for (uint i = 0; i < proposals.length; i++) {\n           if (!proposals[i].executed && proposals[i].votes >= 500 * 10**18 && block.timestamp >= proposals[i].endTime) {\n               return (true, abi.encode(i));\n           }\n       }\n       return (false, \"\");\n   }\n\n\n   function performUpkeep(bytes calldata performData) external override {\n       uint proposalId = abi.decode(performData, (uint));\n       executeProposal(proposalId);\n   }\n\n\n   function depositToAave(uint256 amount) external onlyOwner {\n       lendingPool.deposit(address(this), amount, address(this), 0);\n   }\n\n\n   function withdrawFromAave(uint256 amount) external onlyOwner {\n       lendingPool.withdraw(address(this), amount, address(this));\n   }\n\n\n   function deposit() public payable {}\n\n\n   function getBalance() public view returns (uint256) {\n       return address(this).balance;\n   }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@chainlink/contracts/src/v0.8/AutomationCompatible.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./AutomationBase.sol\";\nimport \"./interfaces/AutomationCompatibleInterface.sol\";\n\nabstract contract AutomationCompatible is AutomationBase, AutomationCompatibleInterface {}\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AutomationCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(bytes calldata performData) external;\n}\n"
			},
			"@chainlink/contracts/src/v0.8/AutomationBase.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract AutomationBase {\n  error OnlySimulatedBackend();\n\n  /**\n   * @notice method that allows it to be simulated via eth_call by checking that\n   * the sender is the zero address.\n   */\n  function preventExecution() internal view {\n    if (tx.origin != address(0)) {\n      revert OnlySimulatedBackend();\n    }\n  }\n\n  /**\n   * @notice modifier that allows it to be simulated via eth_call by checking\n   * that the sender is the zero address.\n   */\n  modifier cannotExecute() {\n    preventExecution();\n    _;\n  }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/AutomationBase.sol": {
				"AutomationBase": {
					"abi": [
						{
							"inputs": [],
							"name": "OnlySimulatedBackend",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@chainlink/contracts/src/v0.8/AutomationBase.sol\":57:572  contract AutomationBase {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@chainlink/contracts/src/v0.8/AutomationBase.sol\":57:572  contract AutomationBase {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122035995cccb59cb92c2cb3ae825da4afc12ab3ef2ffaac145dabfcd186caab322264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea264697066735822122035995cccb59cb92c2cb3ae825da4afc12ab3ef2ffaac145dabfcd186caab322264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD SWAP10 TLOAD 0xCC 0xB5 SWAP13 0xB9 0x2C 0x2C 0xB3 0xAE DUP3 TSTORE LOG4 0xAF 0xC1 0x2A 0xB3 0xEF 0x2F STATICCALL 0xAC EQ TSTORE 0xAB 0xFC 0xD1 DUP7 0xCA 0xAB ORIGIN 0x22 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "57:515:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea264697066735822122035995cccb59cb92c2cb3ae825da4afc12ab3ef2ffaac145dabfcd186caab322264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD SWAP10 TLOAD 0xCC 0xB5 SWAP13 0xB9 0x2C 0x2C 0xB3 0xAE DUP3 TSTORE LOG4 0xAF 0xC1 0x2A 0xB3 0xEF 0x2F STATICCALL 0xAC EQ TSTORE 0xAB 0xFC 0xD1 DUP7 0xCA 0xAB ORIGIN 0x22 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "57:515:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							},
							"internal": {
								"preventExecution()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 572,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 572,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 572,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 572,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 572,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 572,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 572,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 572,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 572,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 572,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 572,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 572,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 572,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 572,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 572,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 572,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 572,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 572,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 572,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 572,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 572,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122035995cccb59cb92c2cb3ae825da4afc12ab3ef2ffaac145dabfcd186caab322264736f6c634300081a0033",
									".code": [
										{
											"begin": 57,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 572,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/AutomationBase.sol",
								"@chainlink/contracts/src/v0.8/AutomationCompatible.sol",
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/TreasuryDAO.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/AutomationBase.sol\":\"AutomationBase\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/AutomationBase.sol\":{\"keccak256\":\"0x5d354afa1a97dffe66094397cdcbb0c14713cf3d609d88fd8f9891010e9a351a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3613ee132e1f05b3e23955db6a849966487fab8ea33e9bb70d6f038fc48c0608\",\"dweb:/ipfs/QmRgdumWFMX35vSrZpCCvXDTvRBVXRkexnxoZqqfnGisnZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/AutomationCompatible.sol": {
				"AutomationCompatible": {
					"abi": [
						{
							"inputs": [],
							"name": "OnlySimulatedBackend",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "checkData",
									"type": "bytes"
								}
							],
							"name": "checkUpkeep",
							"outputs": [
								{
									"internalType": "bool",
									"name": "upkeepNeeded",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"name": "performUpkeep",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"checkUpkeep(bytes)": {
								"details": "To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.",
								"params": {
									"checkData": "specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."
								},
								"returns": {
									"performData": "bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.",
									"upkeepNeeded": "boolean to indicate whether the keeper should call performUpkeep or not."
								}
							},
							"performUpkeep(bytes)": {
								"details": "The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.",
								"params": {
									"performData": "is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"checkUpkeep(bytes)": "6e04ff0d",
							"performUpkeep(bytes)": "4585e33b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/AutomationCompatible.sol\":\"AutomationCompatible\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/AutomationBase.sol\":{\"keccak256\":\"0x5d354afa1a97dffe66094397cdcbb0c14713cf3d609d88fd8f9891010e9a351a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3613ee132e1f05b3e23955db6a849966487fab8ea33e9bb70d6f038fc48c0608\",\"dweb:/ipfs/QmRgdumWFMX35vSrZpCCvXDTvRBVXRkexnxoZqqfnGisnZ\"]},\"@chainlink/contracts/src/v0.8/AutomationCompatible.sol\":{\"keccak256\":\"0x40e5ae0eff4edd0740c1b5590d09c344f84dee031e82d5294563e99603774f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24a134c3bea2e8a6ed29f109e422a9bafb3f43523235188618cf016ed86fafc8\",\"dweb:/ipfs/QmPUGoVde38kbteT358jsskzh5spoJtUoaNZ8UJWVqP3im\"]},\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b738dba680a6fbc4afc85819743f13f5b7f4790ec8634c9894e1160327b11b6e\",\"dweb:/ipfs/Qmbv3euvQppeBm2g61khcJSRMZWi78xUWzbnjKAvDBnka4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"checkUpkeep(bytes)": {
								"notice": "method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."
							},
							"performUpkeep(bytes)": {
								"notice": "method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."
							}
						},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol": {
				"AutomationCompatibleInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "checkData",
									"type": "bytes"
								}
							],
							"name": "checkUpkeep",
							"outputs": [
								{
									"internalType": "bool",
									"name": "upkeepNeeded",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"name": "performUpkeep",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"checkUpkeep(bytes)": {
								"details": "To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.",
								"params": {
									"checkData": "specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."
								},
								"returns": {
									"performData": "bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.",
									"upkeepNeeded": "boolean to indicate whether the keeper should call performUpkeep or not."
								}
							},
							"performUpkeep(bytes)": {
								"details": "The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.",
								"params": {
									"performData": "is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"checkUpkeep(bytes)": "6e04ff0d",
							"performUpkeep(bytes)": "4585e33b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":\"AutomationCompatibleInterface\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b738dba680a6fbc4afc85819743f13f5b7f4790ec8634c9894e1160327b11b6e\",\"dweb:/ipfs/Qmbv3euvQppeBm2g61khcJSRMZWi78xUWzbnjKAvDBnka4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"checkUpkeep(bytes)": {
								"notice": "method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."
							},
							"performUpkeep(bytes)": {
								"notice": "method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."
							}
						},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 112,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/TreasuryDAO.sol": {
				"IAaveLendingPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit(address,uint256,address,uint16)": "e8eda9df",
							"withdraw(address,uint256,address)": "69328dec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TreasuryDAO.sol\":\"IAaveLendingPool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/AutomationBase.sol\":{\"keccak256\":\"0x5d354afa1a97dffe66094397cdcbb0c14713cf3d609d88fd8f9891010e9a351a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3613ee132e1f05b3e23955db6a849966487fab8ea33e9bb70d6f038fc48c0608\",\"dweb:/ipfs/QmRgdumWFMX35vSrZpCCvXDTvRBVXRkexnxoZqqfnGisnZ\"]},\"@chainlink/contracts/src/v0.8/AutomationCompatible.sol\":{\"keccak256\":\"0x40e5ae0eff4edd0740c1b5590d09c344f84dee031e82d5294563e99603774f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24a134c3bea2e8a6ed29f109e422a9bafb3f43523235188618cf016ed86fafc8\",\"dweb:/ipfs/QmPUGoVde38kbteT358jsskzh5spoJtUoaNZ8UJWVqP3im\"]},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b738dba680a6fbc4afc85819743f13f5b7f4790ec8634c9894e1160327b11b6e\",\"dweb:/ipfs/Qmbv3euvQppeBm2g61khcJSRMZWi78xUWzbnjKAvDBnka4\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/TreasuryDAO.sol\":{\"keccak256\":\"0x34d6adfd91d604132d8a3357bd8fa0672041c0dbb0ddd5450c30b8026d21818a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2459b2d5da40e126e88092c11bc6fa46656c1bf17681344420fe5c296b962a52\",\"dweb:/ipfs/QmSeZWqRWA72us4p1knJoNPzLLfuyn3VHprXEk1znyKjgj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TreasuryDAO": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "priceFeedAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "lendingPoolAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "OnlySimulatedBackend",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "FundsReleased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ProposalCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "ProposalExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "voter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								}
							],
							"name": "Voted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "addMember",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "checkUpkeep",
							"outputs": [
								{
									"internalType": "bool",
									"name": "upkeepNeeded",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositToAave",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "executeProposal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getETHPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governanceToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lendingPool",
							"outputs": [
								{
									"internalType": "contract IAaveLendingPool",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "members",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minVoteDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"name": "performUpkeep",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "proposals",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "votes",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "executed",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "unlockTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "proposeFunding",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "releaseFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawFromAave",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"performUpkeep(bytes)": {
								"details": "The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.",
								"params": {
									"performData": "is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/TreasuryDAO.sol\":522:4930  contract TreasuryDAO is Ownable, AutomationCompatible {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/TreasuryDAO.sol\":1028:1034  1 days */\n  0x015180\n    /* \"contracts/TreasuryDAO.sol\":995:1034  uint256 public minVoteDuration = 1 days */\n  0x06\n  sstore\n    /* \"contracts/TreasuryDAO.sol\":1270:1621  constructor(address tokenAddress, address priceFeedAddress, address lendingPoolAddress, address initialOwner)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/TreasuryDAO.sol\":1395:1407  initialOwner */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":811:862   */\n  mstore\n    /* \"#utility.yul\":784:802   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/TreasuryDAO.sol\":1421:1436  governanceToken */\n  0x03\n    /* \"contracts/TreasuryDAO.sol\":1421:1459  governanceToken = IERC20(tokenAddress) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap7\n  dup8\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/TreasuryDAO.sol\":1468:1477  priceFeed */\n  0x04\n    /* \"contracts/TreasuryDAO.sol\":1468:1519  priceFeed = AggregatorV3Interface(priceFeedAddress) */\n  dup1\n  sload\n  dup3\n  and\n  swap5\n  dup7\n  and\n  swap5\n  swap1\n  swap5\n  or\n  swap1\n  swap4\n  sstore\n    /* \"contracts/TreasuryDAO.sol\":1528:1539  lendingPool */\n  0x05\n    /* \"contracts/TreasuryDAO.sol\":1528:1578  lendingPool = IAaveLendingPool(lendingPoolAddress) */\n  dup1\n  sload\n  swap1\n  swap4\n  and\n  swap2\n  dup5\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/TreasuryDAO.sol\":1587:1608  members[initialOwner] */\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n  0x01\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n    /* \"contracts/TreasuryDAO.sol\":1587:1615  members[initialOwner] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/TreasuryDAO.sol\":522:4930  contract TreasuryDAO is Ownable, AutomationCompatible {... */\n  jump(tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_15:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_18:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:660   */\ntag_3:\n    /* \"#utility.yul\":293:299   */\n  0x00\n    /* \"#utility.yul\":301:307   */\n  dup1\n    /* \"#utility.yul\":309:315   */\n  0x00\n    /* \"#utility.yul\":317:323   */\n  dup1\n    /* \"#utility.yul\":370:373   */\n  0x80\n    /* \"#utility.yul\":358:367   */\n  dup6\n    /* \"#utility.yul\":349:356   */\n  dup8\n    /* \"#utility.yul\":345:368   */\n  sub\n    /* \"#utility.yul\":341:374   */\n  slt\n    /* \"#utility.yul\":338:391   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":387:388   */\n  0x00\n    /* \"#utility.yul\":384:385   */\n  dup1\n    /* \"#utility.yul\":377:389   */\n  revert\n    /* \"#utility.yul\":338:391   */\ntag_20:\n    /* \"#utility.yul\":410:450   */\n  tag_21\n    /* \"#utility.yul\":440:449   */\n  dup6\n    /* \"#utility.yul\":410:450   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":400:450   */\n  swap4\n  pop\n    /* \"#utility.yul\":469:518   */\n  tag_22\n    /* \"#utility.yul\":514:516   */\n  0x20\n    /* \"#utility.yul\":503:512   */\n  dup7\n    /* \"#utility.yul\":499:517   */\n  add\n    /* \"#utility.yul\":469:518   */\n  tag_15\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":459:518   */\n  swap3\n  pop\n    /* \"#utility.yul\":537:586   */\n  tag_23\n    /* \"#utility.yul\":582:584   */\n  0x40\n    /* \"#utility.yul\":571:580   */\n  dup7\n    /* \"#utility.yul\":567:585   */\n  add\n    /* \"#utility.yul\":537:586   */\n  tag_15\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":527:586   */\n  swap2\n  pop\n    /* \"#utility.yul\":605:654   */\n  tag_24\n    /* \"#utility.yul\":650:652   */\n  0x60\n    /* \"#utility.yul\":639:648   */\n  dup7\n    /* \"#utility.yul\":635:653   */\n  add\n    /* \"#utility.yul\":605:654   */\n  tag_15\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":595:654   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:660   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":665:868   */\ntag_16:\n    /* \"contracts/TreasuryDAO.sol\":522:4930  contract TreasuryDAO is Ownable, AutomationCompatible {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TreasuryDAO.sol\":522:4930  contract TreasuryDAO is Ownable, AutomationCompatible {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6e04ff0d\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xc00d2a8c\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xc00d2a8c\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xca6d56dc\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf96dae0a\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x6e04ff0d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa59a9973\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa607a8d9\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x237af348\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x237af348\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4585e33b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4d68282f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x688f237b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x68fd2d80\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x0121b93f\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x013cf08b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x08ae4b0c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0d61b519\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x12065fe0\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/TreasuryDAO.sol\":2379:2915  function vote(uint proposalId) public onlyMember {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"contracts/TreasuryDAO.sol\":844:871  Proposal[] public proposals */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n    tag_31:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":560:592   */\n      swap1\n      swap8\n      and\n        /* \"#utility.yul\":542:593   */\n      dup8\n      mstore\n        /* \"#utility.yul\":624:626   */\n      0x20\n        /* \"#utility.yul\":609:627   */\n      dup8\n      add\n        /* \"#utility.yul\":602:636   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":652:670   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":645:679   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":710:712   */\n      0x60\n        /* \"#utility.yul\":695:713   */\n      dup5\n      add\n        /* \"#utility.yul\":688:722   */\n      mstore\n        /* \"#utility.yul\":766:780   */\n      iszero\n        /* \"#utility.yul\":759:781   */\n      iszero\n        /* \"#utility.yul\":753:756   */\n      0x80\n        /* \"#utility.yul\":738:757   */\n      dup4\n      add\n        /* \"#utility.yul\":731:782   */\n      mstore\n        /* \"#utility.yul\":580:583   */\n      0xa0\n        /* \"#utility.yul\":798:817   */\n      dup3\n      add\n        /* \"#utility.yul\":791:826   */\n      mstore\n        /* \"#utility.yul\":529:532   */\n      0xc0\n        /* \"#utility.yul\":514:533   */\n      add\n        /* \"contracts/TreasuryDAO.sol\":844:871  Proposal[] public proposals */\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TreasuryDAO.sol\":800:839  mapping(address => bool) public members */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_37:\n      mload(0x40)\n        /* \"#utility.yul\":1390:1404   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1383:1405   */\n      iszero\n        /* \"#utility.yul\":1365:1406   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1353:1355   */\n      0x20\n        /* \"#utility.yul\":1338:1356   */\n      add\n        /* \"contracts/TreasuryDAO.sol\":800:839  mapping(address => bool) public members */\n      tag_34\n        /* \"#utility.yul\":1225:1412   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":2921:3455  function executeProposal(uint proposalId) public {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_26\n      tag_45\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n        /* \"contracts/TreasuryDAO.sol\":4833:4928  function getBalance() public view returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n        /* \"contracts/TreasuryDAO.sol\":4901:4922  address(this).balance */\n      selfbalance\n        /* \"contracts/TreasuryDAO.sol\":4833:4928  function getBalance() public view returns (uint256) {... */\n    tag_48:\n      mload(0x40)\n        /* \"#utility.yul\":1563:1588   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1551:1553   */\n      0x20\n        /* \"#utility.yul\":1536:1554   */\n      add\n        /* \"contracts/TreasuryDAO.sol\":4833:4928  function getBalance() public view returns (uint256) {... */\n      tag_34\n        /* \"#utility.yul\":1417:1594   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":1823:2373  function proposeFunding(address payable recipient, uint256 amount) public onlyMember {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_26\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n        /* \"contracts/TreasuryDAO.sol\":4337:4506  function performUpkeep(bytes calldata performData) external override {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_26\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"contracts/TreasuryDAO.sol\":3461:3737  function releaseFunds(uint proposalId) public {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_26\n      tag_64\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n        /* \"contracts/TreasuryDAO.sol\":4651:4785  function withdrawFromAave(uint256 amount) external onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_26\n      tag_68\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n        /* \"contracts/TreasuryDAO.sol\":4512:4645  function depositToAave(uint256 amount) external onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_26\n      tag_72\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"contracts/TreasuryDAO.sol\":3926:4331  function checkUpkeep(bytes calldata /* checkData */) external view override returns (bool upkeepNeeded, bytes memory performData) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      tag_76\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_34\n      swap3\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_26\n      tag_82\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_84:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3236:3268   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3218:3269   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3206:3208   */\n      0x20\n        /* \"#utility.yul\":3191:3209   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_34\n        /* \"#utility.yul\":3072:3275   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":955:990  IAaveLendingPool public lendingPool */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      sload(0x05)\n      tag_84\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/TreasuryDAO.sol\":3743:3920  function getETHPrice() public view returns (uint256) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_48\n      tag_95\n      jump\t// in\n        /* \"contracts/TreasuryDAO.sol\":995:1034  uint256 public minVoteDuration = 1 days */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      tag_48\n      sload(0x06)\n      dup2\n      jump\n        /* \"contracts/TreasuryDAO.sol\":1728:1817  function addMember(address member) public onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_26\n      tag_103\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_26\n      tag_109\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n        /* \"contracts/TreasuryDAO.sol\":876:905  IERC20 public governanceToken */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      sload(0x03)\n      tag_84\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/TreasuryDAO.sol\":2379:2915  function vote(uint proposalId) public onlyMember {... */\n    tag_29:\n        /* \"contracts/TreasuryDAO.sol\":1674:1684  msg.sender */\n      caller\n        /* \"contracts/TreasuryDAO.sol\":1666:1685  members[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":1666:1673  members */\n      0x01\n        /* \"contracts/TreasuryDAO.sol\":1666:1685  members[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/TreasuryDAO.sol\":1658:1706  require(members[msg.sender], \"Not a DAO member\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3936:3938   */\n      0x20\n        /* \"contracts/TreasuryDAO.sol\":1658:1706  require(members[msg.sender], \"Not a DAO member\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3918:3939   */\n      mstore\n        /* \"#utility.yul\":3975:3977   */\n      0x10\n        /* \"#utility.yul\":3955:3973   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3948:3978   */\n      mstore\n      shl(0x81, 0x2737ba1030902220a79036b2b6b132b9)\n        /* \"#utility.yul\":3994:4012   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3987:4033   */\n      mstore\n        /* \"#utility.yul\":4050:4068   */\n      0x64\n      add\n        /* \"contracts/TreasuryDAO.sol\":1658:1706  require(members[msg.sender], \"Not a DAO member\") */\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"contracts/TreasuryDAO.sol\":2437:2462  Proposal storage proposal */\n      0x00\n        /* \"contracts/TreasuryDAO.sol\":2465:2474  proposals */\n      0x02\n        /* \"contracts/TreasuryDAO.sol\":2475:2485  proposalId */\n      dup3\n        /* \"contracts/TreasuryDAO.sol\":2465:2486  proposals[proposalId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_122\n      jumpi\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/TreasuryDAO.sol\":2519:2529  msg.sender */\n      caller\n        /* \"contracts/TreasuryDAO.sol\":2504:2530  proposal.voted[msg.sender] */\n      dup5\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":2504:2518  proposal.voted */\n      0x06\n        /* \"contracts/TreasuryDAO.sol\":2465:2486  proposals[proposalId] */\n      0x07\n      swap1\n      swap4\n      mul\n      add\n        /* \"contracts/TreasuryDAO.sol\":2504:2518  proposal.voted */\n      swap2\n      dup3\n      add\n        /* \"contracts/TreasuryDAO.sol\":2504:2530  proposal.voted[msg.sender] */\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/TreasuryDAO.sol\":2465:2486  proposals[proposalId] */\n      swap1\n      swap2\n      pop\n        /* \"contracts/TreasuryDAO.sol\":2504:2530  proposal.voted[msg.sender] */\n      0xff\n      and\n        /* \"contracts/TreasuryDAO.sol\":2503:2530  !proposal.voted[msg.sender] */\n      iszero\n        /* \"contracts/TreasuryDAO.sol\":2495:2548  require(!proposal.voted[msg.sender], \"Already voted\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4413:4415   */\n      0x20\n        /* \"contracts/TreasuryDAO.sol\":2495:2548  require(!proposal.voted[msg.sender], \"Already voted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4395:4416   */\n      mstore\n        /* \"#utility.yul\":4452:4454   */\n      0x0d\n        /* \"#utility.yul\":4432:4450   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4425:4455   */\n      mstore\n      shl(0x9a, 0x105b1c9958591e481d9bdd1959)\n        /* \"#utility.yul\":4471:4489   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4464:4507   */\n      mstore\n        /* \"#utility.yul\":4524:4542   */\n      0x64\n      add\n        /* \"contracts/TreasuryDAO.sol\":2495:2548  require(!proposal.voted[msg.sender], \"Already voted\") */\n      tag_118\n        /* \"#utility.yul\":4211:4548   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":2495:2548  require(!proposal.voted[msg.sender], \"Already voted\") */\n    tag_125:\n        /* \"contracts/TreasuryDAO.sol\":2583:2591  proposal */\n      dup1\n        /* \"contracts/TreasuryDAO.sol\":2583:2599  proposal.endTime */\n      0x03\n      add\n      sload\n        /* \"contracts/TreasuryDAO.sol\":2565:2580  block.timestamp */\n      timestamp\n        /* \"contracts/TreasuryDAO.sol\":2565:2599  block.timestamp < proposal.endTime */\n      lt\n        /* \"contracts/TreasuryDAO.sol\":2557:2623  require(block.timestamp < proposal.endTime, \"Voting period ended\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4755:4757   */\n      0x20\n        /* \"contracts/TreasuryDAO.sol\":2557:2623  require(block.timestamp < proposal.endTime, \"Voting period ended\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4737:4758   */\n      mstore\n        /* \"#utility.yul\":4794:4796   */\n      0x13\n        /* \"#utility.yul\":4774:4792   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4767:4797   */\n      mstore\n      shl(0x6a, 0x159bdd1a5b99c81c195c9a5bd908195b991959)\n        /* \"#utility.yul\":4813:4831   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4806:4855   */\n      mstore\n        /* \"#utility.yul\":4872:4890   */\n      0x64\n      add\n        /* \"contracts/TreasuryDAO.sol\":2557:2623  require(block.timestamp < proposal.endTime, \"Voting period ended\") */\n      tag_118\n        /* \"#utility.yul\":4553:4896   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":2557:2623  require(block.timestamp < proposal.endTime, \"Voting period ended\") */\n    tag_128:\n        /* \"contracts/TreasuryDAO.sol\":2657:2672  governanceToken */\n      sload(0x03)\n        /* \"contracts/TreasuryDAO.sol\":2657:2694  governanceToken.balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":2683:2693  msg.sender */\n      caller\n        /* \"contracts/TreasuryDAO.sol\":2657:2694  governanceToken.balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3218:3269   */\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":2634:2654  uint256 voterBalance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/TreasuryDAO.sol\":2657:2672  governanceToken */\n      and\n      swap1\n        /* \"contracts/TreasuryDAO.sol\":2657:2682  governanceToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":3191:3209   */\n      0x24\n      add\n        /* \"contracts/TreasuryDAO.sol\":2657:2694  governanceToken.balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_133\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_133:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_134\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"contracts/TreasuryDAO.sol\":2634:2694  uint256 voterBalance = governanceToken.balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/TreasuryDAO.sol\":2726:2727  0 */\n      0x00\n        /* \"contracts/TreasuryDAO.sol\":2711:2723  voterBalance */\n      dup2\n        /* \"contracts/TreasuryDAO.sol\":2711:2727  voterBalance > 0 */\n      gt\n        /* \"contracts/TreasuryDAO.sol\":2703:2767  require(voterBalance > 0, \"Must hold governance tokens to vote\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5338:5340   */\n      0x20\n        /* \"contracts/TreasuryDAO.sol\":2703:2767  require(voterBalance > 0, \"Must hold governance tokens to vote\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5320:5341   */\n      mstore\n        /* \"#utility.yul\":5377:5379   */\n      0x23\n        /* \"#utility.yul\":5357:5375   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5350:5380   */\n      mstore\n        /* \"#utility.yul\":5416:5450   */\n      0x4d75737420686f6c6420676f7665726e616e636520746f6b656e7320746f2076\n        /* \"#utility.yul\":5396:5414   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5389:5451   */\n      mstore\n      shl(0xe8, 0x6f7465)\n        /* \"#utility.yul\":5467:5485   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5460:5493   */\n      mstore\n        /* \"#utility.yul\":5510:5529   */\n      0x84\n      add\n        /* \"contracts/TreasuryDAO.sol\":2703:2767  require(voterBalance > 0, \"Must hold governance tokens to vote\") */\n      tag_118\n        /* \"#utility.yul\":5136:5535   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":2703:2767  require(voterBalance > 0, \"Must hold governance tokens to vote\") */\n    tag_136:\n        /* \"contracts/TreasuryDAO.sol\":2796:2808  voterBalance */\n      dup1\n        /* \"contracts/TreasuryDAO.sol\":2778:2786  proposal */\n      dup3\n        /* \"contracts/TreasuryDAO.sol\":2778:2792  proposal.votes */\n      0x02\n      add\n      0x00\n        /* \"contracts/TreasuryDAO.sol\":2778:2808  proposal.votes += voterBalance */\n      dup3\n      dup3\n      sload\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/TreasuryDAO.sol\":2832:2842  msg.sender */\n      caller\n        /* \"contracts/TreasuryDAO.sol\":2817:2843  proposal.voted[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":2817:2831  proposal.voted */\n      0x06\n      dup5\n      add\n        /* \"contracts/TreasuryDAO.sol\":2817:2843  proposal.voted[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/TreasuryDAO.sol\":2817:2850  proposal.voted[msg.sender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/TreasuryDAO.sol\":2846:2850  true */\n      0x01\n        /* \"contracts/TreasuryDAO.sol\":2817:2850  proposal.voted[msg.sender] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/TreasuryDAO.sol\":2866:2909  Voted(proposalId, msg.sender, voterBalance) */\n      dup2\n      mload\n        /* \"#utility.yul\":6004:6029   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":6045:6063   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":6038:6098   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":6114:6132   */\n      dup2\n      add\n        /* \"#utility.yul\":6107:6141   */\n      dup3\n      swap1\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":2866:2909  Voted(proposalId, msg.sender, voterBalance) */\n      0x1abe610cf2bf87e57dcc1181fcf5ac0934e843d8344ab9eed6e86c799f62585e\n      swap1\n        /* \"#utility.yul\":5992:5994   */\n      0x60\n        /* \"#utility.yul\":5977:5995   */\n      add\n        /* \"contracts/TreasuryDAO.sol\":2866:2909  Voted(proposalId, msg.sender, voterBalance) */\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/TreasuryDAO.sol\":2428:2915  {... */\n      pop\n      pop\n        /* \"contracts/TreasuryDAO.sol\":2379:2915  function vote(uint proposalId) public onlyMember {... */\n      pop\n      jump\t// out\n        /* \"contracts/TreasuryDAO.sol\":844:871  Proposal[] public proposals */\n    tag_33:\n      0x02\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x07\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      dup6\n      add\n      sload\n      0x05\n      swap1\n      swap6\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap5\n      and\n      swap6\n      pop\n      swap2\n      swap4\n      swap1\n      swap3\n      0xff\n      swap1\n      swap2\n      and\n      swap1\n      dup7\n      jump\t// out\n        /* \"contracts/TreasuryDAO.sol\":2921:3455  function executeProposal(uint proposalId) public {... */\n    tag_46:\n        /* \"contracts/TreasuryDAO.sol\":2979:3004  Proposal storage proposal */\n      0x00\n        /* \"contracts/TreasuryDAO.sol\":3007:3016  proposals */\n      0x02\n        /* \"contracts/TreasuryDAO.sol\":3017:3027  proposalId */\n      dup3\n        /* \"contracts/TreasuryDAO.sol\":3007:3028  proposals[proposalId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_147\n      jumpi\n      tag_147\n      tag_123\n      jump\t// in\n    tag_147:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/TreasuryDAO.sol\":2979:3028  Proposal storage proposal = proposals[proposalId] */\n      swap1\n      pop\n        /* \"contracts/TreasuryDAO.sol\":3063:3075  500 * 10**18 */\n      0x1b1ae4d6e2ef500000\n        /* \"contracts/TreasuryDAO.sol\":3045:3053  proposal */\n      dup2\n        /* \"contracts/TreasuryDAO.sol\":3045:3059  proposal.votes */\n      0x02\n      add\n      sload\n        /* \"contracts/TreasuryDAO.sol\":3045:3075  proposal.votes >= 500 * 10**18 */\n      lt\n      iszero\n        /* \"contracts/TreasuryDAO.sol\":3037:3118  require(proposal.votes >= 500 * 10**18, \"Not enough votes (500 tokens required)\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6354:6356   */\n      0x20\n        /* \"contracts/TreasuryDAO.sol\":3037:3118  require(proposal.votes >= 500 * 10**18, \"Not enough votes (500 tokens required)\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6336:6357   */\n      mstore\n        /* \"#utility.yul\":6393:6395   */\n      0x26\n        /* \"#utility.yul\":6373:6391   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6366:6396   */\n      mstore\n        /* \"#utility.yul\":6432:6466   */\n      0x4e6f7420656e6f75676820766f746573202835303020746f6b656e7320726571\n        /* \"#utility.yul\":6412:6430   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6405:6467   */\n      mstore\n      shl(0xd0, 0x756972656429)\n        /* \"#utility.yul\":6483:6501   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6476:6512   */\n      mstore\n        /* \"#utility.yul\":6529:6548   */\n      0x84\n      add\n        /* \"contracts/TreasuryDAO.sol\":3037:3118  require(proposal.votes >= 500 * 10**18, \"Not enough votes (500 tokens required)\") */\n      tag_118\n        /* \"#utility.yul\":6152:6554   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":3037:3118  require(proposal.votes >= 500 * 10**18, \"Not enough votes (500 tokens required)\") */\n    tag_149:\n        /* \"contracts/TreasuryDAO.sol\":3136:3153  proposal.executed */\n      0x04\n      dup2\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/TreasuryDAO.sol\":3135:3153  !proposal.executed */\n      iszero\n        /* \"contracts/TreasuryDAO.sol\":3127:3174  require(!proposal.executed, \"Already executed\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6761:6763   */\n      0x20\n        /* \"contracts/TreasuryDAO.sol\":3127:3174  require(!proposal.executed, \"Already executed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6743:6764   */\n      mstore\n        /* \"#utility.yul\":6800:6802   */\n      0x10\n        /* \"#utility.yul\":6780:6798   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6773:6803   */\n      mstore\n      shl(0x82, 0x105b1c9958591e48195e1958dd5d1959)\n        /* \"#utility.yul\":6819:6837   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6812:6858   */\n      mstore\n        /* \"#utility.yul\":6875:6893   */\n      0x64\n      add\n        /* \"contracts/TreasuryDAO.sol\":3127:3174  require(!proposal.executed, \"Already executed\") */\n      tag_118\n        /* \"#utility.yul\":6559:6899   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":3127:3174  require(!proposal.executed, \"Already executed\") */\n    tag_152:\n        /* \"contracts/TreasuryDAO.sol\":3210:3218  proposal */\n      dup1\n        /* \"contracts/TreasuryDAO.sol\":3210:3226  proposal.endTime */\n      0x03\n      add\n      sload\n        /* \"contracts/TreasuryDAO.sol\":3191:3206  block.timestamp */\n      timestamp\n        /* \"contracts/TreasuryDAO.sol\":3191:3226  block.timestamp >= proposal.endTime */\n      lt\n      iszero\n        /* \"contracts/TreasuryDAO.sol\":3183:3254  require(block.timestamp >= proposal.endTime, \"Voting period not ended\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7106:7108   */\n      0x20\n        /* \"contracts/TreasuryDAO.sol\":3183:3254  require(block.timestamp >= proposal.endTime, \"Voting period not ended\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7088:7109   */\n      mstore\n        /* \"#utility.yul\":7145:7147   */\n      0x17\n        /* \"#utility.yul\":7125:7143   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7118:7148   */\n      mstore\n        /* \"#utility.yul\":7184:7209   */\n      0x566f74696e6720706572696f64206e6f7420656e646564000000000000000000\n        /* \"#utility.yul\":7164:7182   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7157:7210   */\n      mstore\n        /* \"#utility.yul\":7227:7245   */\n      0x64\n      add\n        /* \"contracts/TreasuryDAO.sol\":3183:3254  require(block.timestamp >= proposal.endTime, \"Voting period not ended\") */\n      tag_118\n        /* \"#utility.yul\":6904:7251   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":3183:3254  require(block.timestamp >= proposal.endTime, \"Voting period not ended\") */\n    tag_155:\n        /* \"contracts/TreasuryDAO.sol\":3287:3291  1500 */\n      0x05dc\n        /* \"contracts/TreasuryDAO.sol\":3271:3284  getETHPrice() */\n      tag_158\n        /* \"contracts/TreasuryDAO.sol\":3271:3282  getETHPrice */\n      tag_95\n        /* \"contracts/TreasuryDAO.sol\":3271:3284  getETHPrice() */\n      jump\t// in\n    tag_158:\n        /* \"contracts/TreasuryDAO.sol\":3271:3291  getETHPrice() > 1500 */\n      gt\n        /* \"contracts/TreasuryDAO.sol\":3263:3313  require(getETHPrice() > 1500, \"ETH price too low\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7458:7460   */\n      0x20\n        /* \"contracts/TreasuryDAO.sol\":3263:3313  require(getETHPrice() > 1500, \"ETH price too low\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7440:7461   */\n      mstore\n        /* \"#utility.yul\":7497:7499   */\n      0x11\n        /* \"#utility.yul\":7477:7495   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7470:7500   */\n      mstore\n      shl(0x78, 0x45544820707269636520746f6f206c6f77)\n        /* \"#utility.yul\":7516:7534   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7509:7556   */\n      mstore\n        /* \"#utility.yul\":7573:7591   */\n      0x64\n      add\n        /* \"contracts/TreasuryDAO.sol\":3263:3313  require(getETHPrice() > 1500, \"ETH price too low\") */\n      tag_118\n        /* \"#utility.yul\":7256:7597   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":3263:3313  require(getETHPrice() > 1500, \"ETH price too low\") */\n    tag_159:\n        /* \"contracts/TreasuryDAO.sol\":3324:3341  proposal.executed */\n      0x04\n      dup2\n      add\n        /* \"contracts/TreasuryDAO.sol\":3324:3348  proposal.executed = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/TreasuryDAO.sol\":3344:3348  true */\n      0x01\n        /* \"contracts/TreasuryDAO.sol\":3324:3348  proposal.executed = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/TreasuryDAO.sol\":3379:3405  block.timestamp + 48 hours */\n      tag_162\n        /* \"contracts/TreasuryDAO.sol\":3379:3394  block.timestamp */\n      timestamp\n        /* \"contracts/TreasuryDAO.sol\":3397:3405  48 hours */\n      0x02a300\n        /* \"contracts/TreasuryDAO.sol\":3379:3405  block.timestamp + 48 hours */\n      tag_140\n      jump\t// in\n    tag_162:\n        /* \"contracts/TreasuryDAO.sol\":3357:3376  proposal.unlockTime */\n      0x05\n      dup3\n      add\n        /* \"contracts/TreasuryDAO.sol\":3357:3405  proposal.unlockTime = block.timestamp + 48 hours */\n      sstore\n        /* \"contracts/TreasuryDAO.sol\":3421:3449  ProposalExecuted(proposalId) */\n      mload(0x40)\n        /* \"#utility.yul\":1563:1588   */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":3421:3449  ProposalExecuted(proposalId) */\n      0x712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f\n      swap1\n        /* \"#utility.yul\":1551:1553   */\n      0x20\n        /* \"#utility.yul\":1536:1554   */\n      add\n        /* \"contracts/TreasuryDAO.sol\":3421:3449  ProposalExecuted(proposalId) */\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/TreasuryDAO.sol\":2970:3455  {... */\n      pop\n        /* \"contracts/TreasuryDAO.sol\":2921:3455  function executeProposal(uint proposalId) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/TreasuryDAO.sol\":1823:2373  function proposeFunding(address payable recipient, uint256 amount) public onlyMember {... */\n    tag_56:\n        /* \"contracts/TreasuryDAO.sol\":1674:1684  msg.sender */\n      caller\n        /* \"contracts/TreasuryDAO.sol\":1666:1685  members[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":1666:1673  members */\n      0x01\n        /* \"contracts/TreasuryDAO.sol\":1666:1685  members[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/TreasuryDAO.sol\":1658:1706  require(members[msg.sender], \"Not a DAO member\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3936:3938   */\n      0x20\n        /* \"contracts/TreasuryDAO.sol\":1658:1706  require(members[msg.sender], \"Not a DAO member\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3918:3939   */\n      mstore\n        /* \"#utility.yul\":3975:3977   */\n      0x10\n        /* \"#utility.yul\":3955:3973   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3948:3978   */\n      mstore\n      shl(0x81, 0x2737ba1030902220a79036b2b6b132b9)\n        /* \"#utility.yul\":3994:4012   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3987:4033   */\n      mstore\n        /* \"#utility.yul\":4050:4068   */\n      0x64\n      add\n        /* \"contracts/TreasuryDAO.sol\":1658:1706  require(members[msg.sender], \"Not a DAO member\") */\n      tag_118\n        /* \"#utility.yul\":3734:4074   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":1658:1706  require(members[msg.sender], \"Not a DAO member\") */\n    tag_166:\n        /* \"contracts/TreasuryDAO.sol\":1950:1956  amount */\n      dup1\n        /* \"contracts/TreasuryDAO.sol\":1925:1946  address(this).balance */\n      selfbalance\n        /* \"contracts/TreasuryDAO.sol\":1925:1956  address(this).balance >= amount */\n      lt\n      iszero\n        /* \"contracts/TreasuryDAO.sol\":1917:1990  require(address(this).balance >= amount, \"Insufficient treasury balance\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7804:7806   */\n      0x20\n        /* \"contracts/TreasuryDAO.sol\":1917:1990  require(address(this).balance >= amount, \"Insufficient treasury balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7786:7807   */\n      mstore\n        /* \"#utility.yul\":7843:7845   */\n      0x1d\n        /* \"#utility.yul\":7823:7841   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7816:7846   */\n      mstore\n        /* \"#utility.yul\":7882:7913   */\n      0x496e73756666696369656e742074726561737572792062616c616e6365000000\n        /* \"#utility.yul\":7862:7880   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7855:7914   */\n      mstore\n        /* \"#utility.yul\":7931:7949   */\n      0x64\n      add\n        /* \"contracts/TreasuryDAO.sol\":1917:1990  require(address(this).balance >= amount, \"Insufficient treasury balance\") */\n      tag_118\n        /* \"#utility.yul\":7602:7955   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":1917:1990  require(address(this).balance >= amount, \"Insufficient treasury balance\") */\n    tag_169:\n        /* \"contracts/TreasuryDAO.sol\":1999:2008  proposals */\n      0x02\n        /* \"contracts/TreasuryDAO.sol\":1999:2015  proposals.push() */\n      dup1\n      sload\n      0x01\n      swap1\n      dup2\n      add\n      dup1\n      dup4\n      sstore\n      0x00\n      dup4\n      dup2\n      mstore\n      swap3\n        /* \"contracts/TreasuryDAO.sol\":1999:2008  proposals */\n      swap2\n        /* \"contracts/TreasuryDAO.sol\":2065:2085  proposals.length - 1 */\n      tag_173\n      swap2\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"contracts/TreasuryDAO.sol\":2055:2086  proposals[proposals.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_176\n      jumpi\n      tag_176\n      tag_123\n      jump\t// in\n    tag_176:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      0x07\n      swap2\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/TreasuryDAO.sol\":2095:2128  newProposal.recipient = recipient */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      or\n      dup2\n      sstore\n      0x01\n        /* \"contracts/TreasuryDAO.sol\":2137:2155  newProposal.amount */\n      dup2\n      add\n        /* \"contracts/TreasuryDAO.sol\":2137:2164  newProposal.amount = amount */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/TreasuryDAO.sol\":2173:2190  newProposal.votes */\n      0x02\n      dup2\n      add\n        /* \"contracts/TreasuryDAO.sol\":2173:2194  newProposal.votes = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/TreasuryDAO.sol\":2243:2258  minVoteDuration */\n      sload(0x06)\n        /* \"contracts/TreasuryDAO.sol\":2055:2086  proposals[proposals.length - 1] */\n      swap1\n      swap2\n      pop\n        /* \"contracts/TreasuryDAO.sol\":2225:2258  block.timestamp + minVoteDuration */\n      tag_178\n      swap1\n        /* \"contracts/TreasuryDAO.sol\":2225:2240  block.timestamp */\n      timestamp\n        /* \"contracts/TreasuryDAO.sol\":2225:2258  block.timestamp + minVoteDuration */\n      tag_140\n      jump\t// in\n    tag_178:\n        /* \"contracts/TreasuryDAO.sol\":2203:2222  newProposal.endTime */\n      0x03\n      dup3\n      add\n        /* \"contracts/TreasuryDAO.sol\":2203:2258  newProposal.endTime = block.timestamp + minVoteDuration */\n      sstore\n        /* \"contracts/TreasuryDAO.sol\":2267:2287  newProposal.executed */\n      0x04\n      dup2\n      add\n        /* \"contracts/TreasuryDAO.sol\":2267:2295  newProposal.executed = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/TreasuryDAO.sol\":2327:2336  proposals */\n      0x02\n        /* \"contracts/TreasuryDAO.sol\":2327:2343  proposals.length */\n      sload\n        /* \"contracts/TreasuryDAO.sol\":2311:2367  ProposalCreated(proposals.length - 1, recipient, amount) */\n      0x3417b456fad6209c73445d5efd446d686e75e4560f0f50c13b5a5cde976447b4\n      swap1\n        /* \"contracts/TreasuryDAO.sol\":2327:2347  proposals.length - 1 */\n      tag_179\n      swap1\n        /* \"contracts/TreasuryDAO.sol\":2267:2295  newProposal.executed = false */\n      0x01\n      swap1\n        /* \"contracts/TreasuryDAO.sol\":2327:2347  proposals.length - 1 */\n      tag_174\n      jump\t// in\n    tag_179:\n        /* \"contracts/TreasuryDAO.sol\":2311:2367  ProposalCreated(proposals.length - 1, recipient, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6004:6029   */\n      swap2\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6065:6097   */\n      dup7\n      and\n        /* \"#utility.yul\":6060:6062   */\n      0x20\n        /* \"#utility.yul\":6045:6063   */\n      dup4\n      add\n        /* \"#utility.yul\":6038:6098   */\n      mstore\n        /* \"#utility.yul\":6114:6132   */\n      dup2\n      add\n        /* \"#utility.yul\":6107:6141   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":5992:5994   */\n      0x60\n        /* \"#utility.yul\":5977:5995   */\n      add\n        /* \"contracts/TreasuryDAO.sol\":2311:2367  ProposalCreated(proposals.length - 1, recipient, amount) */\n      tag_141\n        /* \"#utility.yul\":5802:6147   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":4337:4506  function performUpkeep(bytes calldata performData) external override {... */\n    tag_61:\n        /* \"contracts/TreasuryDAO.sol\":4415:4430  uint proposalId */\n      0x00\n        /* \"contracts/TreasuryDAO.sol\":4433:4464  abi.decode(performData, (uint)) */\n      tag_183\n      dup3\n      dup5\n      add\n        /* \"contracts/TreasuryDAO.sol\":4444:4455  performData */\n      dup5\n        /* \"contracts/TreasuryDAO.sol\":4433:4464  abi.decode(performData, (uint)) */\n      tag_28\n      jump\t// in\n    tag_183:\n        /* \"contracts/TreasuryDAO.sol\":4415:4464  uint proposalId = abi.decode(performData, (uint)) */\n      swap1\n      pop\n        /* \"contracts/TreasuryDAO.sol\":4473:4500  executeProposal(proposalId) */\n      tag_184\n        /* \"contracts/TreasuryDAO.sol\":4489:4499  proposalId */\n      dup2\n        /* \"contracts/TreasuryDAO.sol\":4473:4488  executeProposal */\n      tag_46\n        /* \"contracts/TreasuryDAO.sol\":4473:4500  executeProposal(proposalId) */\n      jump\t// in\n    tag_184:\n        /* \"contracts/TreasuryDAO.sol\":4406:4506  {... */\n      pop\n        /* \"contracts/TreasuryDAO.sol\":4337:4506  function performUpkeep(bytes calldata performData) external override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TreasuryDAO.sol\":3461:3737  function releaseFunds(uint proposalId) public {... */\n    tag_65:\n        /* \"contracts/TreasuryDAO.sol\":3516:3541  Proposal storage proposal */\n      0x00\n        /* \"contracts/TreasuryDAO.sol\":3544:3553  proposals */\n      0x02\n        /* \"contracts/TreasuryDAO.sol\":3554:3564  proposalId */\n      dup3\n        /* \"contracts/TreasuryDAO.sol\":3544:3565  proposals[proposalId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_187\n      jumpi\n      tag_187\n      tag_123\n      jump\t// in\n    tag_187:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/TreasuryDAO.sol\":3516:3565  Proposal storage proposal = proposals[proposalId] */\n      swap1\n      pop\n        /* \"contracts/TreasuryDAO.sol\":3601:3609  proposal */\n      dup1\n        /* \"contracts/TreasuryDAO.sol\":3601:3620  proposal.unlockTime */\n      0x05\n      add\n      sload\n        /* \"contracts/TreasuryDAO.sol\":3582:3597  block.timestamp */\n      timestamp\n        /* \"contracts/TreasuryDAO.sol\":3582:3620  block.timestamp >= proposal.unlockTime */\n      lt\n      iszero\n        /* \"contracts/TreasuryDAO.sol\":3574:3637  require(block.timestamp >= proposal.unlockTime, \"Funds locked\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8653:8655   */\n      0x20\n        /* \"contracts/TreasuryDAO.sol\":3574:3637  require(block.timestamp >= proposal.unlockTime, \"Funds locked\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8635:8656   */\n      mstore\n        /* \"#utility.yul\":8692:8694   */\n      0x0c\n        /* \"#utility.yul\":8672:8690   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8665:8695   */\n      mstore\n      shl(0xa2, 0x119d5b991cc81b1bd8dad959)\n        /* \"#utility.yul\":8711:8729   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8704:8746   */\n      mstore\n        /* \"#utility.yul\":8763:8781   */\n      0x64\n      add\n        /* \"contracts/TreasuryDAO.sol\":3574:3637  require(block.timestamp >= proposal.unlockTime, \"Funds locked\") */\n      tag_118\n        /* \"#utility.yul\":8451:8787   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":3574:3637  require(block.timestamp >= proposal.unlockTime, \"Funds locked\") */\n    tag_189:\n        /* \"contracts/TreasuryDAO.sol\":3646:3664  proposal.recipient */\n      dup1\n      sload\n      0x01\n        /* \"contracts/TreasuryDAO.sol\":3674:3689  proposal.amount */\n      dup3\n      add\n      sload\n        /* \"contracts/TreasuryDAO.sol\":3646:3690  proposal.recipient.transfer(proposal.amount) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/TreasuryDAO.sol\":3646:3664  proposal.recipient */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/TreasuryDAO.sol\":3646:3690  proposal.recipient.transfer(proposal.amount) */\n      dup2\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"contracts/TreasuryDAO.sol\":3674:3689  proposal.amount */\n      swap1\n        /* \"contracts/TreasuryDAO.sol\":3646:3664  proposal.recipient */\n      0x00\n        /* \"contracts/TreasuryDAO.sol\":3646:3690  proposal.recipient.transfer(proposal.amount) */\n      dup2\n        /* \"contracts/TreasuryDAO.sol\":3646:3664  proposal.recipient */\n      dup2\n        /* \"contracts/TreasuryDAO.sol\":3646:3690  proposal.recipient.transfer(proposal.amount) */\n      dup2\n        /* \"contracts/TreasuryDAO.sol\":3674:3689  proposal.amount */\n      dup6\n        /* \"contracts/TreasuryDAO.sol\":3646:3664  proposal.recipient */\n      dup9\n        /* \"contracts/TreasuryDAO.sol\":3646:3690  proposal.recipient.transfer(proposal.amount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_193\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_193:\n      pop\n        /* \"contracts/TreasuryDAO.sol\":3706:3731  FundsReleased(proposalId) */\n      mload(0x40)\n        /* \"#utility.yul\":1563:1588   */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":3706:3731  FundsReleased(proposalId) */\n      0x952b264c8e0a06cddb4bbaa6d6af1d565145329fd95bbe72cb2b53942b2dc966\n      swap1\n        /* \"#utility.yul\":1551:1553   */\n      0x20\n        /* \"#utility.yul\":1536:1554   */\n      add\n        /* \"contracts/TreasuryDAO.sol\":3706:3731  FundsReleased(proposalId) */\n      tag_163\n        /* \"#utility.yul\":1417:1594   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":4651:4785  function withdrawFromAave(uint256 amount) external onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_196\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_197\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_196:\n        /* \"contracts/TreasuryDAO.sol\":4721:4732  lendingPool */\n      sload(0x05)\n        /* \"contracts/TreasuryDAO.sol\":4721:4779  lendingPool.withdraw(address(this), amount, address(this)) */\n      mload(0x40)\n      shl(0xe2, 0x1a4ca37b)\n      dup2\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":4750:4754  this */\n      address\n        /* \"contracts/TreasuryDAO.sol\":4721:4779  lendingPool.withdraw(address(this), amount, address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8994:9045   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9061:9079   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9054:9088   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":9104:9122   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9097:9157   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/TreasuryDAO.sol\":4721:4732  lendingPool */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/TreasuryDAO.sol\":4721:4741  lendingPool.withdraw */\n      0x69328dec\n      swap1\n        /* \"#utility.yul\":8967:8985   */\n      0x64\n      add\n        /* \"contracts/TreasuryDAO.sol\":4721:4779  lendingPool.withdraw(address(this), amount, address(this)) */\n    tag_199:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_201:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_203\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_203:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/TreasuryDAO.sol\":4651:4785  function withdrawFromAave(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/TreasuryDAO.sol\":4512:4645  function depositToAave(uint256 amount) external onlyOwner {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_205\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_197\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_205:\n        /* \"contracts/TreasuryDAO.sol\":4579:4590  lendingPool */\n      sload(0x05)\n        /* \"contracts/TreasuryDAO.sol\":4579:4639  lendingPool.deposit(address(this), amount, address(this), 0) */\n      mload(0x40)\n      shl(0xe0, 0xe8eda9df)\n      dup2\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":4607:4611  this */\n      address\n        /* \"contracts/TreasuryDAO.sol\":4579:4639  lendingPool.deposit(address(this), amount, address(this), 0) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9406:9457   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9473:9491   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9466:9500   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":9516:9534   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9509:9569   */\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":4579:4590  lendingPool */\n      0x00\n        /* \"#utility.yul\":9585:9603   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9578:9625   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/TreasuryDAO.sol\":4579:4590  lendingPool */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/TreasuryDAO.sol\":4579:4598  lendingPool.deposit */\n      0xe8eda9df\n      swap1\n        /* \"#utility.yul\":9378:9397   */\n      0x84\n      add\n        /* \"contracts/TreasuryDAO.sol\":4579:4639  lendingPool.deposit(address(this), amount, address(this), 0) */\n      tag_199\n        /* \"#utility.yul\":9168:9631   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":3926:4331  function checkUpkeep(bytes calldata /* checkData */) external view override returns (bool upkeepNeeded, bytes memory performData) {... */\n    tag_77:\n        /* \"contracts/TreasuryDAO.sol\":4011:4028  bool upkeepNeeded */\n      0x00\n        /* \"contracts/TreasuryDAO.sol\":4030:4054  bytes memory performData */\n      0x60\n        /* \"contracts/TreasuryDAO.sol\":4070:4076  uint i */\n      0x00\n        /* \"contracts/TreasuryDAO.sol\":4065:4299  for (uint i = 0; i < proposals.length; i++) {... */\n    tag_213:\n        /* \"contracts/TreasuryDAO.sol\":4086:4095  proposals */\n      0x02\n        /* \"contracts/TreasuryDAO.sol\":4086:4102  proposals.length */\n      sload\n        /* \"contracts/TreasuryDAO.sol\":4082:4102  i < proposals.length */\n      dup2\n      lt\n        /* \"contracts/TreasuryDAO.sol\":4065:4299  for (uint i = 0; i < proposals.length; i++) {... */\n      iszero\n      tag_214\n      jumpi\n        /* \"contracts/TreasuryDAO.sol\":4127:4136  proposals */\n      0x02\n        /* \"contracts/TreasuryDAO.sol\":4137:4138  i */\n      dup2\n        /* \"contracts/TreasuryDAO.sol\":4127:4139  proposals[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_217\n      jumpi\n      tag_217\n      tag_123\n      jump\t// in\n    tag_217:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/TreasuryDAO.sol\":4127:4148  proposals[i].executed */\n      0x04\n        /* \"contracts/TreasuryDAO.sol\":4127:4139  proposals[i] */\n      0x07\n      swap1\n      swap3\n      mul\n      add\n        /* \"contracts/TreasuryDAO.sol\":4127:4148  proposals[i].executed */\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/TreasuryDAO.sol\":4126:4148  !proposals[i].executed */\n      iszero\n        /* \"contracts/TreasuryDAO.sol\":4126:4186  !proposals[i].executed && proposals[i].votes >= 500 * 10**18 */\n      dup1\n      iszero\n      tag_219\n      jumpi\n      pop\n        /* \"contracts/TreasuryDAO.sol\":4174:4186  500 * 10**18 */\n      0x1b1ae4d6e2ef500000\n        /* \"contracts/TreasuryDAO.sol\":4152:4161  proposals */\n      0x02\n        /* \"contracts/TreasuryDAO.sol\":4162:4163  i */\n      dup3\n        /* \"contracts/TreasuryDAO.sol\":4152:4164  proposals[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_221\n      jumpi\n      tag_221\n      tag_123\n      jump\t// in\n    tag_221:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/TreasuryDAO.sol\":4152:4170  proposals[i].votes */\n      0x02\n      add\n      sload\n        /* \"contracts/TreasuryDAO.sol\":4152:4186  proposals[i].votes >= 500 * 10**18 */\n      lt\n      iszero\n        /* \"contracts/TreasuryDAO.sol\":4126:4186  !proposals[i].executed && proposals[i].votes >= 500 * 10**18 */\n    tag_219:\n        /* \"contracts/TreasuryDAO.sol\":4126:4229  !proposals[i].executed && proposals[i].votes >= 500 * 10**18 && block.timestamp >= proposals[i].endTime */\n      dup1\n      iszero\n      tag_223\n      jumpi\n      pop\n        /* \"contracts/TreasuryDAO.sol\":4209:4218  proposals */\n      0x02\n        /* \"contracts/TreasuryDAO.sol\":4219:4220  i */\n      dup2\n        /* \"contracts/TreasuryDAO.sol\":4209:4221  proposals[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_225\n      jumpi\n      tag_225\n      tag_123\n      jump\t// in\n    tag_225:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/TreasuryDAO.sol\":4209:4229  proposals[i].endTime */\n      0x03\n      add\n      sload\n        /* \"contracts/TreasuryDAO.sol\":4190:4205  block.timestamp */\n      timestamp\n        /* \"contracts/TreasuryDAO.sol\":4190:4229  block.timestamp >= proposals[i].endTime */\n      lt\n      iszero\n        /* \"contracts/TreasuryDAO.sol\":4126:4229  !proposals[i].executed && proposals[i].votes >= 500 * 10**18 && block.timestamp >= proposals[i].endTime */\n    tag_223:\n        /* \"contracts/TreasuryDAO.sol\":4122:4290  if (!proposals[i].executed && proposals[i].votes >= 500 * 10**18 && block.timestamp >= proposals[i].endTime) {... */\n      iszero\n      tag_227\n      jumpi\n        /* \"contracts/TreasuryDAO.sol\":4256:4260  true */\n      0x01\n        /* \"contracts/TreasuryDAO.sol\":4273:4274  i */\n      dup2\n        /* \"contracts/TreasuryDAO.sol\":4262:4275  abi.encode(i) */\n      add(0x20, mload(0x40))\n      tag_228\n      swap2\n        /* \"#utility.yul\":1563:1588   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1551:1553   */\n      0x20\n        /* \"#utility.yul\":1536:1554   */\n      add\n      swap1\n        /* \"#utility.yul\":1417:1594   */\n      jump\n        /* \"contracts/TreasuryDAO.sol\":4262:4275  abi.encode(i) */\n    tag_228:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":4248:4276  return (true, abi.encode(i)) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_212)\n        /* \"contracts/TreasuryDAO.sol\":4122:4290  if (!proposals[i].executed && proposals[i].votes >= 500 * 10**18 && block.timestamp >= proposals[i].endTime) {... */\n    tag_227:\n        /* \"contracts/TreasuryDAO.sol\":4104:4107  i++ */\n      0x01\n      add\n        /* \"contracts/TreasuryDAO.sol\":4065:4299  for (uint i = 0; i < proposals.length; i++) {... */\n      jump(tag_213)\n    tag_214:\n      pop\n      pop\n        /* \"contracts/TreasuryDAO.sol\":4307:4325  return (false, \"\") */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":4315:4320  false */\n      0x00\n        /* \"contracts/TreasuryDAO.sol\":4307:4325  return (false, \"\") */\n      dup1\n      dup3\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":4315:4320  false */\n      swap2\n      pop\n        /* \"contracts/TreasuryDAO.sol\":3926:4331  function checkUpkeep(bytes calldata /* checkData */) external view override returns (bool upkeepNeeded, bytes memory performData) {... */\n    tag_212:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_230\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_197\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_232\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_233\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/TreasuryDAO.sol\":3743:3920  function getETHPrice() public view returns (uint256) {... */\n    tag_95:\n        /* \"contracts/TreasuryDAO.sol\":3827:3836  priceFeed */\n      0x04\n      dup1\n      sload\n        /* \"contracts/TreasuryDAO.sol\":3827:3854  priceFeed.latestRoundData() */\n      0x40\n      dup1\n      mload\n      shl(0xe2, 0x3fabe5a3)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/TreasuryDAO.sol\":3787:3794  uint256 */\n      0x00\n      swap4\n      dup5\n      swap4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/TreasuryDAO.sol\":3827:3836  priceFeed */\n      and\n      swap3\n        /* \"contracts/TreasuryDAO.sol\":3827:3852  priceFeed.latestRoundData */\n      0xfeaf968c\n      swap3\n        /* \"contracts/TreasuryDAO.sol\":3827:3854  priceFeed.latestRoundData() */\n      dup2\n      dup4\n      add\n      swap3\n      0xa0\n      swap3\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/TreasuryDAO.sol\":3827:3836  priceFeed */\n      dup7\n        /* \"contracts/TreasuryDAO.sol\":3827:3854  priceFeed.latestRoundData() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_237\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_237:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_238\n      swap2\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n        /* \"contracts/TreasuryDAO.sol\":3805:3854  (, int price, , , ) = priceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/TreasuryDAO.sol\":3887:3890  1e8 */\n      0x05f5e100\n        /* \"contracts/TreasuryDAO.sol\":3878:3883  price */\n      dup2\n        /* \"contracts/TreasuryDAO.sol\":3870:3890  uint256(price) / 1e8 */\n      tag_240\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n        /* \"contracts/TreasuryDAO.sol\":3863:3890  return uint256(price) / 1e8 */\n      swap2\n      pop\n      pop\n        /* \"contracts/TreasuryDAO.sol\":3743:3920  function getETHPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TreasuryDAO.sol\":1728:1817  function addMember(address member) public onlyOwner {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_243\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_197\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_243:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/TreasuryDAO.sol\":1789:1804  members[member] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/TreasuryDAO.sol\":1807:1811  true */\n      0x01\n        /* \"contracts/TreasuryDAO.sol\":1789:1804  members[member] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/TreasuryDAO.sol\":1789:1811  members[member] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/TreasuryDAO.sol\":1728:1817  function addMember(address member) public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_247\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_197\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_247:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3218:3269   */\n      mstore\n        /* \"#utility.yul\":3191:3209   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_118\n        /* \"#utility.yul\":3072:3275   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_251\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_233\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_232\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3218:3269   */\n      mstore\n        /* \"#utility.yul\":3191:3209   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_118\n        /* \"#utility.yul\":3072:3275   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:240   */\n    tag_28:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_266:\n      pop\n        /* \"#utility.yul\":187:210   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:240   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":837:968   */\n    tag_261:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":912:943   */\n      dup2\n      and\n        /* \"#utility.yul\":902:944   */\n      dup2\n      eq\n        /* \"#utility.yul\":892:962   */\n      tag_251\n      jumpi\n        /* \"#utility.yul\":958:959   */\n      0x00\n        /* \"#utility.yul\":955:956   */\n      dup1\n        /* \"#utility.yul\":948:960   */\n      revert\n        /* \"#utility.yul\":973:1220   */\n    tag_39:\n        /* \"#utility.yul\":1032:1038   */\n      0x00\n        /* \"#utility.yul\":1085:1087   */\n      0x20\n        /* \"#utility.yul\":1073:1082   */\n      dup3\n        /* \"#utility.yul\":1064:1071   */\n      dup5\n        /* \"#utility.yul\":1060:1083   */\n      sub\n        /* \"#utility.yul\":1056:1088   */\n      slt\n        /* \"#utility.yul\":1053:1105   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":1101:1102   */\n      0x00\n        /* \"#utility.yul\":1098:1099   */\n      dup1\n        /* \"#utility.yul\":1091:1103   */\n      revert\n        /* \"#utility.yul\":1053:1105   */\n    tag_271:\n        /* \"#utility.yul\":1140:1149   */\n      dup2\n        /* \"#utility.yul\":1127:1150   */\n      calldataload\n        /* \"#utility.yul\":1159:1190   */\n      tag_272\n        /* \"#utility.yul\":1184:1189   */\n      dup2\n        /* \"#utility.yul\":1159:1190   */\n      tag_261\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":1209:1214   */\n      swap4\n        /* \"#utility.yul\":973:1220   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1599:1974   */\n    tag_55:\n        /* \"#utility.yul\":1675:1681   */\n      0x00\n        /* \"#utility.yul\":1683:1689   */\n      dup1\n        /* \"#utility.yul\":1736:1738   */\n      0x40\n        /* \"#utility.yul\":1724:1733   */\n      dup4\n        /* \"#utility.yul\":1715:1722   */\n      dup6\n        /* \"#utility.yul\":1711:1734   */\n      sub\n        /* \"#utility.yul\":1707:1739   */\n      slt\n        /* \"#utility.yul\":1704:1756   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":1752:1753   */\n      0x00\n        /* \"#utility.yul\":1749:1750   */\n      dup1\n        /* \"#utility.yul\":1742:1754   */\n      revert\n        /* \"#utility.yul\":1704:1756   */\n    tag_276:\n        /* \"#utility.yul\":1791:1800   */\n      dup3\n        /* \"#utility.yul\":1778:1801   */\n      calldataload\n        /* \"#utility.yul\":1810:1841   */\n      tag_277\n        /* \"#utility.yul\":1835:1840   */\n      dup2\n        /* \"#utility.yul\":1810:1841   */\n      tag_261\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":1860:1865   */\n      swap5\n        /* \"#utility.yul\":1938:1940   */\n      0x20\n        /* \"#utility.yul\":1923:1941   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1910:1942   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1599:1974   */\n      jump\t// out\n        /* \"#utility.yul\":1979:2565   */\n    tag_60:\n        /* \"#utility.yul\":2049:2055   */\n      0x00\n        /* \"#utility.yul\":2057:2063   */\n      dup1\n        /* \"#utility.yul\":2110:2112   */\n      0x20\n        /* \"#utility.yul\":2098:2107   */\n      dup4\n        /* \"#utility.yul\":2089:2096   */\n      dup6\n        /* \"#utility.yul\":2085:2108   */\n      sub\n        /* \"#utility.yul\":2081:2113   */\n      slt\n        /* \"#utility.yul\":2078:2130   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":2126:2127   */\n      0x00\n        /* \"#utility.yul\":2123:2124   */\n      dup1\n        /* \"#utility.yul\":2116:2128   */\n      revert\n        /* \"#utility.yul\":2078:2130   */\n    tag_279:\n        /* \"#utility.yul\":2166:2175   */\n      dup3\n        /* \"#utility.yul\":2153:2176   */\n      calldataload\n        /* \"#utility.yul\":2199:2217   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2191:2197   */\n      dup2\n        /* \"#utility.yul\":2188:2218   */\n      gt\n        /* \"#utility.yul\":2185:2235   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":2231:2232   */\n      0x00\n        /* \"#utility.yul\":2228:2229   */\n      dup1\n        /* \"#utility.yul\":2221:2233   */\n      revert\n        /* \"#utility.yul\":2185:2235   */\n    tag_280:\n        /* \"#utility.yul\":2254:2276   */\n      dup4\n      add\n        /* \"#utility.yul\":2307:2311   */\n      0x1f\n        /* \"#utility.yul\":2299:2312   */\n      dup2\n      add\n        /* \"#utility.yul\":2295:2322   */\n      dup6\n      sgt\n        /* \"#utility.yul\":2285:2340   */\n      tag_281\n      jumpi\n        /* \"#utility.yul\":2336:2337   */\n      0x00\n        /* \"#utility.yul\":2333:2334   */\n      dup1\n        /* \"#utility.yul\":2326:2338   */\n      revert\n        /* \"#utility.yul\":2285:2340   */\n    tag_281:\n        /* \"#utility.yul\":2376:2378   */\n      dup1\n        /* \"#utility.yul\":2363:2379   */\n      calldataload\n        /* \"#utility.yul\":2402:2420   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2394:2400   */\n      dup2\n        /* \"#utility.yul\":2391:2421   */\n      gt\n        /* \"#utility.yul\":2388:2438   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":2434:2435   */\n      0x00\n        /* \"#utility.yul\":2431:2432   */\n      dup1\n        /* \"#utility.yul\":2424:2436   */\n      revert\n        /* \"#utility.yul\":2388:2438   */\n    tag_282:\n        /* \"#utility.yul\":2479:2486   */\n      dup6\n        /* \"#utility.yul\":2474:2476   */\n      0x20\n        /* \"#utility.yul\":2465:2471   */\n      dup3\n        /* \"#utility.yul\":2461:2463   */\n      dup5\n        /* \"#utility.yul\":2457:2472   */\n      add\n        /* \"#utility.yul\":2453:2477   */\n      add\n        /* \"#utility.yul\":2450:2487   */\n      gt\n        /* \"#utility.yul\":2447:2504   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":2500:2501   */\n      0x00\n        /* \"#utility.yul\":2497:2498   */\n      dup1\n        /* \"#utility.yul\":2490:2502   */\n      revert\n        /* \"#utility.yul\":2447:2504   */\n    tag_283:\n        /* \"#utility.yul\":2531:2533   */\n      0x20\n        /* \"#utility.yul\":2523:2534   */\n      swap2\n      swap1\n      swap2\n      add\n      swap6\n        /* \"#utility.yul\":2553:2559   */\n      swap1\n      swap5\n      pop\n        /* \"#utility.yul\":1979:2565   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2570:3067   */\n    tag_79:\n        /* \"#utility.yul\":2753:2759   */\n      dup3\n        /* \"#utility.yul\":2746:2760   */\n      iszero\n        /* \"#utility.yul\":2739:2761   */\n      iszero\n        /* \"#utility.yul\":2728:2737   */\n      dup2\n        /* \"#utility.yul\":2721:2762   */\n      mstore\n        /* \"#utility.yul\":2798:2800   */\n      0x40\n        /* \"#utility.yul\":2793:2795   */\n      0x20\n        /* \"#utility.yul\":2782:2791   */\n      dup3\n        /* \"#utility.yul\":2778:2796   */\n      add\n        /* \"#utility.yul\":2771:2801   */\n      mstore\n        /* \"#utility.yul\":2702:2706   */\n      0x00\n        /* \"#utility.yul\":2830:2836   */\n      dup3\n        /* \"#utility.yul\":2824:2837   */\n      mload\n        /* \"#utility.yul\":2873:2879   */\n      dup1\n        /* \"#utility.yul\":2868:2870   */\n      0x40\n        /* \"#utility.yul\":2857:2866   */\n      dup5\n        /* \"#utility.yul\":2853:2871   */\n      add\n        /* \"#utility.yul\":2846:2880   */\n      mstore\n        /* \"#utility.yul\":2932:2938   */\n      dup1\n        /* \"#utility.yul\":2927:2929   */\n      0x20\n        /* \"#utility.yul\":2919:2925   */\n      dup6\n        /* \"#utility.yul\":2915:2930   */\n      add\n        /* \"#utility.yul\":2910:2912   */\n      0x60\n        /* \"#utility.yul\":2899:2908   */\n      dup6\n        /* \"#utility.yul\":2895:2913   */\n      add\n        /* \"#utility.yul\":2889:2939   */\n      mcopy\n        /* \"#utility.yul\":2988:2989   */\n      0x00\n        /* \"#utility.yul\":2983:2985   */\n      0x60\n        /* \"#utility.yul\":2974:2980   */\n      dup3\n        /* \"#utility.yul\":2963:2972   */\n      dup6\n        /* \"#utility.yul\":2959:2981   */\n      add\n        /* \"#utility.yul\":2955:2986   */\n      add\n        /* \"#utility.yul\":2948:2990   */\n      mstore\n        /* \"#utility.yul\":3058:3060   */\n      0x60\n        /* \"#utility.yul\":3051:3053   */\n      0x1f\n        /* \"#utility.yul\":3047:3054   */\n      not\n        /* \"#utility.yul\":3042:3044   */\n      0x1f\n        /* \"#utility.yul\":3034:3040   */\n      dup4\n        /* \"#utility.yul\":3030:3045   */\n      add\n        /* \"#utility.yul\":3026:3055   */\n      and\n        /* \"#utility.yul\":3015:3024   */\n      dup5\n        /* \"#utility.yul\":3011:3056   */\n      add\n        /* \"#utility.yul\":3007:3061   */\n      add\n        /* \"#utility.yul\":2999:3061   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2570:3067   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4079:4206   */\n    tag_123:\n        /* \"#utility.yul\":4140:4150   */\n      0x4e487b71\n        /* \"#utility.yul\":4135:4138   */\n      0xe0\n        /* \"#utility.yul\":4131:4151   */\n      shl\n        /* \"#utility.yul\":4128:4129   */\n      0x00\n        /* \"#utility.yul\":4121:4152   */\n      mstore\n        /* \"#utility.yul\":4171:4175   */\n      0x32\n        /* \"#utility.yul\":4168:4169   */\n      0x04\n        /* \"#utility.yul\":4161:4176   */\n      mstore\n        /* \"#utility.yul\":4195:4199   */\n      0x24\n        /* \"#utility.yul\":4192:4193   */\n      0x00\n        /* \"#utility.yul\":4185:4200   */\n      revert\n        /* \"#utility.yul\":4901:5131   */\n    tag_135:\n        /* \"#utility.yul\":4971:4977   */\n      0x00\n        /* \"#utility.yul\":5024:5026   */\n      0x20\n        /* \"#utility.yul\":5012:5021   */\n      dup3\n        /* \"#utility.yul\":5003:5010   */\n      dup5\n        /* \"#utility.yul\":4999:5022   */\n      sub\n        /* \"#utility.yul\":4995:5027   */\n      slt\n        /* \"#utility.yul\":4992:5044   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":5040:5041   */\n      0x00\n        /* \"#utility.yul\":5037:5038   */\n      dup1\n        /* \"#utility.yul\":5030:5042   */\n      revert\n        /* \"#utility.yul\":4992:5044   */\n    tag_293:\n      pop\n        /* \"#utility.yul\":5085:5101   */\n      mload\n      swap2\n        /* \"#utility.yul\":4901:5131   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5667   */\n    tag_262:\n        /* \"#utility.yul\":5601:5611   */\n      0x4e487b71\n        /* \"#utility.yul\":5596:5599   */\n      0xe0\n        /* \"#utility.yul\":5592:5612   */\n      shl\n        /* \"#utility.yul\":5589:5590   */\n      0x00\n        /* \"#utility.yul\":5582:5613   */\n      mstore\n        /* \"#utility.yul\":5632:5636   */\n      0x11\n        /* \"#utility.yul\":5629:5630   */\n      0x04\n        /* \"#utility.yul\":5622:5637   */\n      mstore\n        /* \"#utility.yul\":5656:5660   */\n      0x24\n        /* \"#utility.yul\":5653:5654   */\n      0x00\n        /* \"#utility.yul\":5646:5661   */\n      revert\n        /* \"#utility.yul\":5672:5797   */\n    tag_140:\n        /* \"#utility.yul\":5737:5746   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5758:5768   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5755:5791   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":5771:5789   */\n      tag_298\n      tag_262\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":5672:5797   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7960:8088   */\n    tag_174:\n        /* \"#utility.yul\":8027:8036   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":8048:8059   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":8045:8082   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":8062:8080   */\n      tag_298\n      tag_262\n      jump\t// in\n        /* \"#utility.yul\":9636:9815   */\n    tag_263:\n        /* \"#utility.yul\":9714:9727   */\n      dup1\n      mload\n        /* \"#utility.yul\":9767:9789   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":9756:9790   */\n      dup2\n      and\n        /* \"#utility.yul\":9746:9791   */\n      dup2\n      eq\n        /* \"#utility.yul\":9736:9809   */\n      tag_313\n      jumpi\n        /* \"#utility.yul\":9805:9806   */\n      0x00\n        /* \"#utility.yul\":9802:9803   */\n      dup1\n        /* \"#utility.yul\":9795:9807   */\n      revert\n        /* \"#utility.yul\":9736:9809   */\n    tag_313:\n        /* \"#utility.yul\":9636:9815   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9820:10391   */\n    tag_239:\n        /* \"#utility.yul\":9923:9929   */\n      0x00\n        /* \"#utility.yul\":9931:9937   */\n      dup1\n        /* \"#utility.yul\":9939:9945   */\n      0x00\n        /* \"#utility.yul\":9947:9953   */\n      dup1\n        /* \"#utility.yul\":9955:9961   */\n      0x00\n        /* \"#utility.yul\":10008:10011   */\n      0xa0\n        /* \"#utility.yul\":9996:10005   */\n      dup7\n        /* \"#utility.yul\":9987:9994   */\n      dup9\n        /* \"#utility.yul\":9983:10006   */\n      sub\n        /* \"#utility.yul\":9979:10012   */\n      slt\n        /* \"#utility.yul\":9976:10029   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":10025:10026   */\n      0x00\n        /* \"#utility.yul\":10022:10023   */\n      dup1\n        /* \"#utility.yul\":10015:10027   */\n      revert\n        /* \"#utility.yul\":9976:10029   */\n    tag_315:\n        /* \"#utility.yul\":10048:10087   */\n      tag_316\n        /* \"#utility.yul\":10077:10086   */\n      dup7\n        /* \"#utility.yul\":10048:10087   */\n      tag_263\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":10127:10129   */\n      0x20\n        /* \"#utility.yul\":10112:10130   */\n      dup8\n      add\n        /* \"#utility.yul\":10106:10131   */\n      mload\n        /* \"#utility.yul\":10193:10195   */\n      0x40\n        /* \"#utility.yul\":10178:10196   */\n      dup9\n      add\n        /* \"#utility.yul\":10172:10197   */\n      mload\n        /* \"#utility.yul\":10287:10289   */\n      0x60\n        /* \"#utility.yul\":10272:10290   */\n      dup10\n      add\n        /* \"#utility.yul\":10266:10291   */\n      mload\n        /* \"#utility.yul\":10038:10087   */\n      swap3\n      swap8\n      pop\n        /* \"#utility.yul\":10106:10131   */\n      swap1\n      swap6\n      pop\n        /* \"#utility.yul\":10172:10197   */\n      swap4\n      pop\n        /* \"#utility.yul\":10266:10291   */\n      swap2\n      pop\n        /* \"#utility.yul\":10336:10385   */\n      tag_317\n        /* \"#utility.yul\":10380:10383   */\n      0x80\n        /* \"#utility.yul\":10365:10384   */\n      dup8\n      add\n        /* \"#utility.yul\":10336:10385   */\n      tag_263\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":10326:10385   */\n      swap1\n      pop\n        /* \"#utility.yul\":9820:10391   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10396:10613   */\n    tag_241:\n        /* \"#utility.yul\":10436:10437   */\n      0x00\n        /* \"#utility.yul\":10462:10463   */\n      dup3\n        /* \"#utility.yul\":10452:10584   */\n      tag_319\n      jumpi\n        /* \"#utility.yul\":10506:10516   */\n      0x4e487b71\n        /* \"#utility.yul\":10501:10504   */\n      0xe0\n        /* \"#utility.yul\":10497:10517   */\n      shl\n        /* \"#utility.yul\":10494:10495   */\n      0x00\n        /* \"#utility.yul\":10487:10518   */\n      mstore\n        /* \"#utility.yul\":10541:10545   */\n      0x12\n        /* \"#utility.yul\":10538:10539   */\n      0x04\n        /* \"#utility.yul\":10531:10546   */\n      mstore\n        /* \"#utility.yul\":10569:10573   */\n      0x24\n        /* \"#utility.yul\":10566:10567   */\n      0x00\n        /* \"#utility.yul\":10559:10574   */\n      revert\n        /* \"#utility.yul\":10452:10584   */\n    tag_319:\n      pop\n        /* \"#utility.yul\":10598:10607   */\n      div\n      swap1\n        /* \"#utility.yul\":10396:10613   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ee7503ce999a4acdc647ed75a55fd1c7fe0d215ca2575850ca9382f6b6206d2064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_154": {
									"entryPoint": null,
									"id": 154,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_490": {
									"entryPoint": null,
									"id": 490,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_transferOwnership_250": {
									"entryPoint": 206,
									"id": 250,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory": {
									"entryPoint": 312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:870:8",
										"nodeType": "YulBlock",
										"src": "0:870:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:8",
													"nodeType": "YulBlock",
													"src": "74:117:8",
													"statements": [
														{
															"nativeSrc": "84:22:8",
															"nodeType": "YulAssignment",
															"src": "84:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:8"
																},
																"nativeSrc": "93:13:8",
																"nodeType": "YulFunctionCall",
																"src": "93:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:8",
																"nodeType": "YulBlock",
																"src": "169:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:8",
																					"nodeType": "YulLiteral",
																					"src": "178:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:8",
																					"nodeType": "YulLiteral",
																					"src": "181:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:8"
																			},
																			"nativeSrc": "171:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:8"
																		},
																		"nativeSrc": "171:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:8",
																										"nodeType": "YulLiteral",
																										"src": "154:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:8",
																										"nodeType": "YulLiteral",
																										"src": "159:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:8"
																								},
																								"nativeSrc": "150:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:8",
																								"nodeType": "YulLiteral",
																								"src": "163:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:8"
																						},
																						"nativeSrc": "146:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:8"
																				},
																				"nativeSrc": "135:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:8"
																		},
																		"nativeSrc": "125:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:8"
																},
																"nativeSrc": "118:50:8",
																"nodeType": "YulFunctionCall",
																"src": "118:50:8"
															},
															"nativeSrc": "115:70:8",
															"nodeType": "YulIf",
															"src": "115:70:8"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:8",
														"nodeType": "YulTypedName",
														"src": "53:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:8",
														"nodeType": "YulTypedName",
														"src": "64:5:8",
														"type": ""
													}
												],
												"src": "14:177:8"
											},
											{
												"body": {
													"nativeSrc": "328:332:8",
													"nodeType": "YulBlock",
													"src": "328:332:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "375:16:8",
																"nodeType": "YulBlock",
																"src": "375:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "384:1:8",
																					"nodeType": "YulLiteral",
																					"src": "384:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "387:1:8",
																					"nodeType": "YulLiteral",
																					"src": "387:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "377:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "377:6:8"
																			},
																			"nativeSrc": "377:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "377:12:8"
																		},
																		"nativeSrc": "377:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "377:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "349:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "349:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "358:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "358:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "345:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "345:3:8"
																		},
																		"nativeSrc": "345:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "345:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "370:3:8",
																		"nodeType": "YulLiteral",
																		"src": "370:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "341:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:8"
																},
																"nativeSrc": "341:33:8",
																"nodeType": "YulFunctionCall",
																"src": "341:33:8"
															},
															"nativeSrc": "338:53:8",
															"nodeType": "YulIf",
															"src": "338:53:8"
														},
														{
															"nativeSrc": "400:50:8",
															"nodeType": "YulAssignment",
															"src": "400:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "440:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "440:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "410:29:8",
																	"nodeType": "YulIdentifier",
																	"src": "410:29:8"
																},
																"nativeSrc": "410:40:8",
																"nodeType": "YulFunctionCall",
																"src": "410:40:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "400:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:8"
																}
															]
														},
														{
															"nativeSrc": "459:59:8",
															"nodeType": "YulAssignment",
															"src": "459:59:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "503:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "503:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "514:2:8",
																				"nodeType": "YulLiteral",
																				"src": "514:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "499:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:8"
																		},
																		"nativeSrc": "499:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "499:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "469:29:8",
																	"nodeType": "YulIdentifier",
																	"src": "469:29:8"
																},
																"nativeSrc": "469:49:8",
																"nodeType": "YulFunctionCall",
																"src": "469:49:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "459:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "459:6:8"
																}
															]
														},
														{
															"nativeSrc": "527:59:8",
															"nodeType": "YulAssignment",
															"src": "527:59:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "571:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "571:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "582:2:8",
																				"nodeType": "YulLiteral",
																				"src": "582:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "567:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "567:3:8"
																		},
																		"nativeSrc": "567:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "567:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "537:29:8",
																	"nodeType": "YulIdentifier",
																	"src": "537:29:8"
																},
																"nativeSrc": "537:49:8",
																"nodeType": "YulFunctionCall",
																"src": "537:49:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "527:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "527:6:8"
																}
															]
														},
														{
															"nativeSrc": "595:59:8",
															"nodeType": "YulAssignment",
															"src": "595:59:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "639:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "639:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "650:2:8",
																				"nodeType": "YulLiteral",
																				"src": "650:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "635:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "635:3:8"
																		},
																		"nativeSrc": "635:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "635:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "605:29:8",
																	"nodeType": "YulIdentifier",
																	"src": "605:29:8"
																},
																"nativeSrc": "605:49:8",
																"nodeType": "YulFunctionCall",
																"src": "605:49:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "595:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "595:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory",
												"nativeSrc": "196:464:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "270:9:8",
														"nodeType": "YulTypedName",
														"src": "270:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "281:7:8",
														"nodeType": "YulTypedName",
														"src": "281:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "293:6:8",
														"nodeType": "YulTypedName",
														"src": "293:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "301:6:8",
														"nodeType": "YulTypedName",
														"src": "301:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "309:6:8",
														"nodeType": "YulTypedName",
														"src": "309:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "317:6:8",
														"nodeType": "YulTypedName",
														"src": "317:6:8",
														"type": ""
													}
												],
												"src": "196:464:8"
											},
											{
												"body": {
													"nativeSrc": "766:102:8",
													"nodeType": "YulBlock",
													"src": "766:102:8",
													"statements": [
														{
															"nativeSrc": "776:26:8",
															"nodeType": "YulAssignment",
															"src": "776:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "788:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "788:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "799:2:8",
																		"nodeType": "YulLiteral",
																		"src": "799:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "784:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:8"
																},
																"nativeSrc": "784:18:8",
																"nodeType": "YulFunctionCall",
																"src": "784:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "776:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "776:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "818:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "818:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "833:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "833:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "849:3:8",
																								"nodeType": "YulLiteral",
																								"src": "849:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "854:1:8",
																								"nodeType": "YulLiteral",
																								"src": "854:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "845:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "845:3:8"
																						},
																						"nativeSrc": "845:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "845:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "858:1:8",
																						"nodeType": "YulLiteral",
																						"src": "858:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "841:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "841:3:8"
																				},
																				"nativeSrc": "841:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "841:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "829:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "829:3:8"
																		},
																		"nativeSrc": "829:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "829:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "811:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "811:6:8"
																},
																"nativeSrc": "811:51:8",
																"nodeType": "YulFunctionCall",
																"src": "811:51:8"
															},
															"nativeSrc": "811:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "811:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "665:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "735:9:8",
														"nodeType": "YulTypedName",
														"src": "735:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "746:6:8",
														"nodeType": "YulTypedName",
														"src": "746:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "757:4:8",
														"nodeType": "YulTypedName",
														"src": "757:4:8",
														"type": ""
													}
												],
												"src": "665:203:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x15180 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x16 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x11BC CODESIZE SUB DUP1 PUSH2 0x11BC DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x35 SWAP2 PUSH2 0x138 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x63 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6C DUP2 PUSH2 0xCE JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD DUP3 AND SWAP5 DUP7 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x189 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x133 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x14B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x154 DUP6 PUSH2 0x11D JUMP JUMPDEST SWAP4 POP PUSH2 0x162 PUSH1 0x20 DUP7 ADD PUSH2 0x11D JUMP JUMPDEST SWAP3 POP PUSH2 0x170 PUSH1 0x40 DUP7 ADD PUSH2 0x11D JUMP JUMPDEST SWAP2 POP PUSH2 0x17E PUSH1 0x60 DUP7 ADD PUSH2 0x11D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1026 DUP1 PUSH2 0x196 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E04FF0D GT PUSH2 0x9D JUMPI DUP1 PUSH4 0xC00D2A8C GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xC00D2A8C EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0xCA6D56DC EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xF96DAE0A EQ PUSH2 0x3A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0xA59A9973 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xA607A8D9 EQ PUSH2 0x341 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x237AF348 GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0x237AF348 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x4D68282F EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x688F237B EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x68FD2D80 EQ PUSH2 0x292 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x121B93F EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x13CF08B EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x8AE4B0C EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xD61B519 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x1FA JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x139 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD7 JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0xDD7 JUMP JUMPDEST PUSH2 0x61E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH2 0x1B7 CALLDATASIZE PUSH1 0x4 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x194 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD7 JUMP JUMPDEST PUSH2 0x672 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP SELFBALANCE JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x194 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x221 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0xE24 JUMP JUMPDEST PUSH2 0x841 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x240 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x24F CALLDATASIZE PUSH1 0x4 PUSH2 0xE4E JUMP JUMPDEST PUSH2 0x9B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0xDD7 JUMP JUMPDEST PUSH2 0x9D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0xDD7 JUMP JUMPDEST PUSH2 0xAA6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0xDD7 JUMP JUMPDEST PUSH2 0xB18 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D0 PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0xE4E JUMP JUMPDEST PUSH2 0xB64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP3 SWAP2 SWAP1 PUSH2 0xEBC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0xC58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x194 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x30A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0xC6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0xE02 JUMP JUMPDEST PUSH2 0xCF1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x394 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x3A3 CALLDATASIZE PUSH1 0x4 PUSH2 0xE02 JUMP JUMPDEST PUSH2 0xD1F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x30A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2737BA1030902220A79036B2B6B132B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x431 JUMPI PUSH2 0x431 PUSH2 0xEFA JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x6 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x493 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x105B1C9958591E481D9BDD1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x414 JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD TIMESTAMP LT PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x159BDD1A5B99C81C195C9A5BD908195B991959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x414 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x522 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x546 SWAP2 SWAP1 PUSH2 0xF0E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x5A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420686F6C6420676F7665726E616E636520746F6B656E7320746F2076 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6F7465 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x414 JUMP JUMPDEST DUP1 DUP3 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5B6 SWAP2 SWAP1 PUSH2 0xF39 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD DUP7 DUP2 MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x1ABE610CF2BF87E57DCC1181FCF5AC0934E843D8344AB9EED6E86C799F62585E SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x62D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 SWAP1 SWAP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP6 POP SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP7 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x686 JUMPI PUSH2 0x686 PUSH2 0xEFA JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH9 0x1B1AE4D6E2EF500000 DUP2 PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820766F746573202835303020746F6B656E7320726571 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x756972656429 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x414 JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x748 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x105B1C9958591E48195E1958DD5D1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x414 JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x79C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74696E6720706572696F64206E6F7420656E646564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x414 JUMP JUMPDEST PUSH2 0x5DC PUSH2 0x7A7 PUSH2 0xC6B JUMP JUMPDEST GT PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x45544820707269636520746F6F206C6F77 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x414 JUMP JUMPDEST PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x804 TIMESTAMP PUSH3 0x2A300 PUSH2 0xF39 JUMP JUMPDEST PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x712AE1383F79AC853F8D882153778E0260EF8F03B504E2866E0593E04D2B291F SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x892 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2737BA1030902220A79036B2B6B132B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x414 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x8E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742074726561737572792062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x414 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD DUP1 DUP4 SSTORE PUSH0 DUP4 DUP2 MSTORE SWAP3 SWAP2 PUSH2 0x8FD SWAP2 PUSH2 0xF52 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x90D JUMPI PUSH2 0x90D PUSH2 0xEFA JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x7 SWAP2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x954 SWAP1 TIMESTAMP PUSH2 0xF39 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH32 0x3417B456FAD6209C73445D5EFD446D686E75E4560F0F50C13B5A5CDE976447B4 SWAP1 PUSH2 0x996 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0xF52 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 ADD PUSH2 0x611 JUMP JUMPDEST PUSH0 PUSH2 0x9C6 DUP3 DUP5 ADD DUP5 PUSH2 0xDD7 JUMP JUMPDEST SWAP1 POP PUSH2 0x9D1 DUP2 PUSH2 0x672 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9EA JUMPI PUSH2 0x9EA PUSH2 0xEFA JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP DUP1 PUSH1 0x5 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0xA3B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x119D5B991CC81B1BD8DAD959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x414 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA75 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x952B264C8E0A06CDDB4BBAA6D6AF1D565145329FD95BBE72CB2B53942B2DC966 SWAP1 PUSH1 0x20 ADD PUSH2 0x835 JUMP JUMPDEST PUSH2 0xAAE PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1A4CA37B PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x69328DEC SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAFF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB11 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB20 PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE8EDA9DF PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH0 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xE8EDA9DF SWAP1 PUSH1 0x84 ADD PUSH2 0xAE8 JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xC3D JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB86 JUMPI PUSH2 0xB86 PUSH2 0xEFA JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x7 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xBD4 JUMPI POP PUSH9 0x1B1AE4D6E2EF500000 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBC1 JUMPI PUSH2 0xBC1 PUSH2 0xEFA JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x2 ADD SLOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xC02 JUMPI POP PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xBEE JUMPI PUSH2 0xBEE PUSH2 0xEFA JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0xC35 JUMPI PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC1C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP SWAP3 POP POP PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xB69 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP1 DUP3 MSTORE SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xC60 PUSH2 0xD5C JUMP JUMPDEST PUSH2 0xC69 PUSH0 PUSH2 0xD88 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP4 DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0xFEAF968C SWAP3 DUP2 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCB1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD5 SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH4 0x5F5E100 DUP2 PUSH2 0xCEB SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xCF9 PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xD27 PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x414 JUMP JUMPDEST PUSH2 0xD59 DUP2 PUSH2 0xD88 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC69 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x414 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD59 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE12 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE1D DUP2 PUSH2 0xDEE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE35 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xE40 DUP2 PUSH2 0xDEE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE5F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE75 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0xE85 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE9B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0xEAC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x60 DUP6 ADD MCOPY PUSH0 PUSH1 0x60 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xF4C JUMPI PUSH2 0xF4C PUSH2 0xF25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xF4C JUMPI PUSH2 0xF4C PUSH2 0xF25 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xF7E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF97 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFA0 DUP7 PUSH2 0xF65 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x60 DUP10 ADD MLOAD SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0xFC5 PUSH1 0x80 DUP8 ADD PUSH2 0xF65 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xFEB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE PUSH22 0x3CE999A4ACDC647ED75A55FD1C7FE0D215CA2575850 0xCA SWAP4 DUP3 0xF6 0xB6 KECCAK256 PUSH14 0x2064736F6C634300081A00330000 ",
							"sourceMap": "522:4408:7:-:0;;;1028:6;995:39;;1270:351;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1395:12;-1:-1:-1;;;;;1273:26:4;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:4;;1350:1;1322:31;;;811:51:8;784:18;;1322:31:4;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1421:15:7::1;:38:::0;;-1:-1:-1;;;;;;1421:38:7;;::::1;-1:-1:-1::0;;;;;1421:38:7;;::::1;;::::0;;;1468:9:::1;:51:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;1528:11:::1;:50:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;1587:21:::1;-1:-1:-1::0;1587:21:7;;;-1:-1:-1;1587:21:7::1;::::0;;;;;;;:28;;-1:-1:-1;;1587:28:7::1;::::0;;::::1;::::0;;522:4408;;2912:187:4;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:4;;;-1:-1:-1;;;;;;3020:17:4;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:8:-;93:13;;-1:-1:-1;;;;;135:31:8;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:464::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;459:59;;537:49;582:2;571:9;567:18;537:49;:::i;:::-;527:59;;605:49;650:2;639:9;635:18;605:49;:::i;:::-;595:59;;196:464;;;;;;;:::o;665:203::-;522:4408:7;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_188": {
									"entryPoint": 3420,
									"id": 188,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_341": {
									"entryPoint": null,
									"id": 341,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_250": {
									"entryPoint": 3464,
									"id": 250,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addMember_516": {
									"entryPoint": 3313,
									"id": 516,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@checkUpkeep_848": {
									"entryPoint": 2916,
									"id": 848,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@depositToAave_892": {
									"entryPoint": 2840,
									"id": 892,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deposit_918": {
									"entryPoint": null,
									"id": 918,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@executeProposal_733": {
									"entryPoint": 1650,
									"id": 733,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getBalance_930": {
									"entryPoint": null,
									"id": 930,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getETHPrice_787": {
									"entryPoint": 3179,
									"id": 787,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@governanceToken_418": {
									"entryPoint": null,
									"id": 418,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lendingPool_424": {
									"entryPoint": null,
									"id": 424,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@members_411": {
									"entryPoint": null,
									"id": 411,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minVoteDuration_427": {
									"entryPoint": null,
									"id": 427,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_171": {
									"entryPoint": null,
									"id": 171,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@performUpkeep_869": {
									"entryPoint": 2489,
									"id": 869,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@proposals_415": {
									"entryPoint": 1566,
									"id": 415,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@proposeFunding_594": {
									"entryPoint": 2113,
									"id": 594,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@releaseFunds_768": {
									"entryPoint": 2518,
									"id": 768,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_202": {
									"entryPoint": 3160,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_230": {
									"entryPoint": 3359,
									"id": 230,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@vote_665": {
									"entryPoint": 967,
									"id": 665,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawFromAave_914": {
									"entryPoint": 2726,
									"id": 914,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256": {
									"entryPoint": 3620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes_calldata_ptr": {
									"entryPoint": 3662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 3971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_uint80_fromMemory": {
									"entryPoint": 3941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_address_payable_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address_t_rational_0_by_1__to_t_address_t_uint256_t_address_t_uint16__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 3772,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IAaveLendingPool_$386__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$329__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_018f1785b284bc32ec1cf1cfd9ba8a094a3a5f66c46eb2d687bcaae2c8645394__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_23dd702789a702d582f99b58a434cec47cd541852e1263083521a4179a192189__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_36ba02d776fd732ac627a72d2a4bcd896afdeadba8694171733d88c6775413e0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_58f47ea4e737df2d9cc4764db26c111751884cf0a1856aca9f4c66cadc811e1b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_59eae394831db960eed2b1204907b57c5e1f65d6dfb40c9a41314d384a8055da__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_66d1585b1e27cc9397312cfc1f57a2ea0c14475d5f53f4e39e5c98660bad98b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6935cc29c7ba471c59aca2c328cd747610ac8fe82d4a965557fad75d9c8d99a0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70781312560918a61d3b5e274a24dd70cd2d0901f970caf6cb5f94161f7cdb19__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c8fc0753689749684a9e551425bc1a5c3140528f7a45ea255ec00e51d97963b5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_payable_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3877,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3834,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 3566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10615:8",
										"nodeType": "YulBlock",
										"src": "0:10615:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:156:8",
													"nodeType": "YulBlock",
													"src": "84:156:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:8",
																"nodeType": "YulBlock",
																"src": "130:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:8",
																					"nodeType": "YulLiteral",
																					"src": "139:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:8",
																					"nodeType": "YulLiteral",
																					"src": "142:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:8"
																			},
																			"nativeSrc": "132:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:8"
																		},
																		"nativeSrc": "132:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:8"
																		},
																		"nativeSrc": "101:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:8",
																		"nodeType": "YulLiteral",
																		"src": "126:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:8"
																},
																"nativeSrc": "97:32:8",
																"nodeType": "YulFunctionCall",
																"src": "97:32:8"
															},
															"nativeSrc": "94:52:8",
															"nodeType": "YulIf",
															"src": "94:52:8"
														},
														{
															"nativeSrc": "155:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "155:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "168:1:8",
																"nodeType": "YulLiteral",
																"src": "168:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "159:5:8",
																	"nodeType": "YulTypedName",
																	"src": "159:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "178:32:8",
															"nodeType": "YulAssignment",
															"src": "178:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "200:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "200:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "187:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:12:8"
																},
																"nativeSrc": "187:23:8",
																"nodeType": "YulFunctionCall",
																"src": "187:23:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "178:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "178:5:8"
																}
															]
														},
														{
															"nativeSrc": "219:15:8",
															"nodeType": "YulAssignment",
															"src": "219:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "229:5:8",
																"nodeType": "YulIdentifier",
																"src": "229:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "219:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "219:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:226:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:8",
														"nodeType": "YulTypedName",
														"src": "50:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:8",
														"nodeType": "YulTypedName",
														"src": "61:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:8",
														"nodeType": "YulTypedName",
														"src": "73:6:8",
														"type": ""
													}
												],
												"src": "14:226:8"
											},
											{
												"body": {
													"nativeSrc": "496:336:8",
													"nodeType": "YulBlock",
													"src": "496:336:8",
													"statements": [
														{
															"nativeSrc": "506:27:8",
															"nodeType": "YulAssignment",
															"src": "506:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "518:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "518:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "529:3:8",
																		"nodeType": "YulLiteral",
																		"src": "529:3:8",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "514:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "514:3:8"
																},
																"nativeSrc": "514:19:8",
																"nodeType": "YulFunctionCall",
																"src": "514:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "506:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "506:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "549:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "549:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "564:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "564:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "580:3:8",
																								"nodeType": "YulLiteral",
																								"src": "580:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "585:1:8",
																								"nodeType": "YulLiteral",
																								"src": "585:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "576:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "576:3:8"
																						},
																						"nativeSrc": "576:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "576:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "589:1:8",
																						"nodeType": "YulLiteral",
																						"src": "589:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "572:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "572:3:8"
																				},
																				"nativeSrc": "572:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "572:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "560:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "560:3:8"
																		},
																		"nativeSrc": "560:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "560:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "542:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "542:6:8"
																},
																"nativeSrc": "542:51:8",
																"nodeType": "YulFunctionCall",
																"src": "542:51:8"
															},
															"nativeSrc": "542:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "542:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "613:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "613:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "624:2:8",
																				"nodeType": "YulLiteral",
																				"src": "624:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "609:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "609:3:8"
																		},
																		"nativeSrc": "609:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "609:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "629:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "602:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "602:6:8"
																},
																"nativeSrc": "602:34:8",
																"nodeType": "YulFunctionCall",
																"src": "602:34:8"
															},
															"nativeSrc": "602:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "602:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "656:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "656:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "667:2:8",
																				"nodeType": "YulLiteral",
																				"src": "667:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:8"
																		},
																		"nativeSrc": "652:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "652:18:8"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "672:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "672:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "645:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "645:6:8"
																},
																"nativeSrc": "645:34:8",
																"nodeType": "YulFunctionCall",
																"src": "645:34:8"
															},
															"nativeSrc": "645:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "645:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "699:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "699:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "710:2:8",
																				"nodeType": "YulLiteral",
																				"src": "710:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "695:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "695:3:8"
																		},
																		"nativeSrc": "695:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "695:18:8"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "715:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "715:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "688:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "688:6:8"
																},
																"nativeSrc": "688:34:8",
																"nodeType": "YulFunctionCall",
																"src": "688:34:8"
															},
															"nativeSrc": "688:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "688:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "742:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "742:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "753:3:8",
																				"nodeType": "YulLiteral",
																				"src": "753:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "738:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "738:3:8"
																		},
																		"nativeSrc": "738:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "738:19:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value4",
																						"nativeSrc": "773:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "773:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "766:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "766:6:8"
																				},
																				"nativeSrc": "766:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "766:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "759:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "759:6:8"
																		},
																		"nativeSrc": "759:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "759:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "731:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "731:6:8"
																},
																"nativeSrc": "731:51:8",
																"nodeType": "YulFunctionCall",
																"src": "731:51:8"
															},
															"nativeSrc": "731:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "731:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "802:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "802:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "813:3:8",
																				"nodeType": "YulLiteral",
																				"src": "813:3:8",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "798:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "798:3:8"
																		},
																		"nativeSrc": "798:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "798:19:8"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "819:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "819:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "791:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "791:6:8"
																},
																"nativeSrc": "791:35:8",
																"nodeType": "YulFunctionCall",
																"src": "791:35:8"
															},
															"nativeSrc": "791:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "791:35:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_address_payable_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed",
												"nativeSrc": "245:587:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "425:9:8",
														"nodeType": "YulTypedName",
														"src": "425:9:8",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "436:6:8",
														"nodeType": "YulTypedName",
														"src": "436:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "444:6:8",
														"nodeType": "YulTypedName",
														"src": "444:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "452:6:8",
														"nodeType": "YulTypedName",
														"src": "452:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "460:6:8",
														"nodeType": "YulTypedName",
														"src": "460:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "468:6:8",
														"nodeType": "YulTypedName",
														"src": "468:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "476:6:8",
														"nodeType": "YulTypedName",
														"src": "476:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "487:4:8",
														"nodeType": "YulTypedName",
														"src": "487:4:8",
														"type": ""
													}
												],
												"src": "245:587:8"
											},
											{
												"body": {
													"nativeSrc": "882:86:8",
													"nodeType": "YulBlock",
													"src": "882:86:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "946:16:8",
																"nodeType": "YulBlock",
																"src": "946:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "955:1:8",
																					"nodeType": "YulLiteral",
																					"src": "955:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "958:1:8",
																					"nodeType": "YulLiteral",
																					"src": "958:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "948:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "948:6:8"
																			},
																			"nativeSrc": "948:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "948:12:8"
																		},
																		"nativeSrc": "948:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "948:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "905:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "905:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "916:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "916:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "931:3:8",
																										"nodeType": "YulLiteral",
																										"src": "931:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "936:1:8",
																										"nodeType": "YulLiteral",
																										"src": "936:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "927:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "927:3:8"
																								},
																								"nativeSrc": "927:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "927:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "940:1:8",
																								"nodeType": "YulLiteral",
																								"src": "940:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "923:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "923:3:8"
																						},
																						"nativeSrc": "923:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "923:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "912:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "912:3:8"
																				},
																				"nativeSrc": "912:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "912:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "902:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "902:2:8"
																		},
																		"nativeSrc": "902:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "902:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "895:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:8"
																},
																"nativeSrc": "895:50:8",
																"nodeType": "YulFunctionCall",
																"src": "895:50:8"
															},
															"nativeSrc": "892:70:8",
															"nodeType": "YulIf",
															"src": "892:70:8"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "837:131:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "871:5:8",
														"nodeType": "YulTypedName",
														"src": "871:5:8",
														"type": ""
													}
												],
												"src": "837:131:8"
											},
											{
												"body": {
													"nativeSrc": "1043:177:8",
													"nodeType": "YulBlock",
													"src": "1043:177:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1089:16:8",
																"nodeType": "YulBlock",
																"src": "1089:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1098:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1098:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1101:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1101:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1091:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1091:6:8"
																			},
																			"nativeSrc": "1091:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1091:12:8"
																		},
																		"nativeSrc": "1091:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1091:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1064:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1064:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1073:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1073:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1060:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1060:3:8"
																		},
																		"nativeSrc": "1060:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1060:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1085:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1085:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1056:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1056:3:8"
																},
																"nativeSrc": "1056:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1056:32:8"
															},
															"nativeSrc": "1053:52:8",
															"nodeType": "YulIf",
															"src": "1053:52:8"
														},
														{
															"nativeSrc": "1114:36:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1114:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1140:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1140:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1127:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1127:12:8"
																},
																"nativeSrc": "1127:23:8",
																"nodeType": "YulFunctionCall",
																"src": "1127:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1118:5:8",
																	"nodeType": "YulTypedName",
																	"src": "1118:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1184:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1184:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1159:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "1159:24:8"
																},
																"nativeSrc": "1159:31:8",
																"nodeType": "YulFunctionCall",
																"src": "1159:31:8"
															},
															"nativeSrc": "1159:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "1159:31:8"
														},
														{
															"nativeSrc": "1199:15:8",
															"nodeType": "YulAssignment",
															"src": "1199:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "1209:5:8",
																"nodeType": "YulIdentifier",
																"src": "1209:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1199:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1199:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "973:247:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1009:9:8",
														"nodeType": "YulTypedName",
														"src": "1009:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1020:7:8",
														"nodeType": "YulTypedName",
														"src": "1020:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1032:6:8",
														"nodeType": "YulTypedName",
														"src": "1032:6:8",
														"type": ""
													}
												],
												"src": "973:247:8"
											},
											{
												"body": {
													"nativeSrc": "1320:92:8",
													"nodeType": "YulBlock",
													"src": "1320:92:8",
													"statements": [
														{
															"nativeSrc": "1330:26:8",
															"nodeType": "YulAssignment",
															"src": "1330:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1342:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1342:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1353:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1353:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1338:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1338:3:8"
																},
																"nativeSrc": "1338:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1338:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1330:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1330:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1372:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1372:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1397:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1397:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1390:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "1390:6:8"
																				},
																				"nativeSrc": "1390:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1390:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1383:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1383:6:8"
																		},
																		"nativeSrc": "1383:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1383:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1365:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1365:6:8"
																},
																"nativeSrc": "1365:41:8",
																"nodeType": "YulFunctionCall",
																"src": "1365:41:8"
															},
															"nativeSrc": "1365:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "1365:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1225:187:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1289:9:8",
														"nodeType": "YulTypedName",
														"src": "1289:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1300:6:8",
														"nodeType": "YulTypedName",
														"src": "1300:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1311:4:8",
														"nodeType": "YulTypedName",
														"src": "1311:4:8",
														"type": ""
													}
												],
												"src": "1225:187:8"
											},
											{
												"body": {
													"nativeSrc": "1518:76:8",
													"nodeType": "YulBlock",
													"src": "1518:76:8",
													"statements": [
														{
															"nativeSrc": "1528:26:8",
															"nodeType": "YulAssignment",
															"src": "1528:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1540:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1540:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1551:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1551:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1536:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1536:3:8"
																},
																"nativeSrc": "1536:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1536:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1528:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1528:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1570:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1570:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1581:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1581:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1563:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1563:6:8"
																},
																"nativeSrc": "1563:25:8",
																"nodeType": "YulFunctionCall",
																"src": "1563:25:8"
															},
															"nativeSrc": "1563:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "1563:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1417:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1487:9:8",
														"nodeType": "YulTypedName",
														"src": "1487:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1498:6:8",
														"nodeType": "YulTypedName",
														"src": "1498:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1509:4:8",
														"nodeType": "YulTypedName",
														"src": "1509:4:8",
														"type": ""
													}
												],
												"src": "1417:177:8"
											},
											{
												"body": {
													"nativeSrc": "1694:280:8",
													"nodeType": "YulBlock",
													"src": "1694:280:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1740:16:8",
																"nodeType": "YulBlock",
																"src": "1740:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1749:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1749:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1752:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1752:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1742:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1742:6:8"
																			},
																			"nativeSrc": "1742:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1742:12:8"
																		},
																		"nativeSrc": "1742:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1742:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1715:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1715:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1724:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1724:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1711:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1711:3:8"
																		},
																		"nativeSrc": "1711:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1711:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1736:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1736:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1707:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1707:3:8"
																},
																"nativeSrc": "1707:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1707:32:8"
															},
															"nativeSrc": "1704:52:8",
															"nodeType": "YulIf",
															"src": "1704:52:8"
														},
														{
															"nativeSrc": "1765:36:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1765:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1791:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1791:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1778:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1778:12:8"
																},
																"nativeSrc": "1778:23:8",
																"nodeType": "YulFunctionCall",
																"src": "1778:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1769:5:8",
																	"nodeType": "YulTypedName",
																	"src": "1769:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1835:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1835:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1810:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "1810:24:8"
																},
																"nativeSrc": "1810:31:8",
																"nodeType": "YulFunctionCall",
																"src": "1810:31:8"
															},
															"nativeSrc": "1810:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "1810:31:8"
														},
														{
															"nativeSrc": "1850:15:8",
															"nodeType": "YulAssignment",
															"src": "1850:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "1860:5:8",
																"nodeType": "YulIdentifier",
																"src": "1860:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1850:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1850:6:8"
																}
															]
														},
														{
															"nativeSrc": "1874:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1874:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1889:1:8",
																"nodeType": "YulLiteral",
																"src": "1889:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1878:7:8",
																	"nodeType": "YulTypedName",
																	"src": "1878:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1899:43:8",
															"nodeType": "YulAssignment",
															"src": "1899:43:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1927:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1927:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1938:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1938:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1923:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1923:3:8"
																		},
																		"nativeSrc": "1923:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1923:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1910:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1910:12:8"
																},
																"nativeSrc": "1910:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1910:32:8"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1899:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1899:7:8"
																}
															]
														},
														{
															"nativeSrc": "1951:17:8",
															"nodeType": "YulAssignment",
															"src": "1951:17:8",
															"value": {
																"name": "value_1",
																"nativeSrc": "1961:7:8",
																"nodeType": "YulIdentifier",
																"src": "1961:7:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1951:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1951:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nativeSrc": "1599:375:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1652:9:8",
														"nodeType": "YulTypedName",
														"src": "1652:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1663:7:8",
														"nodeType": "YulTypedName",
														"src": "1663:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1675:6:8",
														"nodeType": "YulTypedName",
														"src": "1675:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1683:6:8",
														"nodeType": "YulTypedName",
														"src": "1683:6:8",
														"type": ""
													}
												],
												"src": "1599:375:8"
											},
											{
												"body": {
													"nativeSrc": "2068:497:8",
													"nodeType": "YulBlock",
													"src": "2068:497:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2114:16:8",
																"nodeType": "YulBlock",
																"src": "2114:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2123:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2123:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2126:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2126:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2116:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2116:6:8"
																			},
																			"nativeSrc": "2116:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2116:12:8"
																		},
																		"nativeSrc": "2116:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2116:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2089:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2089:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2098:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2098:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2085:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2085:3:8"
																		},
																		"nativeSrc": "2085:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2085:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2110:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2110:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2081:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2081:3:8"
																},
																"nativeSrc": "2081:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2081:32:8"
															},
															"nativeSrc": "2078:52:8",
															"nodeType": "YulIf",
															"src": "2078:52:8"
														},
														{
															"nativeSrc": "2139:37:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2139:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2166:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2166:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2153:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2153:12:8"
																},
																"nativeSrc": "2153:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2153:23:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "2143:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2143:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2219:16:8",
																"nodeType": "YulBlock",
																"src": "2219:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2228:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2228:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2231:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2231:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2221:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:8"
																			},
																			"nativeSrc": "2221:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2221:12:8"
																		},
																		"nativeSrc": "2221:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2191:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2191:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2199:18:8",
																		"nodeType": "YulLiteral",
																		"src": "2199:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2188:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2188:2:8"
																},
																"nativeSrc": "2188:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2188:30:8"
															},
															"nativeSrc": "2185:50:8",
															"nodeType": "YulIf",
															"src": "2185:50:8"
														},
														{
															"nativeSrc": "2244:32:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2244:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2258:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2258:9:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2269:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2269:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2254:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2254:3:8"
																},
																"nativeSrc": "2254:22:8",
																"nodeType": "YulFunctionCall",
																"src": "2254:22:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2248:2:8",
																	"nodeType": "YulTypedName",
																	"src": "2248:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2324:16:8",
																"nodeType": "YulBlock",
																"src": "2324:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2333:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2333:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2336:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2336:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2326:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2326:6:8"
																			},
																			"nativeSrc": "2326:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2326:12:8"
																		},
																		"nativeSrc": "2326:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2326:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "2303:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "2303:2:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2307:4:8",
																						"nodeType": "YulLiteral",
																						"src": "2307:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2299:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2299:3:8"
																				},
																				"nativeSrc": "2299:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2299:13:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2314:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2314:7:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2295:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2295:3:8"
																		},
																		"nativeSrc": "2295:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2295:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2288:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2288:6:8"
																},
																"nativeSrc": "2288:35:8",
																"nodeType": "YulFunctionCall",
																"src": "2288:35:8"
															},
															"nativeSrc": "2285:55:8",
															"nodeType": "YulIf",
															"src": "2285:55:8"
														},
														{
															"nativeSrc": "2349:30:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2349:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2376:2:8",
																		"nodeType": "YulIdentifier",
																		"src": "2376:2:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2363:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2363:12:8"
																},
																"nativeSrc": "2363:16:8",
																"nodeType": "YulFunctionCall",
																"src": "2363:16:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2353:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2353:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2422:16:8",
																"nodeType": "YulBlock",
																"src": "2422:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2431:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2431:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2434:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2434:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2424:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2424:6:8"
																			},
																			"nativeSrc": "2424:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2424:12:8"
																		},
																		"nativeSrc": "2424:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2424:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2394:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2394:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2402:18:8",
																		"nodeType": "YulLiteral",
																		"src": "2402:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2391:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2391:2:8"
																},
																"nativeSrc": "2391:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2391:30:8"
															},
															"nativeSrc": "2388:50:8",
															"nodeType": "YulIf",
															"src": "2388:50:8"
														},
														{
															"body": {
																"nativeSrc": "2488:16:8",
																"nodeType": "YulBlock",
																"src": "2488:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2497:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2497:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2500:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2500:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2490:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2490:6:8"
																			},
																			"nativeSrc": "2490:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2490:12:8"
																		},
																		"nativeSrc": "2490:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2490:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "2461:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "2461:2:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2465:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2465:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2457:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2457:3:8"
																				},
																				"nativeSrc": "2457:15:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2457:15:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2474:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2474:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2453:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2453:3:8"
																		},
																		"nativeSrc": "2453:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2453:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2479:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "2479:7:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2450:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2450:2:8"
																},
																"nativeSrc": "2450:37:8",
																"nodeType": "YulFunctionCall",
																"src": "2450:37:8"
															},
															"nativeSrc": "2447:57:8",
															"nodeType": "YulIf",
															"src": "2447:57:8"
														},
														{
															"nativeSrc": "2513:21:8",
															"nodeType": "YulAssignment",
															"src": "2513:21:8",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2527:2:8",
																		"nodeType": "YulIdentifier",
																		"src": "2527:2:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2531:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2531:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2523:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2523:3:8"
																},
																"nativeSrc": "2523:11:8",
																"nodeType": "YulFunctionCall",
																"src": "2523:11:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2513:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2513:6:8"
																}
															]
														},
														{
															"nativeSrc": "2543:16:8",
															"nodeType": "YulAssignment",
															"src": "2543:16:8",
															"value": {
																"name": "length",
																"nativeSrc": "2553:6:8",
																"nodeType": "YulIdentifier",
																"src": "2553:6:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2543:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2543:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptr",
												"nativeSrc": "1979:586:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2026:9:8",
														"nodeType": "YulTypedName",
														"src": "2026:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2037:7:8",
														"nodeType": "YulTypedName",
														"src": "2037:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2049:6:8",
														"nodeType": "YulTypedName",
														"src": "2049:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2057:6:8",
														"nodeType": "YulTypedName",
														"src": "2057:6:8",
														"type": ""
													}
												],
												"src": "1979:586:8"
											},
											{
												"body": {
													"nativeSrc": "2711:356:8",
													"nodeType": "YulBlock",
													"src": "2711:356:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2728:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2728:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "2753:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2753:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2746:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2746:6:8"
																				},
																				"nativeSrc": "2746:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2746:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2739:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2739:6:8"
																		},
																		"nativeSrc": "2739:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2739:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2721:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2721:6:8"
																},
																"nativeSrc": "2721:41:8",
																"nodeType": "YulFunctionCall",
																"src": "2721:41:8"
															},
															"nativeSrc": "2721:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "2721:41:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2782:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2782:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2793:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2793:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2778:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2778:3:8"
																		},
																		"nativeSrc": "2778:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2778:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2798:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2798:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2771:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2771:6:8"
																},
																"nativeSrc": "2771:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2771:30:8"
															},
															"nativeSrc": "2771:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "2771:30:8"
														},
														{
															"nativeSrc": "2810:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2810:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2830:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2830:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2824:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2824:5:8"
																},
																"nativeSrc": "2824:13:8",
																"nodeType": "YulFunctionCall",
																"src": "2824:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2814:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2814:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2857:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2857:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2868:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2868:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2853:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2853:3:8"
																		},
																		"nativeSrc": "2853:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2853:18:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2873:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2873:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2846:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2846:6:8"
																},
																"nativeSrc": "2846:34:8",
																"nodeType": "YulFunctionCall",
																"src": "2846:34:8"
															},
															"nativeSrc": "2846:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "2846:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2899:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2899:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2910:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2910:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2895:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2895:3:8"
																		},
																		"nativeSrc": "2895:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2895:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "2919:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2919:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2927:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2927:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2915:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2915:3:8"
																		},
																		"nativeSrc": "2915:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2915:15:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2932:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2932:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2889:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2889:5:8"
																},
																"nativeSrc": "2889:50:8",
																"nodeType": "YulFunctionCall",
																"src": "2889:50:8"
															},
															"nativeSrc": "2889:50:8",
															"nodeType": "YulExpressionStatement",
															"src": "2889:50:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2963:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2963:9:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2974:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2974:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2959:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2959:3:8"
																				},
																				"nativeSrc": "2959:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2959:22:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2983:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2983:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2955:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2955:3:8"
																		},
																		"nativeSrc": "2955:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2955:31:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2988:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2988:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2948:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2948:6:8"
																},
																"nativeSrc": "2948:42:8",
																"nodeType": "YulFunctionCall",
																"src": "2948:42:8"
															},
															"nativeSrc": "2948:42:8",
															"nodeType": "YulExpressionStatement",
															"src": "2948:42:8"
														},
														{
															"nativeSrc": "2999:62:8",
															"nodeType": "YulAssignment",
															"src": "2999:62:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3015:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3015:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "3034:6:8",
																								"nodeType": "YulIdentifier",
																								"src": "3034:6:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3042:2:8",
																								"nodeType": "YulLiteral",
																								"src": "3042:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3030:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "3030:3:8"
																						},
																						"nativeSrc": "3030:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3030:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3051:2:8",
																								"nodeType": "YulLiteral",
																								"src": "3051:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "3047:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "3047:3:8"
																						},
																						"nativeSrc": "3047:7:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3047:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3026:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3026:3:8"
																				},
																				"nativeSrc": "3026:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3026:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3011:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3011:3:8"
																		},
																		"nativeSrc": "3011:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3011:45:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3058:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3058:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3007:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3007:3:8"
																},
																"nativeSrc": "3007:54:8",
																"nodeType": "YulFunctionCall",
																"src": "3007:54:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2999:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2999:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "2570:497:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2672:9:8",
														"nodeType": "YulTypedName",
														"src": "2672:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2683:6:8",
														"nodeType": "YulTypedName",
														"src": "2683:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2691:6:8",
														"nodeType": "YulTypedName",
														"src": "2691:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2702:4:8",
														"nodeType": "YulTypedName",
														"src": "2702:4:8",
														"type": ""
													}
												],
												"src": "2570:497:8"
											},
											{
												"body": {
													"nativeSrc": "3173:102:8",
													"nodeType": "YulBlock",
													"src": "3173:102:8",
													"statements": [
														{
															"nativeSrc": "3183:26:8",
															"nodeType": "YulAssignment",
															"src": "3183:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3195:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3195:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3206:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3206:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3191:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3191:3:8"
																},
																"nativeSrc": "3191:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3191:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3183:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3183:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3225:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3225:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3240:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3240:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3256:3:8",
																								"nodeType": "YulLiteral",
																								"src": "3256:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3261:1:8",
																								"nodeType": "YulLiteral",
																								"src": "3261:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3252:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "3252:3:8"
																						},
																						"nativeSrc": "3252:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3252:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3265:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3265:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3248:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3248:3:8"
																				},
																				"nativeSrc": "3248:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3248:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3236:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3236:3:8"
																		},
																		"nativeSrc": "3236:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3236:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3218:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3218:6:8"
																},
																"nativeSrc": "3218:51:8",
																"nodeType": "YulFunctionCall",
																"src": "3218:51:8"
															},
															"nativeSrc": "3218:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "3218:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3072:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3142:9:8",
														"nodeType": "YulTypedName",
														"src": "3142:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3153:6:8",
														"nodeType": "YulTypedName",
														"src": "3153:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3164:4:8",
														"nodeType": "YulTypedName",
														"src": "3164:4:8",
														"type": ""
													}
												],
												"src": "3072:203:8"
											},
											{
												"body": {
													"nativeSrc": "3405:102:8",
													"nodeType": "YulBlock",
													"src": "3405:102:8",
													"statements": [
														{
															"nativeSrc": "3415:26:8",
															"nodeType": "YulAssignment",
															"src": "3415:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3427:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3427:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3438:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3438:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3423:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3423:3:8"
																},
																"nativeSrc": "3423:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3423:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3415:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3415:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3457:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3457:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3472:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3472:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3488:3:8",
																								"nodeType": "YulLiteral",
																								"src": "3488:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3493:1:8",
																								"nodeType": "YulLiteral",
																								"src": "3493:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3484:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "3484:3:8"
																						},
																						"nativeSrc": "3484:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3484:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3497:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3497:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3480:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:8"
																				},
																				"nativeSrc": "3480:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3468:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3468:3:8"
																		},
																		"nativeSrc": "3468:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3468:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3450:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3450:6:8"
																},
																"nativeSrc": "3450:51:8",
																"nodeType": "YulFunctionCall",
																"src": "3450:51:8"
															},
															"nativeSrc": "3450:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "3450:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IAaveLendingPool_$386__to_t_address__fromStack_reversed",
												"nativeSrc": "3280:227:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3374:9:8",
														"nodeType": "YulTypedName",
														"src": "3374:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3385:6:8",
														"nodeType": "YulTypedName",
														"src": "3385:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3396:4:8",
														"nodeType": "YulTypedName",
														"src": "3396:4:8",
														"type": ""
													}
												],
												"src": "3280:227:8"
											},
											{
												"body": {
													"nativeSrc": "3627:102:8",
													"nodeType": "YulBlock",
													"src": "3627:102:8",
													"statements": [
														{
															"nativeSrc": "3637:26:8",
															"nodeType": "YulAssignment",
															"src": "3637:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3649:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3649:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3660:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3660:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3645:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3645:3:8"
																},
																"nativeSrc": "3645:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3645:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3637:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3637:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3679:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3679:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3694:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3694:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3710:3:8",
																								"nodeType": "YulLiteral",
																								"src": "3710:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3715:1:8",
																								"nodeType": "YulLiteral",
																								"src": "3715:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3706:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "3706:3:8"
																						},
																						"nativeSrc": "3706:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3706:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3719:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3719:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3702:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3702:3:8"
																				},
																				"nativeSrc": "3702:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3702:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3690:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3690:3:8"
																		},
																		"nativeSrc": "3690:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3690:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3672:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3672:6:8"
																},
																"nativeSrc": "3672:51:8",
																"nodeType": "YulFunctionCall",
																"src": "3672:51:8"
															},
															"nativeSrc": "3672:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "3672:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$329__to_t_address__fromStack_reversed",
												"nativeSrc": "3512:217:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3596:9:8",
														"nodeType": "YulTypedName",
														"src": "3596:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3607:6:8",
														"nodeType": "YulTypedName",
														"src": "3607:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3618:4:8",
														"nodeType": "YulTypedName",
														"src": "3618:4:8",
														"type": ""
													}
												],
												"src": "3512:217:8"
											},
											{
												"body": {
													"nativeSrc": "3908:166:8",
													"nodeType": "YulBlock",
													"src": "3908:166:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3925:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3925:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3936:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3936:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3918:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3918:6:8"
																},
																"nativeSrc": "3918:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3918:21:8"
															},
															"nativeSrc": "3918:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "3918:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3959:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3959:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3970:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3970:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3955:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3955:3:8"
																		},
																		"nativeSrc": "3955:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3955:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3975:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3975:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3948:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3948:6:8"
																},
																"nativeSrc": "3948:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3948:30:8"
															},
															"nativeSrc": "3948:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "3948:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3998:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3998:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4009:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4009:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3994:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3994:3:8"
																		},
																		"nativeSrc": "3994:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3994:18:8"
																	},
																	{
																		"hexValue": "4e6f7420612044414f206d656d626572",
																		"kind": "string",
																		"nativeSrc": "4014:18:8",
																		"nodeType": "YulLiteral",
																		"src": "4014:18:8",
																		"type": "",
																		"value": "Not a DAO member"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3987:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3987:6:8"
																},
																"nativeSrc": "3987:46:8",
																"nodeType": "YulFunctionCall",
																"src": "3987:46:8"
															},
															"nativeSrc": "3987:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "3987:46:8"
														},
														{
															"nativeSrc": "4042:26:8",
															"nodeType": "YulAssignment",
															"src": "4042:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4054:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4054:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4065:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4065:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4050:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4050:3:8"
																},
																"nativeSrc": "4050:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4050:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4042:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4042:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c8fc0753689749684a9e551425bc1a5c3140528f7a45ea255ec00e51d97963b5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3734:340:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3885:9:8",
														"nodeType": "YulTypedName",
														"src": "3885:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3899:4:8",
														"nodeType": "YulTypedName",
														"src": "3899:4:8",
														"type": ""
													}
												],
												"src": "3734:340:8"
											},
											{
												"body": {
													"nativeSrc": "4111:95:8",
													"nodeType": "YulBlock",
													"src": "4111:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4128:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4128:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4135:3:8",
																				"nodeType": "YulLiteral",
																				"src": "4135:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4140:10:8",
																				"nodeType": "YulLiteral",
																				"src": "4140:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4131:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4131:3:8"
																		},
																		"nativeSrc": "4131:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4131:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4121:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4121:6:8"
																},
																"nativeSrc": "4121:31:8",
																"nodeType": "YulFunctionCall",
																"src": "4121:31:8"
															},
															"nativeSrc": "4121:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "4121:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4168:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4168:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4171:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4171:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4161:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4161:6:8"
																},
																"nativeSrc": "4161:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4161:15:8"
															},
															"nativeSrc": "4161:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "4161:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4192:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4192:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4195:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4195:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4185:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4185:6:8"
																},
																"nativeSrc": "4185:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4185:15:8"
															},
															"nativeSrc": "4185:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "4185:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "4079:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "4079:127:8"
											},
											{
												"body": {
													"nativeSrc": "4385:163:8",
													"nodeType": "YulBlock",
													"src": "4385:163:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4402:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4402:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4413:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4413:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4395:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4395:6:8"
																},
																"nativeSrc": "4395:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4395:21:8"
															},
															"nativeSrc": "4395:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "4395:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4436:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4436:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4447:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4447:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4432:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4432:3:8"
																		},
																		"nativeSrc": "4432:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4432:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4452:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4452:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4425:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4425:6:8"
																},
																"nativeSrc": "4425:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4425:30:8"
															},
															"nativeSrc": "4425:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "4425:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4475:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4475:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4486:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4486:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4471:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4471:3:8"
																		},
																		"nativeSrc": "4471:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4471:18:8"
																	},
																	{
																		"hexValue": "416c726561647920766f746564",
																		"kind": "string",
																		"nativeSrc": "4491:15:8",
																		"nodeType": "YulLiteral",
																		"src": "4491:15:8",
																		"type": "",
																		"value": "Already voted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4464:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4464:6:8"
																},
																"nativeSrc": "4464:43:8",
																"nodeType": "YulFunctionCall",
																"src": "4464:43:8"
															},
															"nativeSrc": "4464:43:8",
															"nodeType": "YulExpressionStatement",
															"src": "4464:43:8"
														},
														{
															"nativeSrc": "4516:26:8",
															"nodeType": "YulAssignment",
															"src": "4516:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4528:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4528:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4539:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4539:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4524:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4524:3:8"
																},
																"nativeSrc": "4524:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4524:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4516:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4516:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4211:337:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4362:9:8",
														"nodeType": "YulTypedName",
														"src": "4362:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4376:4:8",
														"nodeType": "YulTypedName",
														"src": "4376:4:8",
														"type": ""
													}
												],
												"src": "4211:337:8"
											},
											{
												"body": {
													"nativeSrc": "4727:169:8",
													"nodeType": "YulBlock",
													"src": "4727:169:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4744:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4744:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4755:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4755:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4737:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4737:6:8"
																},
																"nativeSrc": "4737:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4737:21:8"
															},
															"nativeSrc": "4737:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "4737:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4778:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4778:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4789:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4789:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4774:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4774:3:8"
																		},
																		"nativeSrc": "4774:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4774:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4794:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4794:2:8",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4767:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4767:6:8"
																},
																"nativeSrc": "4767:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4767:30:8"
															},
															"nativeSrc": "4767:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "4767:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4817:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4817:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4828:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4828:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4813:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4813:3:8"
																		},
																		"nativeSrc": "4813:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4813:18:8"
																	},
																	{
																		"hexValue": "566f74696e6720706572696f6420656e646564",
																		"kind": "string",
																		"nativeSrc": "4833:21:8",
																		"nodeType": "YulLiteral",
																		"src": "4833:21:8",
																		"type": "",
																		"value": "Voting period ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4806:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4806:6:8"
																},
																"nativeSrc": "4806:49:8",
																"nodeType": "YulFunctionCall",
																"src": "4806:49:8"
															},
															"nativeSrc": "4806:49:8",
															"nodeType": "YulExpressionStatement",
															"src": "4806:49:8"
														},
														{
															"nativeSrc": "4864:26:8",
															"nodeType": "YulAssignment",
															"src": "4864:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4876:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4876:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4887:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4887:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4872:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4872:3:8"
																},
																"nativeSrc": "4872:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4872:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4864:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4864:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_36ba02d776fd732ac627a72d2a4bcd896afdeadba8694171733d88c6775413e0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4553:343:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4704:9:8",
														"nodeType": "YulTypedName",
														"src": "4704:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4718:4:8",
														"nodeType": "YulTypedName",
														"src": "4718:4:8",
														"type": ""
													}
												],
												"src": "4553:343:8"
											},
											{
												"body": {
													"nativeSrc": "4982:149:8",
													"nodeType": "YulBlock",
													"src": "4982:149:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5028:16:8",
																"nodeType": "YulBlock",
																"src": "5028:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5037:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5037:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5040:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5040:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5030:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5030:6:8"
																			},
																			"nativeSrc": "5030:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5030:12:8"
																		},
																		"nativeSrc": "5030:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5030:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5003:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5003:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5012:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5012:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4999:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4999:3:8"
																		},
																		"nativeSrc": "4999:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4999:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5024:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5024:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4995:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4995:3:8"
																},
																"nativeSrc": "4995:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4995:32:8"
															},
															"nativeSrc": "4992:52:8",
															"nodeType": "YulIf",
															"src": "4992:52:8"
														},
														{
															"nativeSrc": "5053:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5053:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5066:1:8",
																"nodeType": "YulLiteral",
																"src": "5066:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5057:5:8",
																	"nodeType": "YulTypedName",
																	"src": "5057:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5076:25:8",
															"nodeType": "YulAssignment",
															"src": "5076:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5091:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5091:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5085:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5085:5:8"
																},
																"nativeSrc": "5085:16:8",
																"nodeType": "YulFunctionCall",
																"src": "5085:16:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5076:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5076:5:8"
																}
															]
														},
														{
															"nativeSrc": "5110:15:8",
															"nodeType": "YulAssignment",
															"src": "5110:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "5120:5:8",
																"nodeType": "YulIdentifier",
																"src": "5120:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5110:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5110:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "4901:230:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4948:9:8",
														"nodeType": "YulTypedName",
														"src": "4948:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4959:7:8",
														"nodeType": "YulTypedName",
														"src": "4959:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4971:6:8",
														"nodeType": "YulTypedName",
														"src": "4971:6:8",
														"type": ""
													}
												],
												"src": "4901:230:8"
											},
											{
												"body": {
													"nativeSrc": "5310:225:8",
													"nodeType": "YulBlock",
													"src": "5310:225:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5327:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5327:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5338:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5338:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5320:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5320:6:8"
																},
																"nativeSrc": "5320:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5320:21:8"
															},
															"nativeSrc": "5320:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "5320:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5361:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5361:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5372:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5372:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5357:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5357:3:8"
																		},
																		"nativeSrc": "5357:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5357:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5377:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5377:2:8",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5350:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5350:6:8"
																},
																"nativeSrc": "5350:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5350:30:8"
															},
															"nativeSrc": "5350:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "5350:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5400:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5400:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5411:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5411:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5396:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5396:3:8"
																		},
																		"nativeSrc": "5396:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5396:18:8"
																	},
																	{
																		"hexValue": "4d75737420686f6c6420676f7665726e616e636520746f6b656e7320746f2076",
																		"kind": "string",
																		"nativeSrc": "5416:34:8",
																		"nodeType": "YulLiteral",
																		"src": "5416:34:8",
																		"type": "",
																		"value": "Must hold governance tokens to v"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5389:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5389:6:8"
																},
																"nativeSrc": "5389:62:8",
																"nodeType": "YulFunctionCall",
																"src": "5389:62:8"
															},
															"nativeSrc": "5389:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "5389:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5471:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5471:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5482:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5482:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5467:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5467:3:8"
																		},
																		"nativeSrc": "5467:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5467:18:8"
																	},
																	{
																		"hexValue": "6f7465",
																		"kind": "string",
																		"nativeSrc": "5487:5:8",
																		"nodeType": "YulLiteral",
																		"src": "5487:5:8",
																		"type": "",
																		"value": "ote"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5460:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5460:6:8"
																},
																"nativeSrc": "5460:33:8",
																"nodeType": "YulFunctionCall",
																"src": "5460:33:8"
															},
															"nativeSrc": "5460:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "5460:33:8"
														},
														{
															"nativeSrc": "5502:27:8",
															"nodeType": "YulAssignment",
															"src": "5502:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5514:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5514:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5525:3:8",
																		"nodeType": "YulLiteral",
																		"src": "5525:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5510:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5510:3:8"
																},
																"nativeSrc": "5510:19:8",
																"nodeType": "YulFunctionCall",
																"src": "5510:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5502:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5502:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_23dd702789a702d582f99b58a434cec47cd541852e1263083521a4179a192189__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5136:399:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5287:9:8",
														"nodeType": "YulTypedName",
														"src": "5287:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5301:4:8",
														"nodeType": "YulTypedName",
														"src": "5301:4:8",
														"type": ""
													}
												],
												"src": "5136:399:8"
											},
											{
												"body": {
													"nativeSrc": "5572:95:8",
													"nodeType": "YulBlock",
													"src": "5572:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5589:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5589:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5596:3:8",
																				"nodeType": "YulLiteral",
																				"src": "5596:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5601:10:8",
																				"nodeType": "YulLiteral",
																				"src": "5601:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5592:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5592:3:8"
																		},
																		"nativeSrc": "5592:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5592:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5582:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5582:6:8"
																},
																"nativeSrc": "5582:31:8",
																"nodeType": "YulFunctionCall",
																"src": "5582:31:8"
															},
															"nativeSrc": "5582:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "5582:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5629:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5629:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5632:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5632:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5622:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5622:6:8"
																},
																"nativeSrc": "5622:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5622:15:8"
															},
															"nativeSrc": "5622:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5622:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5653:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5653:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5656:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5656:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5646:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5646:6:8"
																},
																"nativeSrc": "5646:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5646:15:8"
															},
															"nativeSrc": "5646:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5646:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5540:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "5540:127:8"
											},
											{
												"body": {
													"nativeSrc": "5720:77:8",
													"nodeType": "YulBlock",
													"src": "5720:77:8",
													"statements": [
														{
															"nativeSrc": "5730:16:8",
															"nodeType": "YulAssignment",
															"src": "5730:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5741:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5741:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5744:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5744:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5737:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5737:3:8"
																},
																"nativeSrc": "5737:9:8",
																"nodeType": "YulFunctionCall",
																"src": "5737:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5730:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5730:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5769:22:8",
																"nodeType": "YulBlock",
																"src": "5769:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5771:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5771:16:8"
																			},
																			"nativeSrc": "5771:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5771:18:8"
																		},
																		"nativeSrc": "5771:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5771:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5761:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5761:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5764:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5764:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5758:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5758:2:8"
																},
																"nativeSrc": "5758:10:8",
																"nodeType": "YulFunctionCall",
																"src": "5758:10:8"
															},
															"nativeSrc": "5755:36:8",
															"nodeType": "YulIf",
															"src": "5755:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5672:125:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5703:1:8",
														"nodeType": "YulTypedName",
														"src": "5703:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5706:1:8",
														"nodeType": "YulTypedName",
														"src": "5706:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5712:3:8",
														"nodeType": "YulTypedName",
														"src": "5712:3:8",
														"type": ""
													}
												],
												"src": "5672:125:8"
											},
											{
												"body": {
													"nativeSrc": "5959:188:8",
													"nodeType": "YulBlock",
													"src": "5959:188:8",
													"statements": [
														{
															"nativeSrc": "5969:26:8",
															"nodeType": "YulAssignment",
															"src": "5969:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5981:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5981:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5992:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5992:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5977:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5977:3:8"
																},
																"nativeSrc": "5977:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5977:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5969:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5969:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6011:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6011:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6022:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6022:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6004:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6004:6:8"
																},
																"nativeSrc": "6004:25:8",
																"nodeType": "YulFunctionCall",
																"src": "6004:25:8"
															},
															"nativeSrc": "6004:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "6004:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6049:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6049:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6060:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6060:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6045:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6045:3:8"
																		},
																		"nativeSrc": "6045:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6045:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6069:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6069:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6085:3:8",
																								"nodeType": "YulLiteral",
																								"src": "6085:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6090:1:8",
																								"nodeType": "YulLiteral",
																								"src": "6090:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6081:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "6081:3:8"
																						},
																						"nativeSrc": "6081:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "6081:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6094:1:8",
																						"nodeType": "YulLiteral",
																						"src": "6094:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6077:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6077:3:8"
																				},
																				"nativeSrc": "6077:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6077:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6065:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6065:3:8"
																		},
																		"nativeSrc": "6065:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6065:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6038:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6038:6:8"
																},
																"nativeSrc": "6038:60:8",
																"nodeType": "YulFunctionCall",
																"src": "6038:60:8"
															},
															"nativeSrc": "6038:60:8",
															"nodeType": "YulExpressionStatement",
															"src": "6038:60:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6118:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6118:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6129:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6129:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6114:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6114:3:8"
																		},
																		"nativeSrc": "6114:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6114:18:8"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6134:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6134:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6107:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6107:6:8"
																},
																"nativeSrc": "6107:34:8",
																"nodeType": "YulFunctionCall",
																"src": "6107:34:8"
															},
															"nativeSrc": "6107:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "6107:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5802:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5912:9:8",
														"nodeType": "YulTypedName",
														"src": "5912:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5923:6:8",
														"nodeType": "YulTypedName",
														"src": "5923:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5931:6:8",
														"nodeType": "YulTypedName",
														"src": "5931:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5939:6:8",
														"nodeType": "YulTypedName",
														"src": "5939:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5950:4:8",
														"nodeType": "YulTypedName",
														"src": "5950:4:8",
														"type": ""
													}
												],
												"src": "5802:345:8"
											},
											{
												"body": {
													"nativeSrc": "6326:228:8",
													"nodeType": "YulBlock",
													"src": "6326:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6343:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6343:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6354:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6354:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6336:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6336:6:8"
																},
																"nativeSrc": "6336:21:8",
																"nodeType": "YulFunctionCall",
																"src": "6336:21:8"
															},
															"nativeSrc": "6336:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "6336:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6377:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6377:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6388:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6388:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6373:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6373:3:8"
																		},
																		"nativeSrc": "6373:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6373:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6393:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6393:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6366:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6366:6:8"
																},
																"nativeSrc": "6366:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6366:30:8"
															},
															"nativeSrc": "6366:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "6366:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6416:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6416:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6427:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6427:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6412:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6412:3:8"
																		},
																		"nativeSrc": "6412:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6412:18:8"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820766f746573202835303020746f6b656e7320726571",
																		"kind": "string",
																		"nativeSrc": "6432:34:8",
																		"nodeType": "YulLiteral",
																		"src": "6432:34:8",
																		"type": "",
																		"value": "Not enough votes (500 tokens req"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6405:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6405:6:8"
																},
																"nativeSrc": "6405:62:8",
																"nodeType": "YulFunctionCall",
																"src": "6405:62:8"
															},
															"nativeSrc": "6405:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "6405:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6487:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6487:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6498:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6498:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6483:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6483:3:8"
																		},
																		"nativeSrc": "6483:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6483:18:8"
																	},
																	{
																		"hexValue": "756972656429",
																		"kind": "string",
																		"nativeSrc": "6503:8:8",
																		"nodeType": "YulLiteral",
																		"src": "6503:8:8",
																		"type": "",
																		"value": "uired)"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6476:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6476:6:8"
																},
																"nativeSrc": "6476:36:8",
																"nodeType": "YulFunctionCall",
																"src": "6476:36:8"
															},
															"nativeSrc": "6476:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "6476:36:8"
														},
														{
															"nativeSrc": "6521:27:8",
															"nodeType": "YulAssignment",
															"src": "6521:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6533:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6533:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6544:3:8",
																		"nodeType": "YulLiteral",
																		"src": "6544:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6529:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6529:3:8"
																},
																"nativeSrc": "6529:19:8",
																"nodeType": "YulFunctionCall",
																"src": "6529:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6521:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6521:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70781312560918a61d3b5e274a24dd70cd2d0901f970caf6cb5f94161f7cdb19__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6152:402:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6303:9:8",
														"nodeType": "YulTypedName",
														"src": "6303:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6317:4:8",
														"nodeType": "YulTypedName",
														"src": "6317:4:8",
														"type": ""
													}
												],
												"src": "6152:402:8"
											},
											{
												"body": {
													"nativeSrc": "6733:166:8",
													"nodeType": "YulBlock",
													"src": "6733:166:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6750:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6750:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6761:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6761:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6743:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6743:6:8"
																},
																"nativeSrc": "6743:21:8",
																"nodeType": "YulFunctionCall",
																"src": "6743:21:8"
															},
															"nativeSrc": "6743:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "6743:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6784:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6784:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6795:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6795:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6780:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6780:3:8"
																		},
																		"nativeSrc": "6780:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6780:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6800:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6800:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6773:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6773:6:8"
																},
																"nativeSrc": "6773:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6773:30:8"
															},
															"nativeSrc": "6773:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "6773:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6823:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6823:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6834:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6834:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6819:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6819:3:8"
																		},
																		"nativeSrc": "6819:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6819:18:8"
																	},
																	{
																		"hexValue": "416c7265616479206578656375746564",
																		"kind": "string",
																		"nativeSrc": "6839:18:8",
																		"nodeType": "YulLiteral",
																		"src": "6839:18:8",
																		"type": "",
																		"value": "Already executed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6812:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6812:6:8"
																},
																"nativeSrc": "6812:46:8",
																"nodeType": "YulFunctionCall",
																"src": "6812:46:8"
															},
															"nativeSrc": "6812:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "6812:46:8"
														},
														{
															"nativeSrc": "6867:26:8",
															"nodeType": "YulAssignment",
															"src": "6867:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6879:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6879:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6890:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6890:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6875:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6875:3:8"
																},
																"nativeSrc": "6875:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6875:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6867:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6867:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_58f47ea4e737df2d9cc4764db26c111751884cf0a1856aca9f4c66cadc811e1b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6559:340:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6710:9:8",
														"nodeType": "YulTypedName",
														"src": "6710:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6724:4:8",
														"nodeType": "YulTypedName",
														"src": "6724:4:8",
														"type": ""
													}
												],
												"src": "6559:340:8"
											},
											{
												"body": {
													"nativeSrc": "7078:173:8",
													"nodeType": "YulBlock",
													"src": "7078:173:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7095:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7095:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7106:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7106:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7088:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7088:6:8"
																},
																"nativeSrc": "7088:21:8",
																"nodeType": "YulFunctionCall",
																"src": "7088:21:8"
															},
															"nativeSrc": "7088:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "7088:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7129:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7129:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7140:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7140:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7125:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7125:3:8"
																		},
																		"nativeSrc": "7125:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7125:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7145:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7145:2:8",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7118:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7118:6:8"
																},
																"nativeSrc": "7118:30:8",
																"nodeType": "YulFunctionCall",
																"src": "7118:30:8"
															},
															"nativeSrc": "7118:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "7118:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7168:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7168:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7179:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7179:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7164:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7164:3:8"
																		},
																		"nativeSrc": "7164:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7164:18:8"
																	},
																	{
																		"hexValue": "566f74696e6720706572696f64206e6f7420656e646564",
																		"kind": "string",
																		"nativeSrc": "7184:25:8",
																		"nodeType": "YulLiteral",
																		"src": "7184:25:8",
																		"type": "",
																		"value": "Voting period not ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7157:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7157:6:8"
																},
																"nativeSrc": "7157:53:8",
																"nodeType": "YulFunctionCall",
																"src": "7157:53:8"
															},
															"nativeSrc": "7157:53:8",
															"nodeType": "YulExpressionStatement",
															"src": "7157:53:8"
														},
														{
															"nativeSrc": "7219:26:8",
															"nodeType": "YulAssignment",
															"src": "7219:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7231:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7231:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7242:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7242:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7227:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7227:3:8"
																},
																"nativeSrc": "7227:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7227:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7219:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7219:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6935cc29c7ba471c59aca2c328cd747610ac8fe82d4a965557fad75d9c8d99a0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6904:347:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7055:9:8",
														"nodeType": "YulTypedName",
														"src": "7055:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7069:4:8",
														"nodeType": "YulTypedName",
														"src": "7069:4:8",
														"type": ""
													}
												],
												"src": "6904:347:8"
											},
											{
												"body": {
													"nativeSrc": "7430:167:8",
													"nodeType": "YulBlock",
													"src": "7430:167:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7447:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7447:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7458:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7458:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7440:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7440:6:8"
																},
																"nativeSrc": "7440:21:8",
																"nodeType": "YulFunctionCall",
																"src": "7440:21:8"
															},
															"nativeSrc": "7440:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "7440:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7481:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7481:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7492:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7492:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7477:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7477:3:8"
																		},
																		"nativeSrc": "7477:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7477:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7497:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7497:2:8",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7470:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7470:6:8"
																},
																"nativeSrc": "7470:30:8",
																"nodeType": "YulFunctionCall",
																"src": "7470:30:8"
															},
															"nativeSrc": "7470:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "7470:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7520:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7520:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7531:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7531:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7516:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7516:3:8"
																		},
																		"nativeSrc": "7516:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7516:18:8"
																	},
																	{
																		"hexValue": "45544820707269636520746f6f206c6f77",
																		"kind": "string",
																		"nativeSrc": "7536:19:8",
																		"nodeType": "YulLiteral",
																		"src": "7536:19:8",
																		"type": "",
																		"value": "ETH price too low"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7509:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7509:6:8"
																},
																"nativeSrc": "7509:47:8",
																"nodeType": "YulFunctionCall",
																"src": "7509:47:8"
															},
															"nativeSrc": "7509:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "7509:47:8"
														},
														{
															"nativeSrc": "7565:26:8",
															"nodeType": "YulAssignment",
															"src": "7565:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7577:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7577:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7588:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7588:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7573:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7573:3:8"
																},
																"nativeSrc": "7573:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7573:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7565:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7565:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_66d1585b1e27cc9397312cfc1f57a2ea0c14475d5f53f4e39e5c98660bad98b3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7256:341:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7407:9:8",
														"nodeType": "YulTypedName",
														"src": "7407:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7421:4:8",
														"nodeType": "YulTypedName",
														"src": "7421:4:8",
														"type": ""
													}
												],
												"src": "7256:341:8"
											},
											{
												"body": {
													"nativeSrc": "7776:179:8",
													"nodeType": "YulBlock",
													"src": "7776:179:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7793:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7793:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7804:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7804:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7786:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7786:6:8"
																},
																"nativeSrc": "7786:21:8",
																"nodeType": "YulFunctionCall",
																"src": "7786:21:8"
															},
															"nativeSrc": "7786:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "7786:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7827:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7827:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7838:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7838:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7823:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7823:3:8"
																		},
																		"nativeSrc": "7823:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7823:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7843:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7843:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7816:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7816:6:8"
																},
																"nativeSrc": "7816:30:8",
																"nodeType": "YulFunctionCall",
																"src": "7816:30:8"
															},
															"nativeSrc": "7816:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "7816:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7866:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7866:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7877:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7877:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7862:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7862:3:8"
																		},
																		"nativeSrc": "7862:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7862:18:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e742074726561737572792062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "7882:31:8",
																		"nodeType": "YulLiteral",
																		"src": "7882:31:8",
																		"type": "",
																		"value": "Insufficient treasury balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7855:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7855:6:8"
																},
																"nativeSrc": "7855:59:8",
																"nodeType": "YulFunctionCall",
																"src": "7855:59:8"
															},
															"nativeSrc": "7855:59:8",
															"nodeType": "YulExpressionStatement",
															"src": "7855:59:8"
														},
														{
															"nativeSrc": "7923:26:8",
															"nodeType": "YulAssignment",
															"src": "7923:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7935:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7935:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7946:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7946:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7931:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7931:3:8"
																},
																"nativeSrc": "7931:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7931:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7923:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7923:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_59eae394831db960eed2b1204907b57c5e1f65d6dfb40c9a41314d384a8055da__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7602:353:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7753:9:8",
														"nodeType": "YulTypedName",
														"src": "7753:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7767:4:8",
														"nodeType": "YulTypedName",
														"src": "7767:4:8",
														"type": ""
													}
												],
												"src": "7602:353:8"
											},
											{
												"body": {
													"nativeSrc": "8009:79:8",
													"nodeType": "YulBlock",
													"src": "8009:79:8",
													"statements": [
														{
															"nativeSrc": "8019:17:8",
															"nodeType": "YulAssignment",
															"src": "8019:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8031:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8031:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8034:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8034:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8027:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8027:3:8"
																},
																"nativeSrc": "8027:9:8",
																"nodeType": "YulFunctionCall",
																"src": "8027:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8019:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8019:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8060:22:8",
																"nodeType": "YulBlock",
																"src": "8060:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8062:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "8062:16:8"
																			},
																			"nativeSrc": "8062:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8062:18:8"
																		},
																		"nativeSrc": "8062:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8062:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8051:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8051:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8057:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8057:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8048:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8048:2:8"
																},
																"nativeSrc": "8048:11:8",
																"nodeType": "YulFunctionCall",
																"src": "8048:11:8"
															},
															"nativeSrc": "8045:37:8",
															"nodeType": "YulIf",
															"src": "8045:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7960:128:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7991:1:8",
														"nodeType": "YulTypedName",
														"src": "7991:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7994:1:8",
														"nodeType": "YulTypedName",
														"src": "7994:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8000:4:8",
														"nodeType": "YulTypedName",
														"src": "8000:4:8",
														"type": ""
													}
												],
												"src": "7960:128:8"
											},
											{
												"body": {
													"nativeSrc": "8258:188:8",
													"nodeType": "YulBlock",
													"src": "8258:188:8",
													"statements": [
														{
															"nativeSrc": "8268:26:8",
															"nodeType": "YulAssignment",
															"src": "8268:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8280:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8280:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8291:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8291:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8276:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8276:3:8"
																},
																"nativeSrc": "8276:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8276:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8268:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8268:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8310:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8310:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "8321:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8321:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8303:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8303:6:8"
																},
																"nativeSrc": "8303:25:8",
																"nodeType": "YulFunctionCall",
																"src": "8303:25:8"
															},
															"nativeSrc": "8303:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "8303:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8348:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8348:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8359:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8359:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8344:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8344:3:8"
																		},
																		"nativeSrc": "8344:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8344:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "8368:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8368:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8384:3:8",
																								"nodeType": "YulLiteral",
																								"src": "8384:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8389:1:8",
																								"nodeType": "YulLiteral",
																								"src": "8389:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8380:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "8380:3:8"
																						},
																						"nativeSrc": "8380:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "8380:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8393:1:8",
																						"nodeType": "YulLiteral",
																						"src": "8393:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8376:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8376:3:8"
																				},
																				"nativeSrc": "8376:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8376:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8364:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8364:3:8"
																		},
																		"nativeSrc": "8364:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8364:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8337:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8337:6:8"
																},
																"nativeSrc": "8337:60:8",
																"nodeType": "YulFunctionCall",
																"src": "8337:60:8"
															},
															"nativeSrc": "8337:60:8",
															"nodeType": "YulExpressionStatement",
															"src": "8337:60:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8417:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8417:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8428:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8428:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8413:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8413:3:8"
																		},
																		"nativeSrc": "8413:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8413:18:8"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8433:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8433:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8406:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8406:6:8"
																},
																"nativeSrc": "8406:34:8",
																"nodeType": "YulFunctionCall",
																"src": "8406:34:8"
															},
															"nativeSrc": "8406:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "8406:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_payable_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8093:353:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8211:9:8",
														"nodeType": "YulTypedName",
														"src": "8211:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8222:6:8",
														"nodeType": "YulTypedName",
														"src": "8222:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8230:6:8",
														"nodeType": "YulTypedName",
														"src": "8230:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8238:6:8",
														"nodeType": "YulTypedName",
														"src": "8238:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8249:4:8",
														"nodeType": "YulTypedName",
														"src": "8249:4:8",
														"type": ""
													}
												],
												"src": "8093:353:8"
											},
											{
												"body": {
													"nativeSrc": "8625:162:8",
													"nodeType": "YulBlock",
													"src": "8625:162:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8642:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8642:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8653:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8653:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8635:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8635:6:8"
																},
																"nativeSrc": "8635:21:8",
																"nodeType": "YulFunctionCall",
																"src": "8635:21:8"
															},
															"nativeSrc": "8635:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "8635:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8676:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8676:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8687:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8687:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8672:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8672:3:8"
																		},
																		"nativeSrc": "8672:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8672:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8692:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8692:2:8",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8665:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8665:6:8"
																},
																"nativeSrc": "8665:30:8",
																"nodeType": "YulFunctionCall",
																"src": "8665:30:8"
															},
															"nativeSrc": "8665:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "8665:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8715:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8715:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8726:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8726:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8711:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8711:3:8"
																		},
																		"nativeSrc": "8711:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8711:18:8"
																	},
																	{
																		"hexValue": "46756e6473206c6f636b6564",
																		"kind": "string",
																		"nativeSrc": "8731:14:8",
																		"nodeType": "YulLiteral",
																		"src": "8731:14:8",
																		"type": "",
																		"value": "Funds locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8704:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8704:6:8"
																},
																"nativeSrc": "8704:42:8",
																"nodeType": "YulFunctionCall",
																"src": "8704:42:8"
															},
															"nativeSrc": "8704:42:8",
															"nodeType": "YulExpressionStatement",
															"src": "8704:42:8"
														},
														{
															"nativeSrc": "8755:26:8",
															"nodeType": "YulAssignment",
															"src": "8755:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8767:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8767:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8778:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8778:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8763:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8763:3:8"
																},
																"nativeSrc": "8763:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8763:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8755:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8755:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_018f1785b284bc32ec1cf1cfd9ba8a094a3a5f66c46eb2d687bcaae2c8645394__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8451:336:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8602:9:8",
														"nodeType": "YulTypedName",
														"src": "8602:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8616:4:8",
														"nodeType": "YulTypedName",
														"src": "8616:4:8",
														"type": ""
													}
												],
												"src": "8451:336:8"
											},
											{
												"body": {
													"nativeSrc": "8949:214:8",
													"nodeType": "YulBlock",
													"src": "8949:214:8",
													"statements": [
														{
															"nativeSrc": "8959:26:8",
															"nodeType": "YulAssignment",
															"src": "8959:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8971:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8971:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8982:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8982:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8967:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8967:3:8"
																},
																"nativeSrc": "8967:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8967:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8959:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8959:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9001:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9001:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9016:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9016:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9032:3:8",
																								"nodeType": "YulLiteral",
																								"src": "9032:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9037:1:8",
																								"nodeType": "YulLiteral",
																								"src": "9037:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9028:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9028:3:8"
																						},
																						"nativeSrc": "9028:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9028:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9041:1:8",
																						"nodeType": "YulLiteral",
																						"src": "9041:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9024:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9024:3:8"
																				},
																				"nativeSrc": "9024:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9024:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9012:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9012:3:8"
																		},
																		"nativeSrc": "9012:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9012:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8994:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8994:6:8"
																},
																"nativeSrc": "8994:51:8",
																"nodeType": "YulFunctionCall",
																"src": "8994:51:8"
															},
															"nativeSrc": "8994:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "8994:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9065:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9065:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9076:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9076:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9061:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9061:3:8"
																		},
																		"nativeSrc": "9061:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9061:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "9081:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9081:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9054:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9054:6:8"
																},
																"nativeSrc": "9054:34:8",
																"nodeType": "YulFunctionCall",
																"src": "9054:34:8"
															},
															"nativeSrc": "9054:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "9054:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9108:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9108:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9119:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9119:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9104:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9104:3:8"
																		},
																		"nativeSrc": "9104:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9104:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "9128:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9128:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9144:3:8",
																								"nodeType": "YulLiteral",
																								"src": "9144:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9149:1:8",
																								"nodeType": "YulLiteral",
																								"src": "9149:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9140:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9140:3:8"
																						},
																						"nativeSrc": "9140:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9140:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9153:1:8",
																						"nodeType": "YulLiteral",
																						"src": "9153:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9136:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9136:3:8"
																				},
																				"nativeSrc": "9136:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9136:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9124:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9124:3:8"
																		},
																		"nativeSrc": "9124:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9124:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9097:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9097:6:8"
																},
																"nativeSrc": "9097:60:8",
																"nodeType": "YulFunctionCall",
																"src": "9097:60:8"
															},
															"nativeSrc": "9097:60:8",
															"nodeType": "YulExpressionStatement",
															"src": "9097:60:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "8792:371:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8902:9:8",
														"nodeType": "YulTypedName",
														"src": "8902:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8913:6:8",
														"nodeType": "YulTypedName",
														"src": "8913:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8921:6:8",
														"nodeType": "YulTypedName",
														"src": "8921:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8929:6:8",
														"nodeType": "YulTypedName",
														"src": "8929:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8940:4:8",
														"nodeType": "YulTypedName",
														"src": "8940:4:8",
														"type": ""
													}
												],
												"src": "8792:371:8"
											},
											{
												"body": {
													"nativeSrc": "9360:271:8",
													"nodeType": "YulBlock",
													"src": "9360:271:8",
													"statements": [
														{
															"nativeSrc": "9370:27:8",
															"nodeType": "YulAssignment",
															"src": "9370:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9382:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9382:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9393:3:8",
																		"nodeType": "YulLiteral",
																		"src": "9393:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9378:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9378:3:8"
																},
																"nativeSrc": "9378:19:8",
																"nodeType": "YulFunctionCall",
																"src": "9378:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9370:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9370:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9413:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9413:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9428:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9428:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9444:3:8",
																								"nodeType": "YulLiteral",
																								"src": "9444:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9449:1:8",
																								"nodeType": "YulLiteral",
																								"src": "9449:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9440:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9440:3:8"
																						},
																						"nativeSrc": "9440:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9440:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9453:1:8",
																						"nodeType": "YulLiteral",
																						"src": "9453:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9436:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9436:3:8"
																				},
																				"nativeSrc": "9436:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9436:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9424:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9424:3:8"
																		},
																		"nativeSrc": "9424:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9424:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9406:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9406:6:8"
																},
																"nativeSrc": "9406:51:8",
																"nodeType": "YulFunctionCall",
																"src": "9406:51:8"
															},
															"nativeSrc": "9406:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "9406:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9477:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9477:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9488:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9488:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9473:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9473:3:8"
																		},
																		"nativeSrc": "9473:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9473:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "9493:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9493:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9466:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9466:6:8"
																},
																"nativeSrc": "9466:34:8",
																"nodeType": "YulFunctionCall",
																"src": "9466:34:8"
															},
															"nativeSrc": "9466:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "9466:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9520:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9520:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9531:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9531:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9516:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9516:3:8"
																		},
																		"nativeSrc": "9516:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9516:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "9540:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9540:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9556:3:8",
																								"nodeType": "YulLiteral",
																								"src": "9556:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9561:1:8",
																								"nodeType": "YulLiteral",
																								"src": "9561:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9552:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9552:3:8"
																						},
																						"nativeSrc": "9552:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9552:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9565:1:8",
																						"nodeType": "YulLiteral",
																						"src": "9565:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9548:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9548:3:8"
																				},
																				"nativeSrc": "9548:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9548:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9536:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9536:3:8"
																		},
																		"nativeSrc": "9536:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9536:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9509:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9509:6:8"
																},
																"nativeSrc": "9509:60:8",
																"nodeType": "YulFunctionCall",
																"src": "9509:60:8"
															},
															"nativeSrc": "9509:60:8",
															"nodeType": "YulExpressionStatement",
															"src": "9509:60:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9589:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9589:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9600:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9600:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9585:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9585:3:8"
																		},
																		"nativeSrc": "9585:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9585:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "9609:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9609:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9617:6:8",
																				"nodeType": "YulLiteral",
																				"src": "9617:6:8",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9605:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9605:3:8"
																		},
																		"nativeSrc": "9605:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9605:19:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9578:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9578:6:8"
																},
																"nativeSrc": "9578:47:8",
																"nodeType": "YulFunctionCall",
																"src": "9578:47:8"
															},
															"nativeSrc": "9578:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "9578:47:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address_t_rational_0_by_1__to_t_address_t_uint256_t_address_t_uint16__fromStack_reversed",
												"nativeSrc": "9168:463:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9305:9:8",
														"nodeType": "YulTypedName",
														"src": "9305:9:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9316:6:8",
														"nodeType": "YulTypedName",
														"src": "9316:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9324:6:8",
														"nodeType": "YulTypedName",
														"src": "9324:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9332:6:8",
														"nodeType": "YulTypedName",
														"src": "9332:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9340:6:8",
														"nodeType": "YulTypedName",
														"src": "9340:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9351:4:8",
														"nodeType": "YulTypedName",
														"src": "9351:4:8",
														"type": ""
													}
												],
												"src": "9168:463:8"
											},
											{
												"body": {
													"nativeSrc": "9695:120:8",
													"nodeType": "YulBlock",
													"src": "9695:120:8",
													"statements": [
														{
															"nativeSrc": "9705:22:8",
															"nodeType": "YulAssignment",
															"src": "9705:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9720:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9720:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9714:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9714:5:8"
																},
																"nativeSrc": "9714:13:8",
																"nodeType": "YulFunctionCall",
																"src": "9714:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9705:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9705:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9793:16:8",
																"nodeType": "YulBlock",
																"src": "9793:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9802:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9802:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9805:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9805:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9795:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9795:6:8"
																			},
																			"nativeSrc": "9795:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9795:12:8"
																		},
																		"nativeSrc": "9795:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9795:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9749:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9749:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9760:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "9760:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9767:22:8",
																						"nodeType": "YulLiteral",
																						"src": "9767:22:8",
																						"type": "",
																						"value": "0xffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "9756:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9756:3:8"
																				},
																				"nativeSrc": "9756:34:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9756:34:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9746:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "9746:2:8"
																		},
																		"nativeSrc": "9746:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9746:45:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9739:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9739:6:8"
																},
																"nativeSrc": "9739:53:8",
																"nodeType": "YulFunctionCall",
																"src": "9739:53:8"
															},
															"nativeSrc": "9736:73:8",
															"nodeType": "YulIf",
															"src": "9736:73:8"
														}
													]
												},
												"name": "abi_decode_uint80_fromMemory",
												"nativeSrc": "9636:179:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9674:6:8",
														"nodeType": "YulTypedName",
														"src": "9674:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9685:5:8",
														"nodeType": "YulTypedName",
														"src": "9685:5:8",
														"type": ""
													}
												],
												"src": "9636:179:8"
											},
											{
												"body": {
													"nativeSrc": "9966:425:8",
													"nodeType": "YulBlock",
													"src": "9966:425:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "10013:16:8",
																"nodeType": "YulBlock",
																"src": "10013:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10022:1:8",
																					"nodeType": "YulLiteral",
																					"src": "10022:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10025:1:8",
																					"nodeType": "YulLiteral",
																					"src": "10025:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10015:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10015:6:8"
																			},
																			"nativeSrc": "10015:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10015:12:8"
																		},
																		"nativeSrc": "10015:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10015:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9987:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "9987:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9996:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9996:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9983:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9983:3:8"
																		},
																		"nativeSrc": "9983:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9983:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10008:3:8",
																		"nodeType": "YulLiteral",
																		"src": "10008:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9979:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9979:3:8"
																},
																"nativeSrc": "9979:33:8",
																"nodeType": "YulFunctionCall",
																"src": "9979:33:8"
															},
															"nativeSrc": "9976:53:8",
															"nodeType": "YulIf",
															"src": "9976:53:8"
														},
														{
															"nativeSrc": "10038:49:8",
															"nodeType": "YulAssignment",
															"src": "10038:49:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10077:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10077:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nativeSrc": "10048:28:8",
																	"nodeType": "YulIdentifier",
																	"src": "10048:28:8"
																},
																"nativeSrc": "10048:39:8",
																"nodeType": "YulFunctionCall",
																"src": "10048:39:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "10038:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10038:6:8"
																}
															]
														},
														{
															"nativeSrc": "10096:35:8",
															"nodeType": "YulAssignment",
															"src": "10096:35:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10116:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10116:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10127:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10127:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10112:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10112:3:8"
																		},
																		"nativeSrc": "10112:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10112:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10106:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10106:5:8"
																},
																"nativeSrc": "10106:25:8",
																"nodeType": "YulFunctionCall",
																"src": "10106:25:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "10096:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10096:6:8"
																}
															]
														},
														{
															"nativeSrc": "10140:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "10140:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "10153:1:8",
																"nodeType": "YulLiteral",
																"src": "10153:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "10144:5:8",
																	"nodeType": "YulTypedName",
																	"src": "10144:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10163:34:8",
															"nodeType": "YulAssignment",
															"src": "10163:34:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10182:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10182:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10193:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10193:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10178:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10178:3:8"
																		},
																		"nativeSrc": "10178:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10178:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10172:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10172:5:8"
																},
																"nativeSrc": "10172:25:8",
																"nodeType": "YulFunctionCall",
																"src": "10172:25:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10163:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10163:5:8"
																}
															]
														},
														{
															"nativeSrc": "10206:15:8",
															"nodeType": "YulAssignment",
															"src": "10206:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "10216:5:8",
																"nodeType": "YulIdentifier",
																"src": "10216:5:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "10206:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10206:6:8"
																}
															]
														},
														{
															"nativeSrc": "10230:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "10230:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "10245:1:8",
																"nodeType": "YulLiteral",
																"src": "10245:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "10234:7:8",
																	"nodeType": "YulTypedName",
																	"src": "10234:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10255:36:8",
															"nodeType": "YulAssignment",
															"src": "10255:36:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10276:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10276:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10287:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10287:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10272:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10272:3:8"
																		},
																		"nativeSrc": "10272:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10272:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10266:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10266:5:8"
																},
																"nativeSrc": "10266:25:8",
																"nodeType": "YulFunctionCall",
																"src": "10266:25:8"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "10255:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "10255:7:8"
																}
															]
														},
														{
															"nativeSrc": "10300:17:8",
															"nodeType": "YulAssignment",
															"src": "10300:17:8",
															"value": {
																"name": "value_1",
																"nativeSrc": "10310:7:8",
																"nodeType": "YulIdentifier",
																"src": "10310:7:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "10300:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10300:6:8"
																}
															]
														},
														{
															"nativeSrc": "10326:59:8",
															"nodeType": "YulAssignment",
															"src": "10326:59:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10369:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10369:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10380:3:8",
																				"nodeType": "YulLiteral",
																				"src": "10380:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10365:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10365:3:8"
																		},
																		"nativeSrc": "10365:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10365:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nativeSrc": "10336:28:8",
																	"nodeType": "YulIdentifier",
																	"src": "10336:28:8"
																},
																"nativeSrc": "10336:49:8",
																"nodeType": "YulFunctionCall",
																"src": "10336:49:8"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "10326:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10326:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "9820:571:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9900:9:8",
														"nodeType": "YulTypedName",
														"src": "9900:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9911:7:8",
														"nodeType": "YulTypedName",
														"src": "9911:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9923:6:8",
														"nodeType": "YulTypedName",
														"src": "9923:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9931:6:8",
														"nodeType": "YulTypedName",
														"src": "9931:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9939:6:8",
														"nodeType": "YulTypedName",
														"src": "9939:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9947:6:8",
														"nodeType": "YulTypedName",
														"src": "9947:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9955:6:8",
														"nodeType": "YulTypedName",
														"src": "9955:6:8",
														"type": ""
													}
												],
												"src": "9820:571:8"
											},
											{
												"body": {
													"nativeSrc": "10442:171:8",
													"nodeType": "YulBlock",
													"src": "10442:171:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "10473:111:8",
																"nodeType": "YulBlock",
																"src": "10473:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10494:1:8",
																					"nodeType": "YulLiteral",
																					"src": "10494:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10501:3:8",
																							"nodeType": "YulLiteral",
																							"src": "10501:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10506:10:8",
																							"nodeType": "YulLiteral",
																							"src": "10506:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "10497:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "10497:3:8"
																					},
																					"nativeSrc": "10497:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "10497:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10487:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10487:6:8"
																			},
																			"nativeSrc": "10487:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10487:31:8"
																		},
																		"nativeSrc": "10487:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10487:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10538:1:8",
																					"nodeType": "YulLiteral",
																					"src": "10538:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10541:4:8",
																					"nodeType": "YulLiteral",
																					"src": "10541:4:8",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10531:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10531:6:8"
																			},
																			"nativeSrc": "10531:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10531:15:8"
																		},
																		"nativeSrc": "10531:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10531:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10566:1:8",
																					"nodeType": "YulLiteral",
																					"src": "10566:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10569:4:8",
																					"nodeType": "YulLiteral",
																					"src": "10569:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10559:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10559:6:8"
																			},
																			"nativeSrc": "10559:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10559:15:8"
																		},
																		"nativeSrc": "10559:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10559:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10462:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10462:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10455:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10455:6:8"
																},
																"nativeSrc": "10455:9:8",
																"nodeType": "YulFunctionCall",
																"src": "10455:9:8"
															},
															"nativeSrc": "10452:132:8",
															"nodeType": "YulIf",
															"src": "10452:132:8"
														},
														{
															"nativeSrc": "10593:14:8",
															"nodeType": "YulAssignment",
															"src": "10593:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10602:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10602:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10605:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10605:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10598:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10598:3:8"
																},
																"nativeSrc": "10598:9:8",
																"nodeType": "YulFunctionCall",
																"src": "10598:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10593:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10593:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10396:217:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10427:1:8",
														"nodeType": "YulTypedName",
														"src": "10427:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10430:1:8",
														"nodeType": "YulTypedName",
														"src": "10430:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10436:1:8",
														"nodeType": "YulTypedName",
														"src": "10436:1:8",
														"type": ""
													}
												],
												"src": "10396:217:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_address_payable_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n        mstore(add(headStart, 160), value5)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_1, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), 64)\n        let length := mload(value1)\n        mstore(add(headStart, 64), length)\n        mcopy(add(headStart, 96), add(value1, 32), length)\n        mstore(add(add(headStart, length), 96), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 96)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IAaveLendingPool_$386__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$329__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_c8fc0753689749684a9e551425bc1a5c3140528f7a45ea255ec00e51d97963b5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Not a DAO member\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Already voted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_36ba02d776fd732ac627a72d2a4bcd896afdeadba8694171733d88c6775413e0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Voting period ended\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := mload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_23dd702789a702d582f99b58a434cec47cd541852e1263083521a4179a192189__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Must hold governance tokens to v\")\n        mstore(add(headStart, 96), \"ote\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_70781312560918a61d3b5e274a24dd70cd2d0901f970caf6cb5f94161f7cdb19__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Not enough votes (500 tokens req\")\n        mstore(add(headStart, 96), \"uired)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_58f47ea4e737df2d9cc4764db26c111751884cf0a1856aca9f4c66cadc811e1b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Already executed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6935cc29c7ba471c59aca2c328cd747610ac8fe82d4a965557fad75d9c8d99a0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Voting period not ended\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_66d1585b1e27cc9397312cfc1f57a2ea0c14475d5f53f4e39e5c98660bad98b3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"ETH price too low\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_59eae394831db960eed2b1204907b57c5e1f65d6dfb40c9a41314d384a8055da__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Insufficient treasury balance\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_address_payable_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_018f1785b284bc32ec1cf1cfd9ba8a094a3a5f66c46eb2d687bcaae2c8645394__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Funds locked\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_rational_0_by_1__to_t_address_t_uint256_t_address_t_uint16__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), and(value3, 0xffff))\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        let value := 0\n        value := mload(add(headStart, 64))\n        value2 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 96))\n        value3 := value_1\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E04FF0D GT PUSH2 0x9D JUMPI DUP1 PUSH4 0xC00D2A8C GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xC00D2A8C EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0xCA6D56DC EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xF96DAE0A EQ PUSH2 0x3A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0xA59A9973 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xA607A8D9 EQ PUSH2 0x341 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x237AF348 GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0x237AF348 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x4D68282F EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x688F237B EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x68FD2D80 EQ PUSH2 0x292 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x121B93F EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x13CF08B EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x8AE4B0C EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xD61B519 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x1FA JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x139 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD7 JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0xDD7 JUMP JUMPDEST PUSH2 0x61E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH2 0x1B7 CALLDATASIZE PUSH1 0x4 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x194 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD7 JUMP JUMPDEST PUSH2 0x672 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP SELFBALANCE JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x194 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x221 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0xE24 JUMP JUMPDEST PUSH2 0x841 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x240 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x24F CALLDATASIZE PUSH1 0x4 PUSH2 0xE4E JUMP JUMPDEST PUSH2 0x9B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0xDD7 JUMP JUMPDEST PUSH2 0x9D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0xDD7 JUMP JUMPDEST PUSH2 0xAA6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0xDD7 JUMP JUMPDEST PUSH2 0xB18 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D0 PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0xE4E JUMP JUMPDEST PUSH2 0xB64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP3 SWAP2 SWAP1 PUSH2 0xEBC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0xC58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x194 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x30A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0xC6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0xE02 JUMP JUMPDEST PUSH2 0xCF1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x394 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x3A3 CALLDATASIZE PUSH1 0x4 PUSH2 0xE02 JUMP JUMPDEST PUSH2 0xD1F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x30A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2737BA1030902220A79036B2B6B132B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x431 JUMPI PUSH2 0x431 PUSH2 0xEFA JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x6 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x493 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x105B1C9958591E481D9BDD1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x414 JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD TIMESTAMP LT PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x159BDD1A5B99C81C195C9A5BD908195B991959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x414 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x522 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x546 SWAP2 SWAP1 PUSH2 0xF0E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x5A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420686F6C6420676F7665726E616E636520746F6B656E7320746F2076 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6F7465 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x414 JUMP JUMPDEST DUP1 DUP3 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5B6 SWAP2 SWAP1 PUSH2 0xF39 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD DUP7 DUP2 MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x1ABE610CF2BF87E57DCC1181FCF5AC0934E843D8344AB9EED6E86C799F62585E SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x62D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 SWAP1 SWAP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP6 POP SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP7 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x686 JUMPI PUSH2 0x686 PUSH2 0xEFA JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH9 0x1B1AE4D6E2EF500000 DUP2 PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820766F746573202835303020746F6B656E7320726571 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x756972656429 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x414 JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x748 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x105B1C9958591E48195E1958DD5D1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x414 JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x79C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74696E6720706572696F64206E6F7420656E646564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x414 JUMP JUMPDEST PUSH2 0x5DC PUSH2 0x7A7 PUSH2 0xC6B JUMP JUMPDEST GT PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x45544820707269636520746F6F206C6F77 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x414 JUMP JUMPDEST PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x804 TIMESTAMP PUSH3 0x2A300 PUSH2 0xF39 JUMP JUMPDEST PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x712AE1383F79AC853F8D882153778E0260EF8F03B504E2866E0593E04D2B291F SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x892 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2737BA1030902220A79036B2B6B132B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x414 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x8E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742074726561737572792062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x414 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD DUP1 DUP4 SSTORE PUSH0 DUP4 DUP2 MSTORE SWAP3 SWAP2 PUSH2 0x8FD SWAP2 PUSH2 0xF52 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x90D JUMPI PUSH2 0x90D PUSH2 0xEFA JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x7 SWAP2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x954 SWAP1 TIMESTAMP PUSH2 0xF39 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH32 0x3417B456FAD6209C73445D5EFD446D686E75E4560F0F50C13B5A5CDE976447B4 SWAP1 PUSH2 0x996 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0xF52 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 ADD PUSH2 0x611 JUMP JUMPDEST PUSH0 PUSH2 0x9C6 DUP3 DUP5 ADD DUP5 PUSH2 0xDD7 JUMP JUMPDEST SWAP1 POP PUSH2 0x9D1 DUP2 PUSH2 0x672 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9EA JUMPI PUSH2 0x9EA PUSH2 0xEFA JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP DUP1 PUSH1 0x5 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0xA3B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x119D5B991CC81B1BD8DAD959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x414 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA75 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x952B264C8E0A06CDDB4BBAA6D6AF1D565145329FD95BBE72CB2B53942B2DC966 SWAP1 PUSH1 0x20 ADD PUSH2 0x835 JUMP JUMPDEST PUSH2 0xAAE PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1A4CA37B PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x69328DEC SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAFF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB11 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB20 PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE8EDA9DF PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH0 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xE8EDA9DF SWAP1 PUSH1 0x84 ADD PUSH2 0xAE8 JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xC3D JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB86 JUMPI PUSH2 0xB86 PUSH2 0xEFA JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x7 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xBD4 JUMPI POP PUSH9 0x1B1AE4D6E2EF500000 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBC1 JUMPI PUSH2 0xBC1 PUSH2 0xEFA JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x2 ADD SLOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xC02 JUMPI POP PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xBEE JUMPI PUSH2 0xBEE PUSH2 0xEFA JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0xC35 JUMPI PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC1C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP SWAP3 POP POP PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xB69 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP1 DUP3 MSTORE SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xC60 PUSH2 0xD5C JUMP JUMPDEST PUSH2 0xC69 PUSH0 PUSH2 0xD88 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP4 DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0xFEAF968C SWAP3 DUP2 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCB1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD5 SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH4 0x5F5E100 DUP2 PUSH2 0xCEB SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xCF9 PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xD27 PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x414 JUMP JUMPDEST PUSH2 0xD59 DUP2 PUSH2 0xD88 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC69 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x414 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD59 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE12 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE1D DUP2 PUSH2 0xDEE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE35 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xE40 DUP2 PUSH2 0xDEE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE5F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE75 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0xE85 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE9B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0xEAC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x60 DUP6 ADD MCOPY PUSH0 PUSH1 0x60 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xF4C JUMPI PUSH2 0xF4C PUSH2 0xF25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xF4C JUMPI PUSH2 0xF4C PUSH2 0xF25 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xF7E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF97 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFA0 DUP7 PUSH2 0xF65 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x60 DUP10 ADD MLOAD SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0xFC5 PUSH1 0x80 DUP8 ADD PUSH2 0xF65 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xFEB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE PUSH22 0x3CE999A4ACDC647ED75A55FD1C7FE0D215CA2575850 0xCA SWAP4 DUP3 0xF6 0xB6 KECCAK256 PUSH14 0x2064736F6C634300081A00330000 ",
							"sourceMap": "522:4408:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2379:536;;;;;;;;;;-1:-1:-1;2379:536:7;;;;;:::i;:::-;;:::i;:::-;;844:27;;;;;;;;;;-1:-1:-1;844:27:7;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;560:32:8;;;542:51;;624:2;609:18;;602:34;;;;652:18;;;645:34;;;;710:2;695:18;;688:34;766:14;759:22;753:3;738:19;;731:51;580:3;798:19;;791:35;529:3;514:19;844:27:7;;;;;;;;800:39;;;;;;;;;;-1:-1:-1;800:39:7;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1390:14:8;;1383:22;1365:41;;1353:2;1338:18;800:39:7;1225:187:8;2921:534:7;;;;;;;;;;-1:-1:-1;2921:534:7;;;;;:::i;:::-;;:::i;4833:95::-;;;;;;;;;;-1:-1:-1;4901:21:7;4833:95;;;1563:25:8;;;1551:2;1536:18;4833:95:7;1417:177:8;1823:550:7;;;;;;;;;;-1:-1:-1;1823:550:7;;;;;:::i;:::-;;:::i;4337:169::-;;;;;;;;;;-1:-1:-1;4337:169:7;;;;;:::i;:::-;;:::i;3461:276::-;;;;;;;;;;-1:-1:-1;3461:276:7;;;;;:::i;:::-;;:::i;4651:134::-;;;;;;;;;;-1:-1:-1;4651:134:7;;;;;:::i;:::-;;:::i;4512:133::-;;;;;;;;;;-1:-1:-1;4512:133:7;;;;;:::i;:::-;;:::i;3926:405::-;;;;;;;;;;-1:-1:-1;3926:405:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2293:101:4:-;;;;;;;;;;;;;:::i;1638:85::-;;;;;;;;;;-1:-1:-1;1684:7:4;1710:6;-1:-1:-1;;;;;1710:6:4;1638:85;;;-1:-1:-1;;;;;3236:32:8;;;3218:51;;3206:2;3191:18;1638:85:4;3072:203:8;955:35:7;;;;;;;;;;-1:-1:-1;955:35:7;;;;-1:-1:-1;;;;;955:35:7;;;3743:177;;;;;;;;;;;;;:::i;995:39::-;;;;;;;;;;;;;;;;1728:89;;;;;;;;;;-1:-1:-1;1728:89:7;;;;;:::i;:::-;;:::i;2543:215:4:-;;;;;;;;;;-1:-1:-1;2543:215:4;;;;;:::i;:::-;;:::i;876:29:7:-;;;;;;;;;;-1:-1:-1;876:29:7;;;;-1:-1:-1;;;;;876:29:7;;;2379:536;1674:10;1666:19;;;;:7;:19;;;;;;;;1658:48;;;;-1:-1:-1;;;1658:48:7;;3936:2:8;1658:48:7;;;3918:21:8;3975:2;3955:18;;;3948:30;-1:-1:-1;;;3994:18:8;;;3987:46;4050:18;;1658:48:7;;;;;;;;;2437:25:::1;2465:9;2475:10;2465:21;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;2519:10:::1;2504:26:::0;;:14:::1;2465:21;::::0;;::::1;;2504:14:::0;;::::1;:26:::0;;;;;;;2465:21;;-1:-1:-1;2504:26:7::1;;2503:27;2495:53;;;::::0;-1:-1:-1;;;2495:53:7;;4413:2:8;2495:53:7::1;::::0;::::1;4395:21:8::0;4452:2;4432:18;;;4425:30;-1:-1:-1;;;4471:18:8;;;4464:43;4524:18;;2495:53:7::1;4211:337:8::0;2495:53:7::1;2583:8;:16;;;2565:15;:34;2557:66;;;::::0;-1:-1:-1;;;2557:66:7;;4755:2:8;2557:66:7::1;::::0;::::1;4737:21:8::0;4794:2;4774:18;;;4767:30;-1:-1:-1;;;4813:18:8;;;4806:49;4872:18;;2557:66:7::1;4553:343:8::0;2557:66:7::1;2657:15;::::0;:37:::1;::::0;-1:-1:-1;;;2657:37:7;;2683:10:::1;2657:37;::::0;::::1;3218:51:8::0;2634:20:7::1;::::0;-1:-1:-1;;;;;2657:15:7::1;::::0;:25:::1;::::0;3191:18:8;;2657:37:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2634:60;;2726:1;2711:12;:16;2703:64;;;::::0;-1:-1:-1;;;2703:64:7;;5338:2:8;2703:64:7::1;::::0;::::1;5320:21:8::0;5377:2;5357:18;;;5350:30;5416:34;5396:18;;;5389:62;-1:-1:-1;;;5467:18:8;;;5460:33;5510:19;;2703:64:7::1;5136:399:8::0;2703:64:7::1;2796:12;2778:8;:14;;;:30;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;2832:10:7::1;2817:26;::::0;;;:14:::1;::::0;::::1;:26;::::0;;;;;;;;:33;;-1:-1:-1;;2817:33:7::1;2846:4;2817:33;::::0;;2866:43;;6004:25:8;;;6045:18;;;6038:60;;;;6114:18;;6107:34;;;2866:43:7::1;::::0;5992:2:8;5977:18;2866:43:7::1;;;;;;;;2428:487;;2379:536:::0;:::o;844:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;844:27:7;;;;-1:-1:-1;844:27:7;;;;;;;;;;:::o;2921:534::-;2979:25;3007:9;3017:10;3007:21;;;;;;;;:::i;:::-;;;;;;;;;;;2979:49;;3063:12;3045:8;:14;;;:30;;3037:81;;;;-1:-1:-1;;;3037:81:7;;6354:2:8;3037:81:7;;;6336:21:8;6393:2;6373:18;;;6366:30;6432:34;6412:18;;;6405:62;-1:-1:-1;;;6483:18:8;;;6476:36;6529:19;;3037:81:7;6152:402:8;3037:81:7;3136:17;;;;;;3135:18;3127:47;;;;-1:-1:-1;;;3127:47:7;;6761:2:8;3127:47:7;;;6743:21:8;6800:2;6780:18;;;6773:30;-1:-1:-1;;;6819:18:8;;;6812:46;6875:18;;3127:47:7;6559:340:8;3127:47:7;3210:8;:16;;;3191:15;:35;;3183:71;;;;-1:-1:-1;;;3183:71:7;;7106:2:8;3183:71:7;;;7088:21:8;7145:2;7125:18;;;7118:30;7184:25;7164:18;;;7157:53;7227:18;;3183:71:7;6904:347:8;3183:71:7;3287:4;3271:13;:11;:13::i;:::-;:20;3263:50;;;;-1:-1:-1;;;3263:50:7;;7458:2:8;3263:50:7;;;7440:21:8;7497:2;7477:18;;;7470:30;-1:-1:-1;;;7516:18:8;;;7509:47;7573:18;;3263:50:7;7256:341:8;3263:50:7;3324:17;;;:24;;-1:-1:-1;;3324:24:7;3344:4;3324:24;;;3379:26;:15;3397:8;3379:26;:::i;:::-;3357:19;;;:48;3421:28;;1563:25:8;;;3421:28:7;;1551:2:8;1536:18;3421:28:7;;;;;;;;2970:485;2921:534;:::o;1823:550::-;1674:10;1666:19;;;;:7;:19;;;;;;;;1658:48;;;;-1:-1:-1;;;1658:48:7;;3936:2:8;1658:48:7;;;3918:21:8;3975:2;3955:18;;;3948:30;-1:-1:-1;;;3994:18:8;;;3987:46;4050:18;;1658:48:7;3734:340:8;1658:48:7;1950:6:::1;1925:21;:31;;1917:73;;;::::0;-1:-1:-1;;;1917:73:7;;7804:2:8;1917:73:7::1;::::0;::::1;7786:21:8::0;7843:2;7823:18;;;7816:30;7882:31;7862:18;;;7855:59;7931:18;;1917:73:7::1;7602:353:8::0;1917:73:7::1;1999:9;:16:::0;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;1999:16:7;;;-1:-1:-1;1999:9:7;2065:20:::1;::::0;::::1;:::i;:::-;2055:31;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;;2095:33:::0;;-1:-1:-1;;;;;;2095:33:7::1;-1:-1:-1::0;;;;;2095:33:7;::::1;;::::0;;-1:-1:-1;2137:18:7;::::1;:27:::0;;;2173:17:::1;::::0;::::1;:21:::0;;;;2243:15:::1;::::0;2055:31;;-1:-1:-1;2225:33:7::1;::::0;:15:::1;:33;:::i;:::-;2203:19;::::0;::::1;:55:::0;2267:20:::1;::::0;::::1;:28:::0;;-1:-1:-1;;2267:28:7::1;::::0;;2327:9:::1;:16:::0;2311:56:::1;::::0;2327:20:::1;::::0;2267:28;;2327:20:::1;:::i;:::-;2311:56;::::0;;6004:25:8;;;-1:-1:-1;;;;;6065:32:8;;6060:2;6045:18;;6038:60;6114:18;;6107:34;;;5992:2;5977:18;2311:56:7::1;5802:345:8::0;4337:169:7;4415:15;4433:31;;;;4444:11;4433:31;:::i;:::-;4415:49;;4473:27;4489:10;4473:15;:27::i;:::-;4406:100;4337:169;;:::o;3461:276::-;3516:25;3544:9;3554:10;3544:21;;;;;;;;:::i;:::-;;;;;;;;;;;3516:49;;3601:8;:19;;;3582:15;:38;;3574:63;;;;-1:-1:-1;;;3574:63:7;;8653:2:8;3574:63:7;;;8635:21:8;8692:2;8672:18;;;8665:30;-1:-1:-1;;;8711:18:8;;;8704:42;8763:18;;3574:63:7;8451:336:8;3574:63:7;3646:18;;;3674:15;;;3646:44;;-1:-1:-1;;;;;3646:18:7;;;;:44;;;;;3674:15;3646:18;:44;:18;:44;3674:15;3646:18;:44;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3706:25:7;;1563::8;;;3706::7;;1551:2:8;1536:18;3706:25:7;1417:177:8;4651:134:7;1531:13:4;:11;:13::i;:::-;4721:11:7::1;::::0;:58:::1;::::0;-1:-1:-1;;;4721:58:7;;4750:4:::1;4721:58;::::0;::::1;8994:51:8::0;;;9061:18;;;9054:34;;;9104:18;;;9097:60;-1:-1:-1;;;;;4721:11:7;;::::1;::::0;:20:::1;::::0;8967:18:8;;4721:58:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4651:134:::0;:::o;4512:133::-;1531:13:4;:11;:13::i;:::-;4579:11:7::1;::::0;:60:::1;::::0;-1:-1:-1;;;4579:60:7;;4607:4:::1;4579:60;::::0;::::1;9406:51:8::0;;;9473:18;;;9466:34;;;9516:18;;;9509:60;4579:11:7::1;9585:18:8::0;;;9578:47;-1:-1:-1;;;;;4579:11:7;;::::1;::::0;:19:::1;::::0;9378::8;;4579:60:7::1;9168:463:8::0;3926:405:7;4011:17;4030:24;4070:6;4065:234;4086:9;:16;4082:20;;4065:234;;;4127:9;4137:1;4127:12;;;;;;;;:::i;:::-;;;;;;;;;:21;:12;;;;;:21;;;;4126:22;:60;;;;;4174:12;4152:9;4162:1;4152:12;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;:34;;4126:60;:103;;;;;4209:9;4219:1;4209:12;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;4190:15;:39;;4126:103;4122:168;;;4256:4;4273:1;4262:13;;;;;;1563:25:8;;1551:2;1536:18;;1417:177;4262:13:7;;;;;;;;;;;;;4248:28;;;;;;;4122:168;4104:3;;4065:234;;;-1:-1:-1;;4307:18:7;;;;;;;;;4315:5;4307:18;;;4315:5;-1:-1:-1;3926:405:7;;;;;;:::o;2293:101:4:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3743:177:7:-;3827:9;;;:27;;;-1:-1:-1;;;3827:27:7;;;;3787:7;;;;-1:-1:-1;;;;;3827:9:7;;:25;;:27;;;;;;;;;;;:9;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3805:49;;;;;;3887:3;3878:5;3870:20;;;;:::i;:::-;3863:27;;;3743:177;:::o;1728:89::-;1531:13:4;:11;:13::i;:::-;-1:-1:-1;;;;;1789:15:7::1;;::::0;;;1807:4:::1;1789:15;::::0;;;;;;;:22;;-1:-1:-1;;1789:22:7::1;::::0;;::::1;::::0;;1728:89::o;2543:215:4:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:4;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:4;;2700:1:::1;2672:31;::::0;::::1;3218:51:8::0;3191:18;;2672:31:4::1;3072:203:8::0;2623:91:4::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:4;735:10:6;1855:23:4;1851:101;;1901:40;;-1:-1:-1;;;1901:40:4;;735:10:6;1901:40:4;;;3218:51:8;3191:18;;1901:40:4;3072:203:8;2912:187:4;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:4;;;-1:-1:-1;;;;;;3020:17:4;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:226:8:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;187:23:8;;14:226;-1:-1:-1;14:226:8:o;837:131::-;-1:-1:-1;;;;;912:31:8;;902:42;;892:70;;958:1;955;948:12;973:247;1032:6;1085:2;1073:9;1064:7;1060:23;1056:32;1053:52;;;1101:1;1098;1091:12;1053:52;1140:9;1127:23;1159:31;1184:5;1159:31;:::i;:::-;1209:5;973:247;-1:-1:-1;;;973:247:8:o;1599:375::-;1675:6;1683;1736:2;1724:9;1715:7;1711:23;1707:32;1704:52;;;1752:1;1749;1742:12;1704:52;1791:9;1778:23;1810:31;1835:5;1810:31;:::i;:::-;1860:5;1938:2;1923:18;;;;1910:32;;-1:-1:-1;;;1599:375:8:o;1979:586::-;2049:6;2057;2110:2;2098:9;2089:7;2085:23;2081:32;2078:52;;;2126:1;2123;2116:12;2078:52;2166:9;2153:23;2199:18;2191:6;2188:30;2185:50;;;2231:1;2228;2221:12;2185:50;2254:22;;2307:4;2299:13;;2295:27;-1:-1:-1;2285:55:8;;2336:1;2333;2326:12;2285:55;2376:2;2363:16;2402:18;2394:6;2391:30;2388:50;;;2434:1;2431;2424:12;2388:50;2479:7;2474:2;2465:6;2461:2;2457:15;2453:24;2450:37;2447:57;;;2500:1;2497;2490:12;2447:57;2531:2;2523:11;;;;;2553:6;;-1:-1:-1;1979:586:8;-1:-1:-1;;;1979:586:8:o;2570:497::-;2753:6;2746:14;2739:22;2728:9;2721:41;2798:2;2793;2782:9;2778:18;2771:30;2702:4;2830:6;2824:13;2873:6;2868:2;2857:9;2853:18;2846:34;2932:6;2927:2;2919:6;2915:15;2910:2;2899:9;2895:18;2889:50;2988:1;2983:2;2974:6;2963:9;2959:22;2955:31;2948:42;3058:2;3051;3047:7;3042:2;3034:6;3030:15;3026:29;3015:9;3011:45;3007:54;2999:62;;;2570:497;;;;;:::o;4079:127::-;4140:10;4135:3;4131:20;4128:1;4121:31;4171:4;4168:1;4161:15;4195:4;4192:1;4185:15;4901:230;4971:6;5024:2;5012:9;5003:7;4999:23;4995:32;4992:52;;;5040:1;5037;5030:12;4992:52;-1:-1:-1;5085:16:8;;4901:230;-1:-1:-1;4901:230:8:o;5540:127::-;5601:10;5596:3;5592:20;5589:1;5582:31;5632:4;5629:1;5622:15;5656:4;5653:1;5646:15;5672:125;5737:9;;;5758:10;;;5755:36;;;5771:18;;:::i;:::-;5672:125;;;;:::o;7960:128::-;8027:9;;;8048:11;;;8045:37;;;8062:18;;:::i;9636:179::-;9714:13;;9767:22;9756:34;;9746:45;;9736:73;;9805:1;9802;9795:12;9736:73;9636:179;;;:::o;9820:571::-;9923:6;9931;9939;9947;9955;10008:3;9996:9;9987:7;9983:23;9979:33;9976:53;;;10025:1;10022;10015:12;9976:53;10048:39;10077:9;10048:39;:::i;:::-;10127:2;10112:18;;10106:25;10193:2;10178:18;;10172:25;10287:2;10272:18;;10266:25;10038:49;;-1:-1:-1;10106:25:8;;-1:-1:-1;10172:25:8;-1:-1:-1;10266:25:8;-1:-1:-1;10336:49:8;10380:3;10365:19;;10336:49;:::i;:::-;10326:59;;9820:571;;;;;;;;:::o;10396:217::-;10436:1;10462;10452:132;;10506:10;10501:3;10497:20;10494:1;10487:31;10541:4;10538:1;10531:15;10569:4;10566:1;10559:15;10452:132;-1:-1:-1;10598:9:8;;10396:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "826800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addMember(address)": "26820",
								"checkUpkeep(bytes)": "infinite",
								"deposit()": "161",
								"depositToAave(uint256)": "infinite",
								"executeProposal(uint256)": "infinite",
								"getBalance()": "294",
								"getETHPrice()": "infinite",
								"governanceToken()": "2446",
								"lendingPool()": "2425",
								"members(address)": "2590",
								"minVoteDuration()": "2316",
								"owner()": "2385",
								"performUpkeep(bytes)": "infinite",
								"proposals(uint256)": "15346",
								"proposeFunding(address,uint256)": "infinite",
								"releaseFunds(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"vote(uint256)": "infinite",
								"withdrawFromAave(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 522,
									"end": 4930,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 522,
									"end": 4930,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 522,
									"end": 4930,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1028,
									"end": 1034,
									"name": "PUSH",
									"source": 7,
									"value": "15180"
								},
								{
									"begin": 995,
									"end": 1034,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 995,
									"end": 1034,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1270,
									"end": 1621,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1270,
									"end": 1621,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1395,
									"end": 1407,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 811,
									"end": 862,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 784,
									"end": 802,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 784,
									"end": 802,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1421,
									"end": 1436,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1421,
									"end": 1459,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1459,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1421,
									"end": 1459,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1459,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1459,
									"modifierDepth": 1,
									"name": "AND",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1421,
									"end": 1459,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1459,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1459,
									"modifierDepth": 1,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1459,
									"modifierDepth": 1,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1459,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1459,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1459,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1477,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1468,
									"end": 1519,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1519,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1519,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1519,
									"modifierDepth": 1,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1519,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1519,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1519,
									"modifierDepth": 1,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1519,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1519,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1519,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1519,
									"modifierDepth": 1,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1519,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1519,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1519,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1539,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1528,
									"end": 1578,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1578,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1578,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1578,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1578,
									"modifierDepth": 1,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1578,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1578,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1578,
									"modifierDepth": 1,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1578,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1578,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1578,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1578,
									"modifierDepth": 1,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1578,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1578,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1578,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1608,
									"modifierDepth": 1,
									"name": "AND",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1587,
									"end": 1608,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1608,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1608,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 1587,
									"end": 1608,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1587,
									"end": 1608,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1608,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1608,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1608,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1587,
									"end": 1608,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1608,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1608,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1615,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1615,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1587,
									"end": 1615,
									"modifierDepth": 1,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1615,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1615,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1615,
									"modifierDepth": 1,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1615,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1615,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 522,
									"end": 4930,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 522,
									"end": 4930,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 4,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 196,
									"end": 660,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 660,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 293,
									"end": 299,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 307,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 309,
									"end": 315,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 323,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 370,
									"end": 373,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 358,
									"end": 367,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 349,
									"end": 356,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 345,
									"end": 368,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 341,
									"end": 374,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 338,
									"end": 391,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 338,
									"end": 391,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 387,
									"end": 388,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 385,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 377,
									"end": 389,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 338,
									"end": 391,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 440,
									"end": 449,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 410,
									"end": 450,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 410,
									"end": 450,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 410,
									"end": 450,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 400,
									"end": 450,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 400,
									"end": 450,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 469,
									"end": 518,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 514,
									"end": 516,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 503,
									"end": 512,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 499,
									"end": 517,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 469,
									"end": 518,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 469,
									"end": 518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 469,
									"end": 518,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 469,
									"end": 518,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 459,
									"end": 518,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 459,
									"end": 518,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 537,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 582,
									"end": 584,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 571,
									"end": 580,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 567,
									"end": 585,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 537,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 537,
									"end": 586,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 537,
									"end": 586,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 537,
									"end": 586,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 527,
									"end": 586,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 527,
									"end": 586,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 605,
									"end": 654,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 650,
									"end": 652,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 639,
									"end": 648,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 635,
									"end": 653,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 605,
									"end": 654,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 605,
									"end": 654,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 605,
									"end": 654,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 605,
									"end": 654,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 595,
									"end": 654,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 595,
									"end": 654,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 196,
									"end": 660,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 196,
									"end": 660,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 196,
									"end": 660,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 196,
									"end": 660,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 196,
									"end": 660,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 196,
									"end": 660,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 196,
									"end": 660,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 196,
									"end": 660,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 665,
									"end": 868,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 665,
									"end": 868,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 522,
									"end": 4930,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 522,
									"end": 4930,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 522,
									"end": 4930,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 522,
									"end": 4930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 522,
									"end": 4930,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 522,
									"end": 4930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 522,
									"end": 4930,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ee7503ce999a4acdc647ed75a55fd1c7fe0d215ca2575850ca9382f6b6206d2064736f6c634300081a0033",
									".code": [
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "6E04FF0D"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "C00D2A8C"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "C00D2A8C"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "CA6D56DC"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "D0E30DB0"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "F96DAE0A"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "6E04FF0D"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "A59A9973"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "A607A8D9"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "237AF348"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "237AF348"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "4585E33B"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "4D68282F"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "688F237B"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "68FD2D80"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "121B93F"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "13CF08B"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "8AE4B0C"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "D61B519"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "12065FE0"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 4930,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2915,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2379,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2915,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2915,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2915,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 2379,
											"end": 2915,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2915,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2915,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2915,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2915,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 2379,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2379,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 2379,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 2379,
											"end": 2915,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2915,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2379,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 2379,
											"end": 2915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2915,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 2379,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 2379,
											"end": 2915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2915,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 2379,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2915,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 844,
											"end": 871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 844,
											"end": 871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 844,
											"end": 871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 844,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 844,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 844,
											"end": 871,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 844,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 844,
											"end": 871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 844,
											"end": 871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 844,
											"end": 871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 844,
											"end": 871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 844,
											"end": 871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 560,
											"end": 592,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 560,
											"end": 592,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 560,
											"end": 592,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 542,
											"end": 593,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 542,
											"end": 593,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 609,
											"end": 627,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 609,
											"end": 627,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 602,
											"end": 636,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 602,
											"end": 636,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 602,
											"end": 636,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 602,
											"end": 636,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 652,
											"end": 670,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 652,
											"end": 670,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 652,
											"end": 670,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 645,
											"end": 679,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 645,
											"end": 679,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 645,
											"end": 679,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 645,
											"end": 679,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 710,
											"end": 712,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 695,
											"end": 713,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 695,
											"end": 713,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 688,
											"end": 722,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 766,
											"end": 780,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 759,
											"end": 781,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 753,
											"end": 756,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 738,
											"end": 757,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 738,
											"end": 757,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 731,
											"end": 782,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 580,
											"end": 583,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 798,
											"end": 817,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 798,
											"end": 817,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 791,
											"end": 826,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 529,
											"end": 532,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 514,
											"end": 533,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 844,
											"end": 871,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 844,
											"end": 871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 844,
											"end": 871,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 800,
											"end": 839,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 800,
											"end": 839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 800,
											"end": 839,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 800,
											"end": 839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 839,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 800,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 800,
											"end": 839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 800,
											"end": 839,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 839,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 800,
											"end": 839,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 800,
											"end": 839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 800,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 800,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 800,
											"end": 839,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 800,
											"end": 839,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 800,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 800,
											"end": 839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 800,
											"end": 839,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 800,
											"end": 839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 800,
											"end": 839,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 800,
											"end": 839,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 800,
											"end": 839,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 800,
											"end": 839,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 839,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 839,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 800,
											"end": 839,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 800,
											"end": 839,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 839,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 839,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 800,
											"end": 839,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 800,
											"end": 839,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 800,
											"end": 839,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 800,
											"end": 839,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 800,
											"end": 839,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 800,
											"end": 839,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 800,
											"end": 839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 800,
											"end": 839,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 839,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1390,
											"end": 1404,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1390,
											"end": 1404,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1405,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1365,
											"end": 1406,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1365,
											"end": 1406,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1355,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1338,
											"end": 1356,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 800,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1225,
											"end": 1412,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2921,
											"end": 3455,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2921,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2921,
											"end": 3455,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2921,
											"end": 3455,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2921,
											"end": 3455,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2921,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2921,
											"end": 3455,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2921,
											"end": 3455,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2921,
											"end": 3455,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2921,
											"end": 3455,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2921,
											"end": 3455,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2921,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2921,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 2921,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 2921,
											"end": 3455,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2921,
											"end": 3455,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2921,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 2921,
											"end": 3455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2921,
											"end": 3455,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 2921,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2921,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 2921,
											"end": 3455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4928,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4833,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4928,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4928,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4928,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 4833,
											"end": 4928,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4833,
											"end": 4928,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4928,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4928,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 4833,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4901,
											"end": 4922,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4928,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 4833,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4928,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4833,
											"end": 4928,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1588,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1588,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1588,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1551,
											"end": 1553,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1536,
											"end": 1554,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4833,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1417,
											"end": 1594,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1823,
											"end": 2373,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1823,
											"end": 2373,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1823,
											"end": 2373,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1823,
											"end": 2373,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1823,
											"end": 2373,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1823,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 1823,
											"end": 2373,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1823,
											"end": 2373,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 2373,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1823,
											"end": 2373,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1823,
											"end": 2373,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 1823,
											"end": 2373,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1823,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1823,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1823,
											"end": 2373,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1823,
											"end": 2373,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1823,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1823,
											"end": 2373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1823,
											"end": 2373,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1823,
											"end": 2373,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1823,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1823,
											"end": 2373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4506,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4337,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4506,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4506,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4506,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 4337,
											"end": 4506,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4337,
											"end": 4506,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4506,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4506,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 4337,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4337,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 4337,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 4337,
											"end": 4506,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4506,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4337,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4337,
											"end": 4506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4506,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 4337,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4337,
											"end": 4506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3737,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3461,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3737,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3737,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3737,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 3461,
											"end": 3737,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3737,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3461,
											"end": 3737,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3737,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3737,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 3461,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3461,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 3461,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3461,
											"end": 3737,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3737,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3461,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 3461,
											"end": 3737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3737,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3461,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 3461,
											"end": 3737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4785,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 4651,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4785,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4785,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4785,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 4651,
											"end": 4785,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4785,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4651,
											"end": 4785,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4785,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4785,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 4651,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4651,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 4651,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 4651,
											"end": 4785,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4785,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4651,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 4651,
											"end": 4785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4785,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 4651,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 4651,
											"end": 4785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4512,
											"end": 4645,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 4512,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4512,
											"end": 4645,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4512,
											"end": 4645,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4512,
											"end": 4645,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4512,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4512,
											"end": 4645,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4512,
											"end": 4645,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4512,
											"end": 4645,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4512,
											"end": 4645,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4512,
											"end": 4645,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4512,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4512,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 4512,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 4512,
											"end": 4645,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4512,
											"end": 4645,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4512,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 4512,
											"end": 4645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4512,
											"end": 4645,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 4512,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4512,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 4512,
											"end": 4645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3926,
											"end": 4331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 3926,
											"end": 4331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 3926,
											"end": 4331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3236,
											"end": 3268,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3236,
											"end": 3268,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3236,
											"end": 3268,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3218,
											"end": 3269,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3218,
											"end": 3269,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3208,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3072,
											"end": 3275,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 955,
											"end": 990,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 955,
											"end": 990,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 955,
											"end": 990,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 955,
											"end": 990,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 955,
											"end": 990,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 955,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 955,
											"end": 990,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 955,
											"end": 990,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 955,
											"end": 990,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 955,
											"end": 990,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 955,
											"end": 990,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 955,
											"end": 990,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 955,
											"end": 990,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 955,
											"end": 990,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 955,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 955,
											"end": 990,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 955,
											"end": 990,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 955,
											"end": 990,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 955,
											"end": 990,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3743,
											"end": 3920,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 3743,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3743,
											"end": 3920,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3743,
											"end": 3920,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3743,
											"end": 3920,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3743,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 3743,
											"end": 3920,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3743,
											"end": 3920,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3743,
											"end": 3920,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3743,
											"end": 3920,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3743,
											"end": 3920,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 3743,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3743,
											"end": 3920,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3743,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 3743,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 3743,
											"end": 3920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1034,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 995,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1034,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1034,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1034,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 995,
											"end": 1034,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1034,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 1034,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1034,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1034,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 995,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1034,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 995,
											"end": 1034,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 995,
											"end": 1034,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1034,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1034,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1728,
											"end": 1817,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1728,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1728,
											"end": 1817,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1728,
											"end": 1817,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1728,
											"end": 1817,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1728,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1728,
											"end": 1817,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1728,
											"end": 1817,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1817,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1728,
											"end": 1817,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1728,
											"end": 1817,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1728,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1728,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1728,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1728,
											"end": 1817,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1728,
											"end": 1817,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1728,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1728,
											"end": 1817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1728,
											"end": 1817,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1728,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1728,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 1728,
											"end": 1817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 876,
											"end": 905,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 876,
											"end": 905,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 876,
											"end": 905,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 876,
											"end": 905,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 876,
											"end": 905,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 876,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 876,
											"end": 905,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 876,
											"end": 905,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 905,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 876,
											"end": 905,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 876,
											"end": 905,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 876,
											"end": 905,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 876,
											"end": 905,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 876,
											"end": 905,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 876,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 876,
											"end": 905,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 876,
											"end": 905,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 876,
											"end": 905,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 876,
											"end": 905,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2915,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 2379,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1674,
											"end": 1684,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1666,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3936,
											"end": 3938,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 3939,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3975,
											"end": 3977,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3948,
											"end": 3978,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA1030902220A79036B2B6B132B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3994,
											"end": 4012,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3994,
											"end": 4012,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3994,
											"end": 4012,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3987,
											"end": 4033,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4050,
											"end": 4068,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4050,
											"end": 4068,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2465,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2475,
											"end": 2485,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2486,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2486,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2486,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2465,
											"end": 2486,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2486,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2465,
											"end": 2486,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2465,
											"end": 2486,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2486,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2465,
											"end": 2486,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2465,
											"end": 2486,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2486,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2465,
											"end": 2486,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2486,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2486,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2519,
											"end": 2529,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2530,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2530,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2465,
											"end": 2486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2465,
											"end": 2486,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2486,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2486,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2486,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2518,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2530,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2530,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2530,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2504,
											"end": 2530,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2530,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2530,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2530,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2486,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2486,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2504,
											"end": 2530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2504,
											"end": 2530,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2503,
											"end": 2530,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2495,
											"end": 2548,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2495,
											"end": 2548,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2495,
											"end": 2548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4413,
											"end": 4415,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2495,
											"end": 2548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2495,
											"end": 2548,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4395,
											"end": 4416,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4452,
											"end": 4454,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 4432,
											"end": 4450,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4432,
											"end": 4450,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4432,
											"end": 4450,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4425,
											"end": 4455,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E481D9BDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4471,
											"end": 4489,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4471,
											"end": 4489,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4471,
											"end": 4489,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4507,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4524,
											"end": 4542,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4524,
											"end": 4542,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2495,
											"end": 2548,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 4211,
											"end": 4548,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2495,
											"end": 2548,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2495,
											"end": 2548,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2591,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2583,
											"end": 2599,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2599,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2565,
											"end": 2580,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2565,
											"end": 2599,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2557,
											"end": 2623,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2557,
											"end": 2623,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2557,
											"end": 2623,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2623,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4755,
											"end": 4757,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2557,
											"end": 2623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2557,
											"end": 2623,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2623,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4737,
											"end": 4758,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4794,
											"end": 4796,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 4774,
											"end": 4792,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4774,
											"end": 4792,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4792,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4767,
											"end": 4797,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "159BDD1A5B99C81C195C9A5BD908195B991959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4806,
											"end": 4855,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4872,
											"end": 4890,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4872,
											"end": 4890,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2557,
											"end": 2623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 4553,
											"end": 4896,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2557,
											"end": 2623,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2557,
											"end": 2623,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2657,
											"end": 2672,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2657,
											"end": 2694,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2657,
											"end": 2694,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2693,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2657,
											"end": 2694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3218,
											"end": 3269,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2634,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2654,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2657,
											"end": 2672,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2672,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 2657,
											"end": 2682,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2657,
											"end": 2694,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2657,
											"end": 2694,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2657,
											"end": 2694,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2694,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2694,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2726,
											"end": 2727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2723,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2727,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2703,
											"end": 2767,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2703,
											"end": 2767,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2703,
											"end": 2767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2703,
											"end": 2767,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2703,
											"end": 2767,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2703,
											"end": 2767,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5338,
											"end": 5340,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2703,
											"end": 2767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2703,
											"end": 2767,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2703,
											"end": 2767,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5341,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5377,
											"end": 5379,
											"name": "PUSH",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 5357,
											"end": 5375,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5357,
											"end": 5375,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5357,
											"end": 5375,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5350,
											"end": 5380,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5450,
											"name": "PUSH",
											"source": 8,
											"value": "4D75737420686F6C6420676F7665726E616E636520746F6B656E7320746F2076"
										},
										{
											"begin": 5396,
											"end": 5414,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5396,
											"end": 5414,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5396,
											"end": 5414,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5389,
											"end": 5451,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F7465"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5467,
											"end": 5485,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5467,
											"end": 5485,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5467,
											"end": 5485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5460,
											"end": 5493,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5510,
											"end": 5529,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5510,
											"end": 5529,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2703,
											"end": 2767,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 5136,
											"end": 5535,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2703,
											"end": 2767,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2703,
											"end": 2767,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2796,
											"end": 2808,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2786,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2778,
											"end": 2792,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2778,
											"end": 2808,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2808,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2808,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2808,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2778,
											"end": 2808,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2808,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2808,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2778,
											"end": 2808,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2808,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2778,
											"end": 2808,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2808,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2808,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2808,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2832,
											"end": 2842,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 2843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2843,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 2843,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 2843,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 2831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2817,
											"end": 2831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 2831,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 2843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2817,
											"end": 2843,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 2843,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 2843,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 2843,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2817,
											"end": 2843,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 2843,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 2843,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 2843,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 2850,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 2850,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2817,
											"end": 2850,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2817,
											"end": 2850,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 2850,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 2850,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 2909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 2909,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6004,
											"end": 6029,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6029,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6029,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6045,
											"end": 6063,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6045,
											"end": 6063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6045,
											"end": 6063,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6038,
											"end": 6098,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6038,
											"end": 6098,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6038,
											"end": 6098,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6038,
											"end": 6098,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6114,
											"end": 6132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6114,
											"end": 6132,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6107,
											"end": 6141,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6107,
											"end": 6141,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6107,
											"end": 6141,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2866,
											"end": 2909,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1ABE610CF2BF87E57DCC1181FCF5AC0934E843D8344AB9EED6E86C799F62585E"
										},
										{
											"begin": 2866,
											"end": 2909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5992,
											"end": 5994,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2866,
											"end": 2909,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2866,
											"end": 2909,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 2909,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2866,
											"end": 2909,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 2909,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 2909,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 2909,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 2909,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 2909,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2915,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2915,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2915,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 844,
											"end": 871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 844,
											"end": 871,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 844,
											"end": 871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 844,
											"end": 871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 871,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 844,
											"end": 871,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 844,
											"end": 871,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 844,
											"end": 871,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 844,
											"end": 871,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 844,
											"end": 871,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 844,
											"end": 871,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 844,
											"end": 871,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 844,
											"end": 871,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 844,
											"end": 871,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 844,
											"end": 871,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 844,
											"end": 871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2921,
											"end": 3455,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 2921,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3016,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3017,
											"end": 3027,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3028,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3028,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3028,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3028,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 3007,
											"end": 3028,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 3007,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 3007,
											"end": 3028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3028,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 3007,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3028,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3028,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3028,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3028,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3007,
											"end": 3028,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3028,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3028,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3028,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3007,
											"end": 3028,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3028,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3028,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3028,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3075,
											"name": "PUSH",
											"source": 7,
											"value": "1B1AE4D6E2EF500000"
										},
										{
											"begin": 3045,
											"end": 3053,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3059,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3045,
											"end": 3059,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3059,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3075,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3075,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3037,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 3037,
											"end": 3118,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3037,
											"end": 3118,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3037,
											"end": 3118,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3037,
											"end": 3118,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3037,
											"end": 3118,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6356,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3037,
											"end": 3118,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3037,
											"end": 3118,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3037,
											"end": 3118,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6336,
											"end": 6357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6393,
											"end": 6395,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 6373,
											"end": 6391,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6373,
											"end": 6391,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6373,
											"end": 6391,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6366,
											"end": 6396,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F7420656E6F75676820766F746573202835303020746F6B656E7320726571"
										},
										{
											"begin": 6412,
											"end": 6430,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6412,
											"end": 6430,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6412,
											"end": 6430,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6467,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "756972656429"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6483,
											"end": 6501,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6483,
											"end": 6501,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6483,
											"end": 6501,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6476,
											"end": 6512,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6529,
											"end": 6548,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 6529,
											"end": 6548,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 6152,
											"end": 6554,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3118,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 3037,
											"end": 3118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3153,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3136,
											"end": 3153,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3153,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3153,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3153,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3136,
											"end": 3153,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3153,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 3127,
											"end": 3174,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3174,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3127,
											"end": 3174,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3127,
											"end": 3174,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3174,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6761,
											"end": 6763,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3127,
											"end": 3174,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3127,
											"end": 3174,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3174,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6743,
											"end": 6764,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6800,
											"end": 6802,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 6780,
											"end": 6798,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6780,
											"end": 6798,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6780,
											"end": 6798,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6773,
											"end": 6803,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E48195E1958DD5D1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6819,
											"end": 6837,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6819,
											"end": 6837,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6819,
											"end": 6837,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6812,
											"end": 6858,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6875,
											"end": 6893,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6875,
											"end": 6893,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3127,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 6559,
											"end": 6899,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3127,
											"end": 3174,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 3127,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3218,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3226,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3210,
											"end": 3226,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3226,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3226,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3226,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3183,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 3183,
											"end": 3254,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3183,
											"end": 3254,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3183,
											"end": 3254,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3183,
											"end": 3254,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3183,
											"end": 3254,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7106,
											"end": 7108,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3183,
											"end": 3254,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3183,
											"end": 3254,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3183,
											"end": 3254,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7088,
											"end": 7109,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7145,
											"end": 7147,
											"name": "PUSH",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 7125,
											"end": 7143,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7125,
											"end": 7143,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7125,
											"end": 7143,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7118,
											"end": 7148,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7184,
											"end": 7209,
											"name": "PUSH",
											"source": 8,
											"value": "566F74696E6720706572696F64206E6F7420656E646564000000000000000000"
										},
										{
											"begin": 7164,
											"end": 7182,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7164,
											"end": 7182,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7164,
											"end": 7182,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7157,
											"end": 7210,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7227,
											"end": 7245,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7227,
											"end": 7245,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3183,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 6904,
											"end": 7251,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3183,
											"end": 3254,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 3183,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3287,
											"end": 3291,
											"name": "PUSH",
											"source": 7,
											"value": "5DC"
										},
										{
											"begin": 3271,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 3271,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 3271,
											"end": 3284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3284,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 3271,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3263,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 3263,
											"end": 3313,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3263,
											"end": 3313,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3263,
											"end": 3313,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3263,
											"end": 3313,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3263,
											"end": 3313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7458,
											"end": 7460,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3263,
											"end": 3313,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3263,
											"end": 3313,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3263,
											"end": 3313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7440,
											"end": 7461,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7497,
											"end": 7499,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 7477,
											"end": 7495,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7477,
											"end": 7495,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7477,
											"end": 7495,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7470,
											"end": 7500,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "45544820707269636520746F6F206C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7516,
											"end": 7534,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7516,
											"end": 7534,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7516,
											"end": 7534,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7509,
											"end": 7556,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7573,
											"end": 7591,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7573,
											"end": 7591,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3263,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 7256,
											"end": 7597,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3263,
											"end": 3313,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 3263,
											"end": 3313,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3341,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3324,
											"end": 3341,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3341,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3348,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3348,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3324,
											"end": 3348,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3344,
											"end": 3348,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3324,
											"end": 3348,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3348,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3379,
											"end": 3405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 3379,
											"end": 3394,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 3397,
											"end": 3405,
											"name": "PUSH",
											"source": 7,
											"value": "2A300"
										},
										{
											"begin": 3379,
											"end": 3405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 3379,
											"end": 3405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3379,
											"end": 3405,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 3379,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3357,
											"end": 3376,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3357,
											"end": 3376,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3357,
											"end": 3376,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3357,
											"end": 3405,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3449,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3421,
											"end": 3449,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1588,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1588,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1588,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3449,
											"name": "PUSH",
											"source": 7,
											"value": "712AE1383F79AC853F8D882153778E0260EF8F03B504E2866E0593E04D2B291F"
										},
										{
											"begin": 3421,
											"end": 3449,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1551,
											"end": 1553,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1536,
											"end": 1554,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3449,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 3421,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3449,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3421,
											"end": 3449,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3449,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3449,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3449,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3449,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3449,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 3455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2921,
											"end": 3455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2921,
											"end": 3455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1823,
											"end": 2373,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1823,
											"end": 2373,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1674,
											"end": 1684,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1666,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3936,
											"end": 3938,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 3939,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3975,
											"end": 3977,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3948,
											"end": 3978,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA1030902220A79036B2B6B132B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3994,
											"end": 4012,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3994,
											"end": 4012,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3994,
											"end": 4012,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3987,
											"end": 4033,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4050,
											"end": 4068,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4050,
											"end": 4068,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 3734,
											"end": 4074,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1658,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1950,
											"end": 1956,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1925,
											"end": 1946,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 1925,
											"end": 1956,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1925,
											"end": 1956,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1917,
											"end": 1990,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 1917,
											"end": 1990,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1917,
											"end": 1990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1917,
											"end": 1990,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1917,
											"end": 1990,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1917,
											"end": 1990,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7804,
											"end": 7806,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1917,
											"end": 1990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1917,
											"end": 1990,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1917,
											"end": 1990,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7786,
											"end": 7807,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7843,
											"end": 7845,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 7823,
											"end": 7841,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7823,
											"end": 7841,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 7841,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7816,
											"end": 7846,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7882,
											"end": 7913,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E742074726561737572792062616C616E6365000000"
										},
										{
											"begin": 7862,
											"end": 7880,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7862,
											"end": 7880,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7862,
											"end": 7880,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7914,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7931,
											"end": 7949,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7931,
											"end": 7949,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1917,
											"end": 1990,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 7602,
											"end": 7955,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1917,
											"end": 1990,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 1917,
											"end": 1990,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1999,
											"end": 2008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1999,
											"end": 2015,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1999,
											"end": 2015,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1999,
											"end": 2015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1999,
											"end": 2015,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1999,
											"end": 2015,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1999,
											"end": 2015,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1999,
											"end": 2015,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1999,
											"end": 2015,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1999,
											"end": 2015,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2015,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1999,
											"end": 2015,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1999,
											"end": 2015,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2008,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2085,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 2065,
											"end": 2085,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2085,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 2065,
											"end": 2085,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2085,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 2065,
											"end": 2085,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2086,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2086,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2086,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2086,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2055,
											"end": 2086,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2055,
											"end": 2086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2055,
											"end": 2086,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2086,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2055,
											"end": 2086,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2086,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2086,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2086,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2055,
											"end": 2086,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2086,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2055,
											"end": 2086,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2086,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2086,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2086,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2086,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2095,
											"end": 2128,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2095,
											"end": 2128,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2095,
											"end": 2128,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2095,
											"end": 2128,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2095,
											"end": 2128,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2095,
											"end": 2128,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2095,
											"end": 2128,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2095,
											"end": 2128,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2137,
											"end": 2155,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2155,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2164,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2164,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2164,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2173,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2173,
											"end": 2190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2173,
											"end": 2190,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2173,
											"end": 2194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2173,
											"end": 2194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2173,
											"end": 2194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2173,
											"end": 2194,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2243,
											"end": 2258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2243,
											"end": 2258,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2086,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2086,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2225,
											"end": 2258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2225,
											"end": 2258,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2240,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2225,
											"end": 2258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2225,
											"end": 2258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2203,
											"end": 2222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2203,
											"end": 2222,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2203,
											"end": 2222,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2203,
											"end": 2258,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2267,
											"end": 2287,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2287,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2295,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2295,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2267,
											"end": 2295,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2295,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2295,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2336,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2327,
											"end": 2343,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2367,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3417B456FAD6209C73445D5EFD446D686E75E4560F0F50C13B5A5CDE976447B4"
										},
										{
											"begin": 2311,
											"end": 2367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2327,
											"end": 2347,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2295,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2267,
											"end": 2295,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 2327,
											"end": 2347,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2347,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2327,
											"end": 2347,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2367,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2311,
											"end": 2367,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2367,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6004,
											"end": 6029,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6029,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6029,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6065,
											"end": 6097,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6065,
											"end": 6097,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6060,
											"end": 6062,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6045,
											"end": 6063,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6045,
											"end": 6063,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6038,
											"end": 6098,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6114,
											"end": 6132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6114,
											"end": 6132,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6107,
											"end": 6141,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6107,
											"end": 6141,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6107,
											"end": 6141,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5992,
											"end": 5994,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2311,
											"end": 2367,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 5802,
											"end": 6147,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4506,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4337,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4415,
											"end": 4430,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4433,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 4433,
											"end": 4464,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4464,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4464,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4444,
											"end": 4455,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 4433,
											"end": 4464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4464,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 4433,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4415,
											"end": 4464,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4415,
											"end": 4464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4473,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 4489,
											"end": 4499,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4473,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 4473,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4473,
											"end": 4500,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 4473,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4406,
											"end": 4506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3737,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 3461,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3516,
											"end": 3541,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3544,
											"end": 3553,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3544,
											"end": 3565,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3544,
											"end": 3565,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3544,
											"end": 3565,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3544,
											"end": 3565,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3544,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3544,
											"end": 3565,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3544,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3544,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 3544,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3544,
											"end": 3565,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3544,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3544,
											"end": 3565,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3544,
											"end": 3565,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3544,
											"end": 3565,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3544,
											"end": 3565,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3544,
											"end": 3565,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3544,
											"end": 3565,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3544,
											"end": 3565,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3544,
											"end": 3565,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3544,
											"end": 3565,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3544,
											"end": 3565,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3516,
											"end": 3565,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3516,
											"end": 3565,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3601,
											"end": 3609,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3601,
											"end": 3620,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3601,
											"end": 3620,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3601,
											"end": 3620,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3582,
											"end": 3597,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 3582,
											"end": 3620,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3582,
											"end": 3620,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3574,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3574,
											"end": 3637,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3574,
											"end": 3637,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3574,
											"end": 3637,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3574,
											"end": 3637,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3574,
											"end": 3637,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8653,
											"end": 8655,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3574,
											"end": 3637,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3574,
											"end": 3637,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3574,
											"end": 3637,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8635,
											"end": 8656,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8692,
											"end": 8694,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 8672,
											"end": 8690,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8672,
											"end": 8690,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8672,
											"end": 8690,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8665,
											"end": 8695,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "119D5B991CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8711,
											"end": 8729,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8711,
											"end": 8729,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8711,
											"end": 8729,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8704,
											"end": 8746,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8763,
											"end": 8781,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8763,
											"end": 8781,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3574,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 8451,
											"end": 8787,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3574,
											"end": 3637,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3574,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3664,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3664,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3664,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3674,
											"end": 3689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3674,
											"end": 3689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3674,
											"end": 3689,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3646,
											"end": 3664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3664,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3664,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3664,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "PUSH",
											"source": 7,
											"value": "8FC"
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3674,
											"end": 3689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3664,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3674,
											"end": 3689,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3664,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 3646,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3706,
											"end": 3731,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3706,
											"end": 3731,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1588,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1588,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1588,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3706,
											"end": 3731,
											"name": "PUSH",
											"source": 7,
											"value": "952B264C8E0A06CDDB4BBAA6D6AF1D565145329FD95BBE72CB2B53942B2DC966"
										},
										{
											"begin": 3706,
											"end": 3731,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1551,
											"end": 1553,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1536,
											"end": 1554,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3706,
											"end": 3731,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1417,
											"end": 1594,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4785,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 4651,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4721,
											"end": 4732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4721,
											"end": 4732,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4721,
											"end": 4779,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A4CA37B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4721,
											"end": 4779,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4750,
											"end": 4754,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4721,
											"end": 4779,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8994,
											"end": 9045,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8994,
											"end": 9045,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8994,
											"end": 9045,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9061,
											"end": 9079,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9061,
											"end": 9079,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9061,
											"end": 9079,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9054,
											"end": 9088,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9054,
											"end": 9088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9054,
											"end": 9088,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9104,
											"end": 9122,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9104,
											"end": 9122,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9104,
											"end": 9122,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9097,
											"end": 9157,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4721,
											"end": 4732,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4732,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4732,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4732,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "69328DEC"
										},
										{
											"begin": 4721,
											"end": 4741,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8967,
											"end": 8985,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8967,
											"end": 8985,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4721,
											"end": 4779,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4721,
											"end": 4779,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4779,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4785,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4512,
											"end": 4645,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 4512,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4579,
											"end": 4590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4579,
											"end": 4590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4579,
											"end": 4639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4579,
											"end": 4639,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8EDA9DF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4579,
											"end": 4639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4579,
											"end": 4639,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4607,
											"end": 4611,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4579,
											"end": 4639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4579,
											"end": 4639,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4579,
											"end": 4639,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9406,
											"end": 9457,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9406,
											"end": 9457,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9406,
											"end": 9457,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9473,
											"end": 9491,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9473,
											"end": 9491,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9473,
											"end": 9491,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9466,
											"end": 9500,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9466,
											"end": 9500,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9466,
											"end": 9500,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9516,
											"end": 9534,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9516,
											"end": 9534,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9516,
											"end": 9534,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9509,
											"end": 9569,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4579,
											"end": 4590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9585,
											"end": 9603,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9585,
											"end": 9603,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9585,
											"end": 9603,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9578,
											"end": 9625,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4579,
											"end": 4590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4579,
											"end": 4590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4579,
											"end": 4590,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4579,
											"end": 4590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4579,
											"end": 4598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E8EDA9DF"
										},
										{
											"begin": 4579,
											"end": 4598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9378,
											"end": 9397,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 9378,
											"end": 9397,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4579,
											"end": 4639,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 9168,
											"end": 9631,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4011,
											"end": 4028,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4054,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4070,
											"end": 4076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4299,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 4065,
											"end": 4299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4086,
											"end": 4095,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4086,
											"end": 4102,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4082,
											"end": 4102,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4082,
											"end": 4102,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4299,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 4065,
											"end": 4299,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4136,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4137,
											"end": 4138,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4139,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4139,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4139,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4139,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 4127,
											"end": 4139,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 4127,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 4127,
											"end": 4139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4139,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 4127,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4139,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4127,
											"end": 4139,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4139,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4139,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4139,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4127,
											"end": 4139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4139,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4139,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4148,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4127,
											"end": 4139,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4127,
											"end": 4139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4139,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4139,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4139,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4148,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4148,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4148,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4127,
											"end": 4148,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4126,
											"end": 4148,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4126,
											"end": 4186,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4126,
											"end": 4186,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4126,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 4126,
											"end": 4186,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4126,
											"end": 4186,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4186,
											"name": "PUSH",
											"source": 7,
											"value": "1B1AE4D6E2EF500000"
										},
										{
											"begin": 4152,
											"end": 4161,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4162,
											"end": 4163,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4164,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4164,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4164,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4164,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 4152,
											"end": 4164,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 4152,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 4152,
											"end": 4164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4164,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 4152,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4164,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4164,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4152,
											"end": 4164,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4164,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4152,
											"end": 4164,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4152,
											"end": 4164,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4164,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4164,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4152,
											"end": 4164,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4164,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4170,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4152,
											"end": 4170,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4170,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4186,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4186,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4126,
											"end": 4186,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 4126,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4126,
											"end": 4229,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4126,
											"end": 4229,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4126,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 4126,
											"end": 4229,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4126,
											"end": 4229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4218,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4219,
											"end": 4220,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4221,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4221,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4221,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4221,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 4209,
											"end": 4221,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 4209,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 4209,
											"end": 4221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4221,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 4209,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4221,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4221,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4209,
											"end": 4221,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4221,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4209,
											"end": 4221,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4209,
											"end": 4221,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4221,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4221,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4209,
											"end": 4221,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4221,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4229,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4209,
											"end": 4229,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4229,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4205,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4229,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4229,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4126,
											"end": 4229,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 4126,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4122,
											"end": 4290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4260,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4273,
											"end": 4274,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1588,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1588,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1551,
											"end": 1553,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1536,
											"end": 1554,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1536,
											"end": 1554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1417,
											"end": 1594,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4248,
											"end": 4276,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4248,
											"end": 4276,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4248,
											"end": 4276,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4248,
											"end": 4276,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4248,
											"end": 4276,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4248,
											"end": 4276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 4248,
											"end": 4276,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4290,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4122,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4104,
											"end": 4107,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4104,
											"end": 4107,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 4065,
											"end": 4299,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4299,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 4065,
											"end": 4299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4315,
											"end": 4320,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4315,
											"end": 4320,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 4331,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 4331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 3920,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 3743,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3836,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3827,
											"end": 3836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3836,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3FABE5A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3787,
											"end": 3794,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3787,
											"end": 3794,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3787,
											"end": 3794,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3787,
											"end": 3794,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3827,
											"end": 3836,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3836,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3852,
											"name": "PUSH",
											"source": 7,
											"value": "FEAF968C"
										},
										{
											"begin": 3827,
											"end": 3852,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3836,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 3827,
											"end": 3854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 3827,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3805,
											"end": 3854,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3805,
											"end": 3854,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3805,
											"end": 3854,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3805,
											"end": 3854,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3805,
											"end": 3854,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3805,
											"end": 3854,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3887,
											"end": 3890,
											"name": "PUSH",
											"source": 7,
											"value": "5F5E100"
										},
										{
											"begin": 3878,
											"end": 3883,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3870,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 3870,
											"end": 3890,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3870,
											"end": 3890,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3870,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 3870,
											"end": 3890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3870,
											"end": 3890,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 3870,
											"end": 3890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3863,
											"end": 3890,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3863,
											"end": 3890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3863,
											"end": 3890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3743,
											"end": 3920,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3743,
											"end": 3920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1728,
											"end": 1817,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 1728,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1789,
											"end": 1804,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1804,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1804,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1804,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1807,
											"end": 1811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1789,
											"end": 1804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1789,
											"end": 1804,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1804,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1804,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1804,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1789,
											"end": 1804,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1804,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1804,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1811,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1811,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1789,
											"end": 1811,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1811,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1811,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1811,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1811,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1811,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1728,
											"end": 1817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3218,
											"end": 3269,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3072,
											"end": 3275,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3218,
											"end": 3269,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3072,
											"end": 3275,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 240,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 14,
											"end": 240,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 187,
											"end": 210,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 187,
											"end": 210,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14,
											"end": 240,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 837,
											"end": 968,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 837,
											"end": 968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 912,
											"end": 943,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 912,
											"end": 943,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 902,
											"end": 944,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 902,
											"end": 944,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 892,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 892,
											"end": 962,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 958,
											"end": 959,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 955,
											"end": 956,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 948,
											"end": 960,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 973,
											"end": 1220,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 973,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1038,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 1087,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1071,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1060,
											"end": 1083,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1056,
											"end": 1088,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1053,
											"end": 1105,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1053,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 1053,
											"end": 1105,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1102,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1099,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1103,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1053,
											"end": 1105,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 1053,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1140,
											"end": 1149,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1127,
											"end": 1150,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1159,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 1184,
											"end": 1189,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1159,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 1159,
											"end": 1190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1159,
											"end": 1190,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 1159,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1209,
											"end": 1214,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 973,
											"end": 1220,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 973,
											"end": 1220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1974,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1599,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1681,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1689,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1738,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1711,
											"end": 1734,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1739,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1756,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 1704,
											"end": 1756,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1752,
											"end": 1753,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 1750,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1742,
											"end": 1754,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1756,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 1704,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1791,
											"end": 1800,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1778,
											"end": 1801,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1810,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 1835,
											"end": 1840,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1810,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 1810,
											"end": 1841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1810,
											"end": 1841,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 1810,
											"end": 1841,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1865,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1940,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 1942,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 1942,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1599,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1979,
											"end": 2565,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1979,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2057,
											"end": 2063,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2110,
											"end": 2112,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2098,
											"end": 2107,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2089,
											"end": 2096,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2085,
											"end": 2108,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2113,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2078,
											"end": 2130,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2078,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 2078,
											"end": 2130,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2126,
											"end": 2127,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2123,
											"end": 2124,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2116,
											"end": 2128,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2078,
											"end": 2130,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 2078,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2153,
											"end": 2176,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2199,
											"end": 2217,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2191,
											"end": 2197,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2188,
											"end": 2218,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2185,
											"end": 2235,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2185,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 2185,
											"end": 2235,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2231,
											"end": 2232,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2228,
											"end": 2229,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2221,
											"end": 2233,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2185,
											"end": 2235,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 2185,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2254,
											"end": 2276,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2254,
											"end": 2276,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2311,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2299,
											"end": 2312,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2299,
											"end": 2312,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2295,
											"end": 2322,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 2285,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 2285,
											"end": 2340,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2337,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2333,
											"end": 2334,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2285,
											"end": 2340,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 2285,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2376,
											"end": 2378,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2363,
											"end": 2379,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2402,
											"end": 2420,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2394,
											"end": 2400,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2391,
											"end": 2421,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 2438,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 2388,
											"end": 2438,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2434,
											"end": 2435,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2431,
											"end": 2432,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2424,
											"end": 2436,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 2438,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 2388,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2486,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2474,
											"end": 2476,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2465,
											"end": 2471,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2461,
											"end": 2463,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2457,
											"end": 2472,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2453,
											"end": 2477,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2487,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2504,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 2447,
											"end": 2504,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2501,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2498,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2490,
											"end": 2502,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2504,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 2447,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2531,
											"end": 2533,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2523,
											"end": 2534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2523,
											"end": 2534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2523,
											"end": 2534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2523,
											"end": 2534,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2523,
											"end": 2534,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2553,
											"end": 2559,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2553,
											"end": 2559,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1979,
											"end": 2565,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1979,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2570,
											"end": 3067,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 2570,
											"end": 3067,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2753,
											"end": 2759,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2746,
											"end": 2760,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2739,
											"end": 2761,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2728,
											"end": 2737,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2721,
											"end": 2762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2800,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2793,
											"end": 2795,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2782,
											"end": 2791,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2778,
											"end": 2796,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2771,
											"end": 2801,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2702,
											"end": 2706,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2836,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2837,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2873,
											"end": 2879,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2868,
											"end": 2870,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2857,
											"end": 2866,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2871,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2846,
											"end": 2880,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2932,
											"end": 2938,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2927,
											"end": 2929,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2919,
											"end": 2925,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2930,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2910,
											"end": 2912,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2899,
											"end": 2908,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 2913,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2889,
											"end": 2939,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 2988,
											"end": 2989,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2983,
											"end": 2985,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2974,
											"end": 2980,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2963,
											"end": 2972,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2959,
											"end": 2981,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2955,
											"end": 2986,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2948,
											"end": 2990,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3058,
											"end": 3060,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3051,
											"end": 3053,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3047,
											"end": 3054,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3042,
											"end": 3044,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3034,
											"end": 3040,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3030,
											"end": 3045,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3024,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3011,
											"end": 3056,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3007,
											"end": 3061,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3061,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3061,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3061,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2570,
											"end": 3067,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2570,
											"end": 3067,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2570,
											"end": 3067,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2570,
											"end": 3067,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2570,
											"end": 3067,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2570,
											"end": 3067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4079,
											"end": 4206,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 4079,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4140,
											"end": 4150,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 4135,
											"end": 4138,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 4131,
											"end": 4151,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 4128,
											"end": 4129,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4121,
											"end": 4152,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4171,
											"end": 4175,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 4168,
											"end": 4169,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4161,
											"end": 4176,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4195,
											"end": 4199,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4192,
											"end": 4193,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4200,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4901,
											"end": 5131,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 4901,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4971,
											"end": 4977,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5024,
											"end": 5026,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5012,
											"end": 5021,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5010,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4999,
											"end": 5022,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4995,
											"end": 5027,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4992,
											"end": 5044,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4992,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 4992,
											"end": 5044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5040,
											"end": 5041,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5037,
											"end": 5038,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5042,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4992,
											"end": 5044,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 4992,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5085,
											"end": 5101,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5101,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4901,
											"end": 5131,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4901,
											"end": 5131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5667,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 5540,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5601,
											"end": 5611,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 5596,
											"end": 5599,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5592,
											"end": 5612,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5589,
											"end": 5590,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5582,
											"end": 5613,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5632,
											"end": 5636,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 5629,
											"end": 5630,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5622,
											"end": 5637,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5656,
											"end": 5660,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5653,
											"end": 5654,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5646,
											"end": 5661,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5672,
											"end": 5797,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 5672,
											"end": 5797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5737,
											"end": 5746,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5737,
											"end": 5746,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5737,
											"end": 5746,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5758,
											"end": 5768,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5758,
											"end": 5768,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5758,
											"end": 5768,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5755,
											"end": 5791,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5755,
											"end": 5791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 5755,
											"end": 5791,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5771,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 5771,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 5771,
											"end": 5789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5771,
											"end": 5789,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 5771,
											"end": 5789,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5672,
											"end": 5797,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5672,
											"end": 5797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5672,
											"end": 5797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5672,
											"end": 5797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5672,
											"end": 5797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7960,
											"end": 8088,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 7960,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8027,
											"end": 8036,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8027,
											"end": 8036,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8027,
											"end": 8036,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8048,
											"end": 8059,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8048,
											"end": 8059,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8048,
											"end": 8059,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8045,
											"end": 8082,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8045,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 8045,
											"end": 8082,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8062,
											"end": 8080,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 8062,
											"end": 8080,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 8062,
											"end": 8080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9636,
											"end": 9815,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 9636,
											"end": 9815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9714,
											"end": 9727,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9714,
											"end": 9727,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9767,
											"end": 9789,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9756,
											"end": 9790,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9756,
											"end": 9790,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9746,
											"end": 9791,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9746,
											"end": 9791,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9736,
											"end": 9809,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 9736,
											"end": 9809,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9805,
											"end": 9806,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9802,
											"end": 9803,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9795,
											"end": 9807,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9736,
											"end": 9809,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 9736,
											"end": 9809,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9636,
											"end": 9815,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9636,
											"end": 9815,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9636,
											"end": 9815,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9636,
											"end": 9815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9820,
											"end": 10391,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 9820,
											"end": 10391,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9923,
											"end": 9929,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9931,
											"end": 9937,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9939,
											"end": 9945,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9947,
											"end": 9953,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9955,
											"end": 9961,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10008,
											"end": 10011,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 9996,
											"end": 10005,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9987,
											"end": 9994,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 9983,
											"end": 10006,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9979,
											"end": 10012,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 9976,
											"end": 10029,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9976,
											"end": 10029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 9976,
											"end": 10029,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10025,
											"end": 10026,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10023,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10015,
											"end": 10027,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9976,
											"end": 10029,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 9976,
											"end": 10029,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10048,
											"end": 10087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 10077,
											"end": 10086,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10048,
											"end": 10087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 10048,
											"end": 10087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10048,
											"end": 10087,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 10048,
											"end": 10087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10127,
											"end": 10129,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10106,
											"end": 10131,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10193,
											"end": 10195,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10178,
											"end": 10196,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 10178,
											"end": 10196,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10172,
											"end": 10197,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10287,
											"end": 10289,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 10272,
											"end": 10290,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 10272,
											"end": 10290,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10266,
											"end": 10291,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10038,
											"end": 10087,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10038,
											"end": 10087,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10106,
											"end": 10131,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10106,
											"end": 10131,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10172,
											"end": 10197,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10266,
											"end": 10291,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10336,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 10380,
											"end": 10383,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 10365,
											"end": 10384,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 10365,
											"end": 10384,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10336,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 10336,
											"end": 10385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10336,
											"end": 10385,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 10336,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10326,
											"end": 10385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10326,
											"end": 10385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9820,
											"end": 10391,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9820,
											"end": 10391,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 9820,
											"end": 10391,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9820,
											"end": 10391,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9820,
											"end": 10391,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 9820,
											"end": 10391,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9820,
											"end": 10391,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9820,
											"end": 10391,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9820,
											"end": 10391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10396,
											"end": 10613,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 10396,
											"end": 10613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10436,
											"end": 10437,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10462,
											"end": 10463,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10452,
											"end": 10584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 10452,
											"end": 10584,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10506,
											"end": 10516,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 10501,
											"end": 10504,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 10497,
											"end": 10517,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 10494,
											"end": 10495,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10487,
											"end": 10518,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10541,
											"end": 10545,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 10538,
											"end": 10539,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10531,
											"end": 10546,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10569,
											"end": 10573,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10566,
											"end": 10567,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10559,
											"end": 10574,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10452,
											"end": 10584,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 10452,
											"end": 10584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10598,
											"end": 10607,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10598,
											"end": 10607,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10396,
											"end": 10613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/AutomationBase.sol",
								"@chainlink/contracts/src/v0.8/AutomationCompatible.sol",
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/TreasuryDAO.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addMember(address)": "ca6d56dc",
							"checkUpkeep(bytes)": "6e04ff0d",
							"deposit()": "d0e30db0",
							"depositToAave(uint256)": "68fd2d80",
							"executeProposal(uint256)": "0d61b519",
							"getBalance()": "12065fe0",
							"getETHPrice()": "a607a8d9",
							"governanceToken()": "f96dae0a",
							"lendingPool()": "a59a9973",
							"members(address)": "08ae4b0c",
							"minVoteDuration()": "c00d2a8c",
							"owner()": "8da5cb5b",
							"performUpkeep(bytes)": "4585e33b",
							"proposals(uint256)": "013cf08b",
							"proposeFunding(address,uint256)": "237af348",
							"releaseFunds(uint256)": "4d68282f",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"vote(uint256)": "0121b93f",
							"withdrawFromAave(uint256)": "688f237b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lendingPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"FundsReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"addMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositToAave\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getETHPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lendingPool\",\"outputs\":[{\"internalType\":\"contract IAaveLendingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"members\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minVoteDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"proposeFunding\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"releaseFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFromAave\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TreasuryDAO.sol\":\"TreasuryDAO\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/AutomationBase.sol\":{\"keccak256\":\"0x5d354afa1a97dffe66094397cdcbb0c14713cf3d609d88fd8f9891010e9a351a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3613ee132e1f05b3e23955db6a849966487fab8ea33e9bb70d6f038fc48c0608\",\"dweb:/ipfs/QmRgdumWFMX35vSrZpCCvXDTvRBVXRkexnxoZqqfnGisnZ\"]},\"@chainlink/contracts/src/v0.8/AutomationCompatible.sol\":{\"keccak256\":\"0x40e5ae0eff4edd0740c1b5590d09c344f84dee031e82d5294563e99603774f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24a134c3bea2e8a6ed29f109e422a9bafb3f43523235188618cf016ed86fafc8\",\"dweb:/ipfs/QmPUGoVde38kbteT358jsskzh5spoJtUoaNZ8UJWVqP3im\"]},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b738dba680a6fbc4afc85819743f13f5b7f4790ec8634c9894e1160327b11b6e\",\"dweb:/ipfs/Qmbv3euvQppeBm2g61khcJSRMZWi78xUWzbnjKAvDBnka4\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/TreasuryDAO.sol\":{\"keccak256\":\"0x34d6adfd91d604132d8a3357bd8fa0672041c0dbb0ddd5450c30b8026d21818a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2459b2d5da40e126e88092c11bc6fa46656c1bf17681344420fe5c296b962a52\",\"dweb:/ipfs/QmSeZWqRWA72us4p1knJoNPzLLfuyn3VHprXEk1znyKjgj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 112,
								"contract": "contracts/TreasuryDAO.sol:TreasuryDAO",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 411,
								"contract": "contracts/TreasuryDAO.sol:TreasuryDAO",
								"label": "members",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 415,
								"contract": "contracts/TreasuryDAO.sol:TreasuryDAO",
								"label": "proposals",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_struct(Proposal)407_storage)dyn_storage"
							},
							{
								"astId": 418,
								"contract": "contracts/TreasuryDAO.sol:TreasuryDAO",
								"label": "governanceToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)329"
							},
							{
								"astId": 421,
								"contract": "contracts/TreasuryDAO.sol:TreasuryDAO",
								"label": "priceFeed",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(AggregatorV3Interface)84"
							},
							{
								"astId": 424,
								"contract": "contracts/TreasuryDAO.sol:TreasuryDAO",
								"label": "lendingPool",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IAaveLendingPool)386"
							},
							{
								"astId": 427,
								"contract": "contracts/TreasuryDAO.sol:TreasuryDAO",
								"label": "minVoteDuration",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Proposal)407_storage)dyn_storage": {
								"base": "t_struct(Proposal)407_storage",
								"encoding": "dynamic_array",
								"label": "struct TreasuryDAO.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(AggregatorV3Interface)84": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_contract(IAaveLendingPool)386": {
								"encoding": "inplace",
								"label": "contract IAaveLendingPool",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)329": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_struct(Proposal)407_storage": {
								"encoding": "inplace",
								"label": "struct TreasuryDAO.Proposal",
								"members": [
									{
										"astId": 392,
										"contract": "contracts/TreasuryDAO.sol:TreasuryDAO",
										"label": "recipient",
										"offset": 0,
										"slot": "0",
										"type": "t_address_payable"
									},
									{
										"astId": 394,
										"contract": "contracts/TreasuryDAO.sol:TreasuryDAO",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 396,
										"contract": "contracts/TreasuryDAO.sol:TreasuryDAO",
										"label": "votes",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 398,
										"contract": "contracts/TreasuryDAO.sol:TreasuryDAO",
										"label": "endTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 400,
										"contract": "contracts/TreasuryDAO.sol:TreasuryDAO",
										"label": "executed",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									},
									{
										"astId": 402,
										"contract": "contracts/TreasuryDAO.sol:TreasuryDAO",
										"label": "unlockTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 406,
										"contract": "contracts/TreasuryDAO.sol:TreasuryDAO",
										"label": "voted",
										"offset": 0,
										"slot": "6",
										"type": "t_mapping(t_address,t_bool)"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"performUpkeep(bytes)": {
								"notice": "method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/AutomationBase.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/AutomationBase.sol",
					"exportedSymbols": {
						"AutomationBase": [
							29
						]
					},
					"id": 30,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AutomationBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 29,
							"linearizedBaseContracts": [
								29
							],
							"name": "AutomationBase",
							"nameLocation": "66:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "b60ac5db",
									"id": 3,
									"name": "OnlySimulatedBackend",
									"nameLocation": "91:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "111:2:0"
									},
									"src": "85:29:0"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "290:83:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 7,
															"name": "tx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967270,
															"src": "300:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_transaction",
																"typeString": "tx"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "303:6:0",
														"memberName": "origin",
														"nodeType": "MemberAccess",
														"src": "300:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 11,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "321:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "313:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 9,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "313:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "313:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "300:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 18,
												"nodeType": "IfStatement",
												"src": "296:73:0",
												"trueBody": {
													"id": 17,
													"nodeType": "Block",
													"src": "325:44:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 14,
																	"name": "OnlySimulatedBackend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "340:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 15,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "340:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 16,
															"nodeType": "RevertStatement",
															"src": "333:29:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4,
										"nodeType": "StructuredDocumentation",
										"src": "118:127:0",
										"text": " @notice method that allows it to be simulated via eth_call by checking that\n the sender is the zero address."
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "preventExecution",
									"nameLocation": "257:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "273:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "290:0:0"
									},
									"scope": 29,
									"src": "248:125:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "534:36:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 23,
														"name": "preventExecution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "540:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "540:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "540:18:0"
											},
											{
												"id": 26,
												"nodeType": "PlaceholderStatement",
												"src": "564:1:0"
											}
										]
									},
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "377:129:0",
										"text": " @notice modifier that allows it to be simulated via eth_call by checking\n that the sender is the zero address."
									},
									"id": 28,
									"name": "cannotExecute",
									"nameLocation": "518:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "531:2:0"
									},
									"src": "509:61:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 30,
							"src": "57:515:0",
							"usedErrors": [
								3
							],
							"usedEvents": []
						}
					],
					"src": "32:541:0"
				},
				"id": 0
			},
			"@chainlink/contracts/src/v0.8/AutomationCompatible.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/AutomationCompatible.sol",
					"exportedSymbols": {
						"AutomationBase": [
							29
						],
						"AutomationCompatible": [
							38
						],
						"AutomationCompatibleInterface": [
							103
						]
					},
					"id": 39,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 31,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/AutomationBase.sol",
							"file": "./AutomationBase.sol",
							"id": 32,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 39,
							"sourceUnit": 30,
							"src": "57:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol",
							"file": "./interfaces/AutomationCompatibleInterface.sol",
							"id": 33,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 39,
							"sourceUnit": 104,
							"src": "88:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 34,
										"name": "AutomationBase",
										"nameLocations": [
											"188:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 29,
										"src": "188:14:1"
									},
									"id": 35,
									"nodeType": "InheritanceSpecifier",
									"src": "188:14:1"
								},
								{
									"baseName": {
										"id": 36,
										"name": "AutomationCompatibleInterface",
										"nameLocations": [
											"204:29:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 103,
										"src": "204:29:1"
									},
									"id": 37,
									"nodeType": "InheritanceSpecifier",
									"src": "204:29:1"
								}
							],
							"canonicalName": "AutomationCompatible",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 38,
							"linearizedBaseContracts": [
								38,
								103,
								29
							],
							"name": "AutomationCompatible",
							"nameLocation": "164:20:1",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 39,
							"src": "146:90:1",
							"usedErrors": [
								3
							],
							"usedEvents": []
						}
					],
					"src": "32:205:1"
				},
				"id": 1
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							84
						]
					},
					"id": 85,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 40,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 84,
							"linearizedBaseContracts": [
								84
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 45,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:2"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "136:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 42,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:2"
									},
									"scope": 84,
									"src": "93:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 50,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:2"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "193:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 47,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:2"
									},
									"scope": 84,
									"src": "147:61:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 55,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:2"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "254:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:2"
									},
									"scope": 84,
									"src": "212:51:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 70,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "301:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "294:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 56,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:25:2"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "344:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "337:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 59,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "360:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "353:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 61,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "376:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "368:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "395:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "387:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "413:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "406:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 67,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:93:2"
									},
									"scope": 84,
									"src": "267:163:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 83,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "443:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:2"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "503:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "496:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 72,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "519:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "512:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 74,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "512:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "535:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "527:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "554:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "546:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "572:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "565:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 80,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:93:2"
									},
									"scope": 84,
									"src": "434:155:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 85,
							"src": "57:534:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:560:2"
				},
				"id": 2
			},
			"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol",
					"exportedSymbols": {
						"AutomationCompatibleInterface": [
							103
						]
					},
					"id": 104,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 86,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AutomationCompatibleInterface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 103,
							"linearizedBaseContracts": [
								103
							],
							"name": "AutomationCompatibleInterface",
							"nameLocation": "67:29:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "101:985:3",
										"text": " @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."
									},
									"functionSelector": "6e04ff0d",
									"id": 96,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "checkUpkeep",
									"nameLocation": "1098:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "checkData",
												"nameLocation": "1125:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1110:24:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 88,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1110:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1109:26:3"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "upkeepNeeded",
												"nameLocation": "1159:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1154:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 91,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1154:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "1186:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1173:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 93,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1173:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1153:45:3"
									},
									"scope": 103,
									"src": "1089:110:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "1203:1003:3",
										"text": " @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."
									},
									"functionSelector": "4585e33b",
									"id": 102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "performUpkeep",
									"nameLocation": "2218:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "2247:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "2232:26:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 98,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2232:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2231:28:3"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2268:0:3"
									},
									"scope": 103,
									"src": "2209:60:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 104,
							"src": "57:2214:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2240:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							359
						],
						"Ownable": [
							251
						]
					},
					"id": 252,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 105,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 252,
							"sourceUnit": 360,
							"src": "128:45:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 106,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 359,
										"src": "136:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 109,
										"name": "Context",
										"nameLocations": [
											"692:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 359,
										"src": "692:7:4"
									},
									"id": 110,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:4"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 108,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:4",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 251,
							"linearizedBaseContracts": [
								251,
								359
							],
							"name": "Ownable",
							"nameLocation": "681:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 112,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 251,
									"src": "706:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 111,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:4",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 117,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "858:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:4"
									},
									"src": "825:50:4"
								},
								{
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:4",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 122,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "994:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:4"
									},
									"src": "968:41:4"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 128,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "1042:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "1073:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:4"
									},
									"src": "1015:84:4"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "1259:153:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 134,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "1273:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 135,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "IfStatement",
												"src": "1269:95:4",
												"trueBody": {
													"id": 147,
													"nodeType": "Block",
													"src": "1301:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 143,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 141,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 140,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "1322:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 146,
															"nodeType": "RevertStatement",
															"src": "1315:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 150,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "1392:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 149,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "1373:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:4"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:4",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 154,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1237:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:4"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:4"
									},
									"scope": 251,
									"src": "1225:187:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "1521:41:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 157,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "1531:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:4"
											},
											{
												"id": 160,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:4"
											}
										]
									},
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:4",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 162,
									"name": "onlyOwner",
									"nameLocation": "1509:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:4"
									},
									"src": "1500:62:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "1693:30:4",
										"statements": [
											{
												"expression": {
													"id": 168,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 112,
													"src": "1710:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 167,
												"id": 169,
												"nodeType": "Return",
												"src": "1703:13:4"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:4",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:4"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1684:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:4"
									},
									"scope": 251,
									"src": "1638:85:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1841:117:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "1855:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 177,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "1866:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 186,
												"nodeType": "IfStatement",
												"src": "1851:101:4",
												"trueBody": {
													"id": 185,
													"nodeType": "Block",
													"src": "1880:72:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 181,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 341,
																			"src": "1928:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 180,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 117,
																	"src": "1901:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 184,
															"nodeType": "RevertStatement",
															"src": "1894:47:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:4",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:4"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:4"
									},
									"scope": 251,
									"src": "1796:162:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "2347:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 195,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 194,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "2357:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:4"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:4",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 192,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 191,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "2337:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:4"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:4"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:4"
									},
									"scope": 251,
									"src": "2293:101:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "2613:145:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 210,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "2627:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 211,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 224,
												"nodeType": "IfStatement",
												"src": "2623:91:4",
												"trueBody": {
													"id": 223,
													"nodeType": "Block",
													"src": "2651:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 219,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 217,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 216,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "2672:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 222,
															"nodeType": "RevertStatement",
															"src": "2665:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 226,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "2742:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 225,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "2723:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:4"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 208,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 207,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "2603:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:4"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "2570:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:4"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:4"
									},
									"scope": 251,
									"src": "2543:215:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "2975:124:4",
										"statements": [
											{
												"assignments": [
													237
												],
												"declarations": [
													{
														"constant": false,
														"id": 237,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 249,
														"src": "2985:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 236,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 239,
												"initialValue": {
													"id": 238,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 112,
													"src": "3004:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:4"
											},
											{
												"expression": {
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 240,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "3020:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 241,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "3029:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 245,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "3073:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 246,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "3083:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 244,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "3052:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "EmitStatement",
												"src": "3047:45:4"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "2940:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:4"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:4"
									},
									"scope": 251,
									"src": "2912:187:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 252,
							"src": "663:2438:4",
							"usedErrors": [
								117,
								122
							],
							"usedEvents": [
								128
							]
						}
					],
					"src": "102:3000:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							329
						]
					},
					"id": 330,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 253,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 254,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 329,
							"linearizedBaseContracts": [
								329
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 263,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 272,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 278,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 329,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 329,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 296,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 329,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 306,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 329,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 313,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 329,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 325,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 329,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 330,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								263,
								272
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							359
						]
					},
					"id": 360,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 331,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 332,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 359,
							"linearizedBaseContracts": [
								359
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 337,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 336,
												"id": 339,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 359,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 346,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 345,
												"id": 348,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 343,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 359,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 354,
												"id": 356,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 359,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 360,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"contracts/TreasuryDAO.sol": {
				"ast": {
					"absolutePath": "contracts/TreasuryDAO.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							84
						],
						"AutomationBase": [
							29
						],
						"AutomationCompatible": [
							38
						],
						"AutomationCompatibleInterface": [
							103
						],
						"Context": [
							359
						],
						"IAaveLendingPool": [
							386
						],
						"IERC20": [
							329
						],
						"Ownable": [
							251
						],
						"TreasuryDAO": [
							931
						]
					},
					"id": 932,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 361,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 362,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 932,
							"sourceUnit": 252,
							"src": "59:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 363,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 932,
							"sourceUnit": 85,
							"src": "112:76:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/AutomationCompatible.sol",
							"file": "@chainlink/contracts/src/v0.8/AutomationCompatible.sol",
							"id": 364,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 932,
							"sourceUnit": 39,
							"src": "189:64:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 365,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 932,
							"sourceUnit": 330,
							"src": "254:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAaveLendingPool",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 386,
							"linearizedBaseContracts": [
								386
							],
							"name": "IAaveLendingPool",
							"nameLocation": "323:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "e8eda9df",
									"id": 376,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "354:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "370:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "362:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "362:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "385:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "377:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "377:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "401:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "393:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "420:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "413:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 372,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "413:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "361:72:7"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "442:0:7"
									},
									"scope": 386,
									"src": "345:98:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "69328dec",
									"id": 385,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "456:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "473:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "465:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "488:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "480:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "480:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "504:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "496:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "496:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:43:7"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "516:0:7"
									},
									"scope": 386,
									"src": "447:70:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 932,
							"src": "313:206:7",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 387,
										"name": "Ownable",
										"nameLocations": [
											"546:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 251,
										"src": "546:7:7"
									},
									"id": 388,
									"nodeType": "InheritanceSpecifier",
									"src": "546:7:7"
								},
								{
									"baseName": {
										"id": 389,
										"name": "AutomationCompatible",
										"nameLocations": [
											"555:20:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 38,
										"src": "555:20:7"
									},
									"id": 390,
									"nodeType": "InheritanceSpecifier",
									"src": "555:20:7"
								}
							],
							"canonicalName": "TreasuryDAO",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 931,
							"linearizedBaseContracts": [
								931,
								38,
								103,
								29,
								251,
								359
							],
							"name": "TreasuryDAO",
							"nameLocation": "531:11:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "TreasuryDAO.Proposal",
									"id": 407,
									"members": [
										{
											"constant": false,
											"id": 392,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "622:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 407,
											"src": "606:25:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 391,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "606:15:7",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 394,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "648:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 407,
											"src": "640:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 393,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "640:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 396,
											"mutability": "mutable",
											"name": "votes",
											"nameLocation": "671:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 407,
											"src": "663:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 395,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "663:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 398,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "693:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 407,
											"src": "685:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 397,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "685:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 400,
											"mutability": "mutable",
											"name": "executed",
											"nameLocation": "714:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 407,
											"src": "709:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 399,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "709:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 402,
											"mutability": "mutable",
											"name": "unlockTime",
											"nameLocation": "739:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 407,
											"src": "731:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 401,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "731:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 406,
											"mutability": "mutable",
											"name": "voted",
											"nameLocation": "783:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 407,
											"src": "758:30:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 405,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "758:24:7",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 404,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "777:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nameLocation": "588:8:7",
									"nodeType": "StructDefinition",
									"scope": 931,
									"src": "581:213:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "08ae4b0c",
									"id": 411,
									"mutability": "mutable",
									"name": "members",
									"nameLocation": "832:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 931,
									"src": "800:39:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 410,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 408,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "808:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "800:24:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 409,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "819:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "013cf08b",
									"id": 415,
									"mutability": "mutable",
									"name": "proposals",
									"nameLocation": "862:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 931,
									"src": "844:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$407_storage_$dyn_storage",
										"typeString": "struct TreasuryDAO.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"id": 413,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 412,
												"name": "Proposal",
												"nameLocations": [
													"844:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 407,
												"src": "844:8:7"
											},
											"referencedDeclaration": 407,
											"src": "844:8:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$407_storage_ptr",
												"typeString": "struct TreasuryDAO.Proposal"
											}
										},
										"id": 414,
										"nodeType": "ArrayTypeName",
										"src": "844:10:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$407_storage_$dyn_storage_ptr",
											"typeString": "struct TreasuryDAO.Proposal[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f96dae0a",
									"id": 418,
									"mutability": "mutable",
									"name": "governanceToken",
									"nameLocation": "890:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 931,
									"src": "876:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$329",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 417,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 416,
											"name": "IERC20",
											"nameLocations": [
												"876:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 329,
											"src": "876:6:7"
										},
										"referencedDeclaration": 329,
										"src": "876:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$329",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 421,
									"mutability": "mutable",
									"name": "priceFeed",
									"nameLocation": "941:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 931,
									"src": "910:40:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$84",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 420,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 419,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"910:21:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 84,
											"src": "910:21:7"
										},
										"referencedDeclaration": 84,
										"src": "910:21:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$84",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "a59a9973",
									"id": 424,
									"mutability": "mutable",
									"name": "lendingPool",
									"nameLocation": "979:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 931,
									"src": "955:35:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IAaveLendingPool_$386",
										"typeString": "contract IAaveLendingPool"
									},
									"typeName": {
										"id": 423,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 422,
											"name": "IAaveLendingPool",
											"nameLocations": [
												"955:16:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 386,
											"src": "955:16:7"
										},
										"referencedDeclaration": 386,
										"src": "955:16:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IAaveLendingPool_$386",
											"typeString": "contract IAaveLendingPool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c00d2a8c",
									"id": 427,
									"mutability": "mutable",
									"name": "minVoteDuration",
									"nameLocation": "1010:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 931,
									"src": "995:39:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 425,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "995:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 426,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1028:6:7",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "3417b456fad6209c73445d5efd446d686e75e4560f0f50c13b5a5cde976447b4",
									"id": 435,
									"name": "ProposalCreated",
									"nameLocation": "1047:15:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"indexed": false,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "1068:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "1063:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1088:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "1080:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1080:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1107:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "1099:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1099:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:52:7"
									},
									"src": "1041:74:7"
								},
								{
									"anonymous": false,
									"eventSelector": "1abe610cf2bf87e57dcc1181fcf5ac0934e843d8344ab9eed6e86c799f62585e",
									"id": 443,
									"name": "Voted",
									"nameLocation": "1125:5:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"indexed": false,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "1136:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "1131:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1131:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"indexed": false,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "1156:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "1148:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1148:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"indexed": false,
												"mutability": "mutable",
												"name": "weight",
												"nameLocation": "1171:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "1163:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1163:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1130:48:7"
									},
									"src": "1119:60:7"
								},
								{
									"anonymous": false,
									"eventSelector": "712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f",
									"id": 447,
									"name": "ProposalExecuted",
									"nameLocation": "1189:16:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"indexed": false,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "1211:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "1206:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1206:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:17:7"
									},
									"src": "1183:40:7"
								},
								{
									"anonymous": false,
									"eventSelector": "952b264c8e0a06cddb4bbaa6d6af1d565145329fd95bbe72cb2b53942b2dc966",
									"id": 451,
									"name": "FundsReleased",
									"nameLocation": "1233:13:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"indexed": false,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "1252:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "1247:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1247:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:17:7"
									},
									"src": "1227:37:7"
								},
								{
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "1412:209:7",
										"statements": [
											{
												"expression": {
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 465,
														"name": "governanceToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "1421:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$329",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 467,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "1446:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 466,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "1439:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$329_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1439:20:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$329",
															"typeString": "contract IERC20"
														}
													},
													"src": "1421:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$329",
														"typeString": "contract IERC20"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "1421:38:7"
											},
											{
												"expression": {
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 471,
														"name": "priceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "1468:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$84",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 473,
																"name": "priceFeedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 455,
																"src": "1502:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 472,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "1480:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$84_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1480:39:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$84",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "1468:51:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$84",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "1468:51:7"
											},
											{
												"expression": {
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 477,
														"name": "lendingPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "1528:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAaveLendingPool_$386",
															"typeString": "contract IAaveLendingPool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 479,
																"name": "lendingPoolAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "1559:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 478,
															"name": "IAaveLendingPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "1542:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IAaveLendingPool_$386_$",
																"typeString": "type(contract IAaveLendingPool)"
															}
														},
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1542:36:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAaveLendingPool_$386",
															"typeString": "contract IAaveLendingPool"
														}
													},
													"src": "1528:50:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAaveLendingPool_$386",
														"typeString": "contract IAaveLendingPool"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "1528:50:7"
											},
											{
												"expression": {
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 483,
															"name": "members",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "1587:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 485,
														"indexExpression": {
															"id": 484,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "1595:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1587:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1611:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1587:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "1587:28:7"
											}
										]
									},
									"id": 490,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 462,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 459,
													"src": "1395:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 463,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 461,
												"name": "Ownable",
												"nameLocations": [
													"1387:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 251,
												"src": "1387:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1387:21:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "1290:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "1282:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "priceFeedAddress",
												"nameLocation": "1312:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "1304:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1304:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "lendingPoolAddress",
												"nameLocation": "1338:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "1330:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1330:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1366:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "1358:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1358:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1281:98:7"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1412:0:7"
									},
									"scope": 931,
									"src": "1270:351:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "1649:73:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 493,
																"name": "members",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "1666:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 496,
															"indexExpression": {
																"expression": {
																	"id": 494,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1674:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1678:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1674:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1666:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420612044414f206d656d626572",
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8fc0753689749684a9e551425bc1a5c3140528f7a45ea255ec00e51d97963b5",
																"typeString": "literal_string \"Not a DAO member\""
															},
															"value": "Not a DAO member"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8fc0753689749684a9e551425bc1a5c3140528f7a45ea255ec00e51d97963b5",
																"typeString": "literal_string \"Not a DAO member\""
															}
														],
														"id": 492,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1658:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1658:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "1658:48:7"
											},
											{
												"id": 500,
												"nodeType": "PlaceholderStatement",
												"src": "1715:1:7"
											}
										]
									},
									"id": 502,
									"name": "onlyMember",
									"nameLocation": "1636:10:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1646:2:7"
									},
									"src": "1627:95:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "1780:37:7",
										"statements": [
											{
												"expression": {
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 509,
															"name": "members",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "1789:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 511,
														"indexExpression": {
															"id": 510,
															"name": "member",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "1797:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1789:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1807:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1789:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "1789:22:7"
											}
										]
									},
									"functionSelector": "ca6d56dc",
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 507,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 506,
												"name": "onlyOwner",
												"nameLocations": [
													"1770:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "1770:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1770:9:7"
										}
									],
									"name": "addMember",
									"nameLocation": "1737:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "1755:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "1747:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1747:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1746:16:7"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1780:0:7"
									},
									"scope": 931,
									"src": "1728:89:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "1908:465:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 528,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1933:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_TreasuryDAO_$931",
																				"typeString": "contract TreasuryDAO"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_TreasuryDAO_$931",
																				"typeString": "contract TreasuryDAO"
																			}
																		],
																		"id": 527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1925:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 526,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1925:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1925:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1939:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "1925:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 531,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "1950:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1925:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742074726561737572792062616c616e6365",
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1958:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_59eae394831db960eed2b1204907b57c5e1f65d6dfb40c9a41314d384a8055da",
																"typeString": "literal_string \"Insufficient treasury balance\""
															},
															"value": "Insufficient treasury balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_59eae394831db960eed2b1204907b57c5e1f65d6dfb40c9a41314d384a8055da",
																"typeString": "literal_string \"Insufficient treasury balance\""
															}
														],
														"id": 525,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1917:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1917:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "1917:73:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 536,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "1999:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$407_storage_$dyn_storage",
																"typeString": "struct TreasuryDAO.Proposal storage ref[] storage ref"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2009:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1999:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$407_storage_$dyn_storage_ptr_$returns$_t_struct$_Proposal_$407_storage_$attached_to$_t_array$_t_struct$_Proposal_$407_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct TreasuryDAO.Proposal storage ref[] storage pointer) returns (struct TreasuryDAO.Proposal storage ref)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1999:16:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$407_storage",
														"typeString": "struct TreasuryDAO.Proposal storage ref"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "1999:16:7"
											},
											{
												"assignments": [
													543
												],
												"declarations": [
													{
														"constant": false,
														"id": 543,
														"mutability": "mutable",
														"name": "newProposal",
														"nameLocation": "2041:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 593,
														"src": "2024:28:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$407_storage_ptr",
															"typeString": "struct TreasuryDAO.Proposal"
														},
														"typeName": {
															"id": 542,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 541,
																"name": "Proposal",
																"nameLocations": [
																	"2024:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 407,
																"src": "2024:8:7"
															},
															"referencedDeclaration": 407,
															"src": "2024:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$407_storage_ptr",
																"typeString": "struct TreasuryDAO.Proposal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 550,
												"initialValue": {
													"baseExpression": {
														"id": 544,
														"name": "proposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "2055:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Proposal_$407_storage_$dyn_storage",
															"typeString": "struct TreasuryDAO.Proposal storage ref[] storage ref"
														}
													},
													"id": 549,
													"indexExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 545,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "2065:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$407_storage_$dyn_storage",
																	"typeString": "struct TreasuryDAO.Proposal storage ref[] storage ref"
																}
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2075:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2065:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2084:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2065:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2055:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$407_storage",
														"typeString": "struct TreasuryDAO.Proposal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2024:62:7"
											},
											{
												"expression": {
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 551,
															"name": "newProposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "2095:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$407_storage_ptr",
																"typeString": "struct TreasuryDAO.Proposal storage pointer"
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2107:9:7",
														"memberName": "recipient",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 392,
														"src": "2095:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 554,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "2119:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2095:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "2095:33:7"
											},
											{
												"expression": {
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 557,
															"name": "newProposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "2137:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$407_storage_ptr",
																"typeString": "struct TreasuryDAO.Proposal storage pointer"
															}
														},
														"id": 559,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2149:6:7",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 394,
														"src": "2137:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 560,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "2158:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2137:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "2137:27:7"
											},
											{
												"expression": {
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 563,
															"name": "newProposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "2173:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$407_storage_ptr",
																"typeString": "struct TreasuryDAO.Proposal storage pointer"
															}
														},
														"id": 565,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2185:5:7",
														"memberName": "votes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 396,
														"src": "2173:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2193:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2173:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "2173:21:7"
											},
											{
												"expression": {
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 569,
															"name": "newProposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "2203:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$407_storage_ptr",
																"typeString": "struct TreasuryDAO.Proposal storage pointer"
															}
														},
														"id": 571,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2215:7:7",
														"memberName": "endTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 398,
														"src": "2203:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 572,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2225:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2231:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2225:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 574,
															"name": "minVoteDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "2243:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2225:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2203:55:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 577,
												"nodeType": "ExpressionStatement",
												"src": "2203:55:7"
											},
											{
												"expression": {
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 578,
															"name": "newProposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "2267:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$407_storage_ptr",
																"typeString": "struct TreasuryDAO.Proposal storage pointer"
															}
														},
														"id": 580,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2279:8:7",
														"memberName": "executed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 400,
														"src": "2267:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 581,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2290:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2267:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "2267:28:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 585,
																	"name": "proposals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "2327:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Proposal_$407_storage_$dyn_storage",
																		"typeString": "struct TreasuryDAO.Proposal storage ref[] storage ref"
																	}
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2337:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2327:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2346:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2327:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 589,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "2349:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 590,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "2360:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 584,
														"name": "ProposalCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "2311:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2311:56:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "EmitStatement",
												"src": "2306:61:7"
											}
										]
									},
									"functionSelector": "237af348",
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 523,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 522,
												"name": "onlyMember",
												"nameLocations": [
													"1897:10:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 502,
												"src": "1897:10:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1897:10:7"
										}
									],
									"name": "proposeFunding",
									"nameLocation": "1832:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1863:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "1847:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1847:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1882:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "1874:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1846:43:7"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1908:0:7"
									},
									"scope": 931,
									"src": "1823:550:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "2428:487:7",
										"statements": [
											{
												"assignments": [
													603
												],
												"declarations": [
													{
														"constant": false,
														"id": 603,
														"mutability": "mutable",
														"name": "proposal",
														"nameLocation": "2454:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 664,
														"src": "2437:25:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$407_storage_ptr",
															"typeString": "struct TreasuryDAO.Proposal"
														},
														"typeName": {
															"id": 602,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 601,
																"name": "Proposal",
																"nameLocations": [
																	"2437:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 407,
																"src": "2437:8:7"
															},
															"referencedDeclaration": 407,
															"src": "2437:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$407_storage_ptr",
																"typeString": "struct TreasuryDAO.Proposal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 607,
												"initialValue": {
													"baseExpression": {
														"id": 604,
														"name": "proposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "2465:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Proposal_$407_storage_$dyn_storage",
															"typeString": "struct TreasuryDAO.Proposal storage ref[] storage ref"
														}
													},
													"id": 606,
													"indexExpression": {
														"id": 605,
														"name": "proposalId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "2475:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2465:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$407_storage",
														"typeString": "struct TreasuryDAO.Proposal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2437:49:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2503:27:7",
															"subExpression": {
																"baseExpression": {
																	"expression": {
																		"id": 609,
																		"name": "proposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 603,
																		"src": "2504:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$407_storage_ptr",
																			"typeString": "struct TreasuryDAO.Proposal storage pointer"
																		}
																	},
																	"id": 610,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2513:5:7",
																	"memberName": "voted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 406,
																	"src": "2504:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 613,
																"indexExpression": {
																	"expression": {
																		"id": 611,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2519:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2523:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2519:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2504:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920766f746564",
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2532:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6",
																"typeString": "literal_string \"Already voted\""
															},
															"value": "Already voted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6",
																"typeString": "literal_string \"Already voted\""
															}
														],
														"id": 608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2495:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2495:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "2495:53:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 619,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2565:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2571:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2565:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 621,
																	"name": "proposal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "2583:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Proposal_$407_storage_ptr",
																		"typeString": "struct TreasuryDAO.Proposal storage pointer"
																	}
																},
																"id": 622,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2592:7:7",
																"memberName": "endTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 398,
																"src": "2583:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2565:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "566f74696e6720706572696f6420656e646564",
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2601:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36ba02d776fd732ac627a72d2a4bcd896afdeadba8694171733d88c6775413e0",
																"typeString": "literal_string \"Voting period ended\""
															},
															"value": "Voting period ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36ba02d776fd732ac627a72d2a4bcd896afdeadba8694171733d88c6775413e0",
																"typeString": "literal_string \"Voting period ended\""
															}
														],
														"id": 618,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2557:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2557:66:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "2557:66:7"
											},
											{
												"assignments": [
													628
												],
												"declarations": [
													{
														"constant": false,
														"id": 628,
														"mutability": "mutable",
														"name": "voterBalance",
														"nameLocation": "2642:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 664,
														"src": "2634:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 627,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2634:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 634,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 631,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2683:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2687:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2683:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 629,
															"name": "governanceToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "2657:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$329",
																"typeString": "contract IERC20"
															}
														},
														"id": 630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2673:9:7",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 286,
														"src": "2657:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2657:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2634:60:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 636,
																"name": "voterBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "2711:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2726:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2711:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d75737420686f6c6420676f7665726e616e636520746f6b656e7320746f20766f7465",
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2729:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_23dd702789a702d582f99b58a434cec47cd541852e1263083521a4179a192189",
																"typeString": "literal_string \"Must hold governance tokens to vote\""
															},
															"value": "Must hold governance tokens to vote"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_23dd702789a702d582f99b58a434cec47cd541852e1263083521a4179a192189",
																"typeString": "literal_string \"Must hold governance tokens to vote\""
															}
														],
														"id": 635,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2703:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2703:64:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "2703:64:7"
											},
											{
												"expression": {
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 642,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "2778:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$407_storage_ptr",
																"typeString": "struct TreasuryDAO.Proposal storage pointer"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2787:5:7",
														"memberName": "votes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 396,
														"src": "2778:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 645,
														"name": "voterBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "2796:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2778:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "2778:30:7"
											},
											{
												"expression": {
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 648,
																"name": "proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "2817:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$407_storage_ptr",
																	"typeString": "struct TreasuryDAO.Proposal storage pointer"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2826:5:7",
															"memberName": "voted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 406,
															"src": "2817:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 653,
														"indexExpression": {
															"expression": {
																"id": 650,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2832:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2836:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2832:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2817:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 654,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2846:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2817:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "2817:33:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 658,
															"name": "proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "2872:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 659,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2884:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2888:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2884:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 661,
															"name": "voterBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "2896:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 657,
														"name": "Voted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "2866:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2866:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 663,
												"nodeType": "EmitStatement",
												"src": "2861:48:7"
											}
										]
									},
									"functionSelector": "0121b93f",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 599,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 598,
												"name": "onlyMember",
												"nameLocations": [
													"2417:10:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 502,
												"src": "2417:10:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2417:10:7"
										}
									],
									"name": "vote",
									"nameLocation": "2388:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "2398:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "2393:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2393:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2392:17:7"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2428:0:7"
									},
									"scope": 931,
									"src": "2379:536:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "2970:485:7",
										"statements": [
											{
												"assignments": [
													672
												],
												"declarations": [
													{
														"constant": false,
														"id": 672,
														"mutability": "mutable",
														"name": "proposal",
														"nameLocation": "2996:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 732,
														"src": "2979:25:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$407_storage_ptr",
															"typeString": "struct TreasuryDAO.Proposal"
														},
														"typeName": {
															"id": 671,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 670,
																"name": "Proposal",
																"nameLocations": [
																	"2979:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 407,
																"src": "2979:8:7"
															},
															"referencedDeclaration": 407,
															"src": "2979:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$407_storage_ptr",
																"typeString": "struct TreasuryDAO.Proposal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 676,
												"initialValue": {
													"baseExpression": {
														"id": 673,
														"name": "proposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "3007:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Proposal_$407_storage_$dyn_storage",
															"typeString": "struct TreasuryDAO.Proposal storage ref[] storage ref"
														}
													},
													"id": 675,
													"indexExpression": {
														"id": 674,
														"name": "proposalId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "3017:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3007:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$407_storage",
														"typeString": "struct TreasuryDAO.Proposal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2979:49:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 678,
																	"name": "proposal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "3045:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Proposal_$407_storage_ptr",
																		"typeString": "struct TreasuryDAO.Proposal storage pointer"
																	}
																},
																"id": 679,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3054:5:7",
																"memberName": "votes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 396,
																"src": "3045:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_500000000000000000000_by_1",
																	"typeString": "int_const 500000000000000000000"
																},
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "353030",
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3063:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_500_by_1",
																		"typeString": "int_const 500"
																	},
																	"value": "500"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3069:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3073:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "3069:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "3063:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_500000000000000000000_by_1",
																	"typeString": "int_const 500000000000000000000"
																}
															},
															"src": "3045:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820766f746573202835303020746f6b656e7320726571756972656429",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3077:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70781312560918a61d3b5e274a24dd70cd2d0901f970caf6cb5f94161f7cdb19",
																"typeString": "literal_string \"Not enough votes (500 tokens required)\""
															},
															"value": "Not enough votes (500 tokens required)"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70781312560918a61d3b5e274a24dd70cd2d0901f970caf6cb5f94161f7cdb19",
																"typeString": "literal_string \"Not enough votes (500 tokens required)\""
															}
														],
														"id": 677,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3037:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3037:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "3037:81:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3135:18:7",
															"subExpression": {
																"expression": {
																	"id": 690,
																	"name": "proposal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "3136:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Proposal_$407_storage_ptr",
																		"typeString": "struct TreasuryDAO.Proposal storage pointer"
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3145:8:7",
																"memberName": "executed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 400,
																"src": "3136:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c7265616479206578656375746564",
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3155:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_58f47ea4e737df2d9cc4764db26c111751884cf0a1856aca9f4c66cadc811e1b",
																"typeString": "literal_string \"Already executed\""
															},
															"value": "Already executed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_58f47ea4e737df2d9cc4764db26c111751884cf0a1856aca9f4c66cadc811e1b",
																"typeString": "literal_string \"Already executed\""
															}
														],
														"id": 689,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3127:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3127:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "3127:47:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 697,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3191:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3197:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3191:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 699,
																	"name": "proposal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "3210:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Proposal_$407_storage_ptr",
																		"typeString": "struct TreasuryDAO.Proposal storage pointer"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3219:7:7",
																"memberName": "endTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 398,
																"src": "3210:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3191:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "566f74696e6720706572696f64206e6f7420656e646564",
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3228:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6935cc29c7ba471c59aca2c328cd747610ac8fe82d4a965557fad75d9c8d99a0",
																"typeString": "literal_string \"Voting period not ended\""
															},
															"value": "Voting period not ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6935cc29c7ba471c59aca2c328cd747610ac8fe82d4a965557fad75d9c8d99a0",
																"typeString": "literal_string \"Voting period not ended\""
															}
														],
														"id": 696,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3183:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3183:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "3183:71:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 706,
																	"name": "getETHPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "3271:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3271:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "31353030",
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3287:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1500_by_1",
																	"typeString": "int_const 1500"
																},
																"value": "1500"
															},
															"src": "3271:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45544820707269636520746f6f206c6f77",
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3293:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_66d1585b1e27cc9397312cfc1f57a2ea0c14475d5f53f4e39e5c98660bad98b3",
																"typeString": "literal_string \"ETH price too low\""
															},
															"value": "ETH price too low"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_66d1585b1e27cc9397312cfc1f57a2ea0c14475d5f53f4e39e5c98660bad98b3",
																"typeString": "literal_string \"ETH price too low\""
															}
														],
														"id": 705,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3263:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3263:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "3263:50:7"
											},
											{
												"expression": {
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 713,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "3324:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$407_storage_ptr",
																"typeString": "struct TreasuryDAO.Proposal storage pointer"
															}
														},
														"id": 715,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3333:8:7",
														"memberName": "executed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 400,
														"src": "3324:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3344:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3324:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "3324:24:7"
											},
											{
												"expression": {
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 719,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "3357:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$407_storage_ptr",
																"typeString": "struct TreasuryDAO.Proposal storage pointer"
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3366:10:7",
														"memberName": "unlockTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 402,
														"src": "3357:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 722,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3379:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3385:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3379:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3438",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3397:8:7",
															"subdenomination": "hours",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_172800_by_1",
																"typeString": "int_const 172800"
															},
															"value": "48"
														},
														"src": "3379:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3357:48:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "3357:48:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 729,
															"name": "proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "3438:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 728,
														"name": "ProposalExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "3421:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3421:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "EmitStatement",
												"src": "3416:33:7"
											}
										]
									},
									"functionSelector": "0d61b519",
									"id": 733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "executeProposal",
									"nameLocation": "2930:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "2951:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "2946:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2946:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2945:17:7"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2970:0:7"
									},
									"scope": 931,
									"src": "2921:534:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 767,
										"nodeType": "Block",
										"src": "3507:230:7",
										"statements": [
											{
												"assignments": [
													740
												],
												"declarations": [
													{
														"constant": false,
														"id": 740,
														"mutability": "mutable",
														"name": "proposal",
														"nameLocation": "3533:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 767,
														"src": "3516:25:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$407_storage_ptr",
															"typeString": "struct TreasuryDAO.Proposal"
														},
														"typeName": {
															"id": 739,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 738,
																"name": "Proposal",
																"nameLocations": [
																	"3516:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 407,
																"src": "3516:8:7"
															},
															"referencedDeclaration": 407,
															"src": "3516:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$407_storage_ptr",
																"typeString": "struct TreasuryDAO.Proposal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 744,
												"initialValue": {
													"baseExpression": {
														"id": 741,
														"name": "proposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "3544:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Proposal_$407_storage_$dyn_storage",
															"typeString": "struct TreasuryDAO.Proposal storage ref[] storage ref"
														}
													},
													"id": 743,
													"indexExpression": {
														"id": 742,
														"name": "proposalId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "3554:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3544:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$407_storage",
														"typeString": "struct TreasuryDAO.Proposal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3516:49:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 746,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3582:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3588:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3582:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 748,
																	"name": "proposal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "3601:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Proposal_$407_storage_ptr",
																		"typeString": "struct TreasuryDAO.Proposal storage pointer"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3610:10:7",
																"memberName": "unlockTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 402,
																"src": "3601:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3582:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6473206c6f636b6564",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3622:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_018f1785b284bc32ec1cf1cfd9ba8a094a3a5f66c46eb2d687bcaae2c8645394",
																"typeString": "literal_string \"Funds locked\""
															},
															"value": "Funds locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_018f1785b284bc32ec1cf1cfd9ba8a094a3a5f66c46eb2d687bcaae2c8645394",
																"typeString": "literal_string \"Funds locked\""
															}
														],
														"id": 745,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3574:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3574:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "3574:63:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 759,
																"name": "proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "3674:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$407_storage_ptr",
																	"typeString": "struct TreasuryDAO.Proposal storage pointer"
																}
															},
															"id": 760,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3683:6:7",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 394,
															"src": "3674:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 754,
																"name": "proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "3646:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$407_storage_ptr",
																	"typeString": "struct TreasuryDAO.Proposal storage pointer"
																}
															},
															"id": 757,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3655:9:7",
															"memberName": "recipient",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 392,
															"src": "3646:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 758,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3665:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3646:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3646:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "3646:44:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 764,
															"name": "proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "3720:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 763,
														"name": "FundsReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "3706:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3706:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 766,
												"nodeType": "EmitStatement",
												"src": "3701:30:7"
											}
										]
									},
									"functionSelector": "4d68282f",
									"id": 768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "releaseFunds",
									"nameLocation": "3470:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "3488:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "3483:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3483:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:17:7"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3507:0:7"
									},
									"scope": 931,
									"src": "3461:276:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 786,
										"nodeType": "Block",
										"src": "3796:124:7",
										"statements": [
											{
												"assignments": [
													null,
													774,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 774,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "3812:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 786,
														"src": "3808:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 773,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "3808:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 778,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 775,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "3827:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$84",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3837:15:7",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 83,
														"src": "3827:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3827:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3805:49:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 781,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "3878:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3870:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 779,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3870:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3870:14:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "316538",
														"id": 783,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3887:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000_by_1",
															"typeString": "int_const 100000000"
														},
														"value": "1e8"
													},
													"src": "3870:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 772,
												"id": 785,
												"nodeType": "Return",
												"src": "3863:27:7"
											}
										]
									},
									"functionSelector": "a607a8d9",
									"id": 787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getETHPrice",
									"nameLocation": "3752:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3763:2:7"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "3787:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3787:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3786:9:7"
									},
									"scope": 931,
									"src": "3743:177:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										96
									],
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "4056:275:7",
										"statements": [
											{
												"body": {
													"id": 841,
													"nodeType": "Block",
													"src": "4109:190:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "4126:22:7",
																		"subExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 808,
																					"name": "proposals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 415,
																					"src": "4127:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Proposal_$407_storage_$dyn_storage",
																						"typeString": "struct TreasuryDAO.Proposal storage ref[] storage ref"
																					}
																				},
																				"id": 810,
																				"indexExpression": {
																					"id": 809,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 798,
																					"src": "4137:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4127:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Proposal_$407_storage",
																					"typeString": "struct TreasuryDAO.Proposal storage ref"
																				}
																			},
																			"id": 811,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4140:8:7",
																			"memberName": "executed",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 400,
																			"src": "4127:21:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 813,
																					"name": "proposals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 415,
																					"src": "4152:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Proposal_$407_storage_$dyn_storage",
																						"typeString": "struct TreasuryDAO.Proposal storage ref[] storage ref"
																					}
																				},
																				"id": 815,
																				"indexExpression": {
																					"id": 814,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 798,
																					"src": "4162:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4152:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Proposal_$407_storage",
																					"typeString": "struct TreasuryDAO.Proposal storage ref"
																				}
																			},
																			"id": 816,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4165:5:7",
																			"memberName": "votes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 396,
																			"src": "4152:18:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_500000000000000000000_by_1",
																				"typeString": "int_const 500000000000000000000"
																			},
																			"id": 821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "353030",
																				"id": 817,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4174:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_500_by_1",
																					"typeString": "int_const 500"
																				},
																				"value": "500"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"id": 820,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 818,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4180:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"hexValue": "3138",
																					"id": 819,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4184:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_18_by_1",
																						"typeString": "int_const 18"
																					},
																					"value": "18"
																				},
																				"src": "4180:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				}
																			},
																			"src": "4174:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_500000000000000000000_by_1",
																				"typeString": "int_const 500000000000000000000"
																			}
																		},
																		"src": "4152:34:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "4126:60:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 824,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "4190:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4196:9:7",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "4190:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 826,
																				"name": "proposals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 415,
																				"src": "4209:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Proposal_$407_storage_$dyn_storage",
																					"typeString": "struct TreasuryDAO.Proposal storage ref[] storage ref"
																				}
																			},
																			"id": 828,
																			"indexExpression": {
																				"id": 827,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 798,
																				"src": "4219:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4209:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$407_storage",
																				"typeString": "struct TreasuryDAO.Proposal storage ref"
																			}
																		},
																		"id": 829,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4222:7:7",
																		"memberName": "endTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 398,
																		"src": "4209:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4190:39:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4126:103:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 840,
															"nodeType": "IfStatement",
															"src": "4122:168:7",
															"trueBody": {
																"id": 839,
																"nodeType": "Block",
																"src": "4231:59:7",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"hexValue": "74727565",
																					"id": 832,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4256:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				{
																					"arguments": [
																						{
																							"id": 835,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 798,
																							"src": "4273:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 833,
																							"name": "abi",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967295,
																							"src": "4262:3:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_abi",
																								"typeString": "abi"
																							}
																						},
																						"id": 834,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "4266:6:7",
																						"memberName": "encode",
																						"nodeType": "MemberAccess",
																						"src": "4262:10:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																							"typeString": "function () pure returns (bytes memory)"
																						}
																					},
																					"id": 836,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4262:13:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"id": 837,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4255:21:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																				"typeString": "tuple(bool,bytes memory)"
																			}
																		},
																		"functionReturnParameters": 796,
																		"id": 838,
																		"nodeType": "Return",
																		"src": "4248:28:7"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 801,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4082:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 802,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "4086:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$407_storage_$dyn_storage",
																"typeString": "struct TreasuryDAO.Proposal storage ref[] storage ref"
															}
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4096:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4086:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4082:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 842,
												"initializationExpression": {
													"assignments": [
														798
													],
													"declarations": [
														{
															"constant": false,
															"id": 798,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4075:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 842,
															"src": "4070:6:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 797,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4070:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 800,
													"initialValue": {
														"hexValue": "30",
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4079:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4070:10:7"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 806,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4104:3:7",
														"subExpression": {
															"id": 805,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "4104:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 807,
													"nodeType": "ExpressionStatement",
													"src": "4104:3:7"
												},
												"nodeType": "ForStatement",
												"src": "4065:234:7"
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "66616c7365",
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4315:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														{
															"hexValue": "",
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4322:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"id": 845,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4314:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$",
														"typeString": "tuple(bool,literal_string \"\")"
													}
												},
												"functionReturnParameters": 796,
												"id": 846,
												"nodeType": "Return",
												"src": "4307:18:7"
											}
										]
									},
									"functionSelector": "6e04ff0d",
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkUpkeep",
									"nameLocation": "3935:11:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 791,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3993:8:7"
									},
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "3947:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 788,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3947:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3946:32:7"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "upkeepNeeded",
												"nameLocation": "4016:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "4011:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 792,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4011:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "4043:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "4030:24:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 794,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4030:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4010:45:7"
									},
									"scope": 931,
									"src": "3926:405:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										102
									],
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "4406:100:7",
										"statements": [
											{
												"assignments": [
													855
												],
												"declarations": [
													{
														"constant": false,
														"id": 855,
														"mutability": "mutable",
														"name": "proposalId",
														"nameLocation": "4420:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 868,
														"src": "4415:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 854,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4415:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 863,
												"initialValue": {
													"arguments": [
														{
															"id": 858,
															"name": "performData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "4444:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"components": [
																{
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4458:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 859,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "4458:4:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 861,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4457:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															}
														],
														"expression": {
															"id": 856,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4433:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4437:6:7",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "4433:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4433:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4415:49:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 865,
															"name": "proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "4489:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 864,
														"name": "executeProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "4473:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4473:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 867,
												"nodeType": "ExpressionStatement",
												"src": "4473:27:7"
											}
										]
									},
									"functionSelector": "4585e33b",
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "performUpkeep",
									"nameLocation": "4346:13:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 852,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4397:8:7"
									},
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "4375:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "4360:26:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 849,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4360:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4359:28:7"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4406:0:7"
									},
									"scope": 931,
									"src": "4337:169:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "4570:75:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 881,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4607:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TreasuryDAO_$931",
																		"typeString": "contract TreasuryDAO"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TreasuryDAO_$931",
																		"typeString": "contract TreasuryDAO"
																	}
																],
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4599:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 879,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4599:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4599:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 883,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "4614:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 886,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4630:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TreasuryDAO_$931",
																		"typeString": "contract TreasuryDAO"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TreasuryDAO_$931",
																		"typeString": "contract TreasuryDAO"
																	}
																],
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4622:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 884,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4622:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4622:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4637:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 876,
															"name": "lendingPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "4579:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IAaveLendingPool_$386",
																"typeString": "contract IAaveLendingPool"
															}
														},
														"id": 878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4591:7:7",
														"memberName": "deposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 376,
														"src": "4579:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
															"typeString": "function (address,uint256,address,uint16) external"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4579:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "4579:60:7"
											}
										]
									},
									"functionSelector": "68fd2d80",
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 874,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 873,
												"name": "onlyOwner",
												"nameLocations": [
													"4560:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "4560:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4560:9:7"
										}
									],
									"name": "depositToAave",
									"nameLocation": "4521:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4543:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "4535:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4535:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4534:16:7"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4570:0:7"
									},
									"scope": 931,
									"src": "4512:133:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "4712:73:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 904,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4750:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TreasuryDAO_$931",
																		"typeString": "contract TreasuryDAO"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TreasuryDAO_$931",
																		"typeString": "contract TreasuryDAO"
																	}
																],
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4742:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 902,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4742:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4742:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 906,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "4757:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 909,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4773:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TreasuryDAO_$931",
																		"typeString": "contract TreasuryDAO"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TreasuryDAO_$931",
																		"typeString": "contract TreasuryDAO"
																	}
																],
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4765:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 907,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4765:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4765:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 899,
															"name": "lendingPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "4721:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IAaveLendingPool_$386",
																"typeString": "contract IAaveLendingPool"
															}
														},
														"id": 901,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4733:8:7",
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 385,
														"src": "4721:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address) external"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4721:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "4721:58:7"
											}
										]
									},
									"functionSelector": "688f237b",
									"id": 914,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 897,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 896,
												"name": "onlyOwner",
												"nameLocations": [
													"4702:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "4702:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4702:9:7"
										}
									],
									"name": "withdrawFromAave",
									"nameLocation": "4660:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4685:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "4677:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4677:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4676:16:7"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4712:0:7"
									},
									"scope": 931,
									"src": "4651:134:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "4825:2:7",
										"statements": []
									},
									"functionSelector": "d0e30db0",
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "4800:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4807:2:7"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4825:0:7"
									},
									"scope": 931,
									"src": "4791:36:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "4885:43:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 925,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "4909:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_TreasuryDAO_$931",
																	"typeString": "contract TreasuryDAO"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_TreasuryDAO_$931",
																	"typeString": "contract TreasuryDAO"
																}
															],
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4901:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 923,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4901:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4901:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4915:7:7",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "4901:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 922,
												"id": 928,
												"nodeType": "Return",
												"src": "4894:28:7"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "4842:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4852:2:7"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "4876:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4875:9:7"
									},
									"scope": 931,
									"src": "4833:95:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 932,
							"src": "522:4408:7",
							"usedErrors": [
								3,
								117,
								122
							],
							"usedEvents": [
								128,
								435,
								443,
								447,
								451
							]
						}
					],
					"src": "32:4899:7"
				},
				"id": 7
			}
		}
	}
}